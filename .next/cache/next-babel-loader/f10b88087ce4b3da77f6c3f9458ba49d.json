{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../db/models/index');\n\nimport middleware from '../../../middleware/auth';\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    query: {\n      nextPage\n    },\n    method,\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const province_id = slug;\n\n  const _district = await models.District.findAndCountAll({\n    attributes: ['district_name', 'district_id'],\n    where: {\n      province_id: province_id\n    },\n    order: [// Will escape title and validate DESC against a list of valid direction parameters\n    ['district_name', 'ASC']]\n  });\n\n  res.statusCode = 200;\n  res.json({\n    status: 'success',\n    data: _district.rows\n  });\n}) // Post method\n.post(async (req, res) => {\n  res.end('method - post');\n}) // Put method\n.put(async (req, res) => {\n  res.end('method - put');\n}) // Patch method\n.patch(async (req, res) => {\n  throw new Error('Throws me around! Error can be caught and handled.');\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/govermentlt/pages/api/district/[slug].js"],"names":["nextConnect","models","require","middleware","handler","use","get","req","res","query","nextPage","method","body","slug","province_id","_district","District","findAndCountAll","attributes","where","order","statusCode","json","status","data","rows","post","end","put","patch","Error"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,MAAMC,OAAO,GAAGJ,WAAW,GACzB;AADyB,CAExBK,GAFa,CAETF,UAFS,EAGd;AAHc,CAIbG,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFL,GAJJ;AAKA,QAAM;AAAEM,IAAAA;AAAF,MAAWN,GAAG,CAACE,KAArB;AACA,QAAMK,WAAW,GAAGD,IAApB;;AACA,QAAME,SAAS,GAAG,MAAMd,MAAM,CAACe,QAAP,CAAgBC,eAAhB,CAAgC;AACtDC,IAAAA,UAAU,EAAE,CACV,eADU,EACO,aADP,CAD0C;AAItDC,IAAAA,KAAK,EAAE;AACLL,MAAAA,WAAW,EAAEA;AADR,KAJ+C;AAOtDM,IAAAA,KAAK,EAAE,CACL;AACA,KAAC,eAAD,EAAkB,KAAlB,CAFK;AAP+C,GAAhC,CAAxB;;AAaAZ,EAAAA,GAAG,CAACa,UAAJ,GAAiB,GAAjB;AACAb,EAAAA,GAAG,CAACc,IAAJ,CAAS;AACPC,IAAAA,MAAM,EAAE,SADD;AAEPC,IAAAA,IAAI,EAAET,SAAS,CAACU;AAFT,GAAT;AAID,CA9Ba,EA+Bd;AA/Bc,CAgCbC,IAhCa,CAgCR,OAAOnB,GAAP,EAAYC,GAAZ,KAAoB;AACxBA,EAAAA,GAAG,CAACmB,GAAJ,CAAQ,eAAR;AACD,CAlCa,EAmCd;AAnCc,CAoCbC,GApCa,CAoCT,OAAOrB,GAAP,EAAYC,GAAZ,KAAoB;AACvBA,EAAAA,GAAG,CAACmB,GAAJ,CAAQ,cAAR;AACD,CAtCa,EAuCd;AAvCc,CAwCbE,KAxCa,CAwCP,OAAOtB,GAAP,EAAYC,GAAZ,KAAoB;AACzB,QAAM,IAAIsB,KAAJ,CAAU,oDAAV,CAAN;AACD,CA1Ca,CAAhB;AA4CA,eAAe1B,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../db/models/index');\r\nimport middleware from '../../../middleware/auth';\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      query: { nextPage },\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { slug } = req.query;\r\n    const province_id = slug;\r\n    const _district = await models.District.findAndCountAll({\r\n      attributes: [\r\n        'district_name', 'district_id'\r\n      ],\r\n      where: {\r\n        province_id: province_id,\r\n      },\r\n      order: [\r\n        // Will escape title and validate DESC against a list of valid direction parameters\r\n        ['district_name', 'ASC'],\r\n      ]\r\n    });\r\n\r\n    res.statusCode = 200;\r\n    res.json({\r\n      status: 'success',\r\n      data: _district.rows,\r\n    });\r\n  })\r\n  // Post method\r\n  .post(async (req, res) => {\r\n    res.end('method - post');\r\n  })\r\n  // Put method\r\n  .put(async (req, res) => {\r\n    res.end('method - put');\r\n  })\r\n  // Patch method\r\n  .patch(async (req, res) => {\r\n    throw new Error('Throws me around! Error can be caught and handled.');\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}