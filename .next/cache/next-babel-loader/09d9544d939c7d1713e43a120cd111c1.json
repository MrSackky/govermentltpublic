{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\n\nconst models = require('../../../db/models/index');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    organization_id\n  } = req.query; // console.log(_search)\n\n  const _theme = await models.theme.findAndCountAll({\n    attributes: ['organization_id', 'theme_code', 'theme_title', 'theme_cover', 'theme_detail', 'theme_path', 'is_used', 'is_custom', 'theme_id'],\n    where: {\n      is_used: 1,\n      [Op.or]: [{\n        organization_id: organization_id\n      }, {\n        is_custom: 0\n      }]\n    }\n  });\n\n  return res.status(200).json({\n    results: _theme.rows,\n    totalCount: _theme.count\n  });\n});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/theme/index.js"],"names":["nextConnect","middleware","models","require","Sequelize","Op","handler","use","get","req","res","method","body","organization_id","query","_theme","theme","findAndCountAll","attributes","where","is_used","or","is_custom","status","json","results","rows","totalCount","count"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;AAEA,MAAMC,OAAO,GAAGN,WAAW,GACzB;AADyB,CAExBO,GAFa,CAETN,UAFS,EAGd;AAHc,CAIbO,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA;AAFI,MAGFH,GAHJ;AAIA,QAAM;AAAEI,IAAAA;AAAF,MAAsBJ,GAAG,CAACK,KAAhC,CALuB,CAMvB;;AACA,QAAMC,MAAM,GAAG,MAAMb,MAAM,CAACc,KAAP,CAAaC,eAAb,CAA6B;AAChDC,IAAAA,UAAU,EAAE,CACV,iBADU,EAEV,YAFU,EAGV,aAHU,EAIV,aAJU,EAKV,cALU,EAMV,YANU,EAOV,SAPU,EAQV,WARU,EASV,UATU,CADoC;AAYhDC,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,CADJ;AAEL,OAACf,EAAE,CAACgB,EAAJ,GAAS,CAAC;AACRR,QAAAA,eAAe,EAAEA;AADT,OAAD,EAGT;AACES,QAAAA,SAAS,EAAE;AADb,OAHS;AAFJ;AAZyC,GAA7B,CAArB;;AAsBA,SAAOZ,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,OAAO,EAAEV,MAAM,CAACW,IADU;AAE1BC,IAAAA,UAAU,EAAEZ,MAAM,CAACa;AAFO,GAArB,CAAP;AAKD,CAtCa,CAAhB;AAwCA,eAAetB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nconst models = require('../../../db/models/index');\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { organization_id } = req.query;\r\n    // console.log(_search)\r\n    const _theme = await models.theme.findAndCountAll({\r\n      attributes: [\r\n        'organization_id',\r\n        'theme_code',\r\n        'theme_title',\r\n        'theme_cover',\r\n        'theme_detail',\r\n        'theme_path',\r\n        'is_used',\r\n        'is_custom',\r\n        'theme_id',\r\n      ],\r\n      where: {\r\n        is_used: 1,\r\n        [Op.or]: [{\r\n          organization_id: organization_id,\r\n        },\r\n        {\r\n          is_custom: 0,\r\n        }],\r\n      },\r\n    });\r\n    return res.status(200).json({\r\n      results: _theme.rows,\r\n      totalCount: _theme.count\r\n    });\r\n\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}