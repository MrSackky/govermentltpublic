{"ast":null,"code":"var _jsxFileName = \"D:\\\\govermentlt\\\\pages\\\\admin\\\\management\\\\polls\\\\[pollId].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { DragOutlined } from '@ant-design/icons';\nimport { Button, DatePicker, Empty, Form, List, Modal, notification, Row, Select, Spin, Switch, Typography, Upload } from 'antd';\nimport moment from 'moment';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router'; // import UserNav from '../components/navigation/User';\n\nimport { useEffect, useRef, useState } from 'react';\nimport ReactDragListView from 'react-drag-listview';\n/* components */\n\nimport Layout from '../../../../components/layout/LayoutAdmin';\nimport ModalAddMenu from '../../../../components/managemnet/poll-menu/add-menu';\nimport ModalAddMenuSub from '../../../../components/managemnet/poll-menu/add-menu-sub';\nimport ModalEditMenu from '../../../../components/managemnet/poll-menu/edit-menu';\nimport ModalEditMenuSub from '../../../../components/managemnet/poll-menu/edit-menu-sub';\n/* utils */\n\nimport { absoluteUrl, apiInstance, convertDateDBtoDatePickerWithTime } from '../../../../middleware/utils';\nconst {\n  Text,\n  Title\n} = Typography;\nconst {\n  Option\n} = Select;\nconst JoditEditor = dynamic(() => import('jodit-react'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('jodit-react')],\n    modules: ['jodit-react']\n  }\n});\n\nconst config = require('./../../config');\n\nexport default function Home(props) {\n  const editor = useRef(null);\n  const {\n    0: content,\n    1: setContent\n  } = useState('');\n  const {\n    user,\n    origin\n  } = props;\n  const {\n    0: url,\n    1: setUrl\n  } = useState('');\n  const {\n    0: pollData,\n    1: setPollData\n  } = useState(null);\n  const {\n    0: menus,\n    1: setMenus\n  } = useState([]);\n  const {\n    0: questions,\n    1: setQuestions\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: dataDelete,\n    1: setDataDelete\n  } = useState(null);\n  const {\n    0: dataEdit,\n    1: setDataEdit\n  } = useState(null);\n  const {\n    0: visibleModalDelete,\n    1: setVisibleModalDelete\n  } = useState(false);\n  const {\n    0: visibleEditModal,\n    1: setVisibleEditModal\n  } = useState(false);\n  const {\n    0: visibleEditMenuSubModal,\n    1: setVisibleEditMenuSubModal\n  } = useState(false);\n  const {\n    0: visibleAddSubMenuModal,\n    1: setVisibleAddSubMenuModal\n  } = useState(false);\n  const {\n    0: visibleModalMenuSubDelete,\n    1: setVisibleModalMenuSubDelete\n  } = useState(false);\n  const {\n    0: fields,\n    1: setFields\n  } = useState([{\n    name: ['poll_title'],\n    value: ''\n  }]);\n  const [api, contextHolder] = notification.useNotification();\n  const router = useRouter();\n  const {\n    pollId\n  } = router.query;\n  const {\n    Dragger\n  } = Upload;\n  const {\n    0: date,\n    1: setDate\n  } = useState('');\n  const {\n    0: active,\n    1: setActive\n  } = useState(1);\n  const [form] = Form.useForm();\n\n  async function onSubmitHandler(value) {\n    var date_s_Str = moment(value.poll_date_s).format();\n    var date_e_Str = moment(value.poll_date_e).format();\n    const data = {\n      poll_title: value.poll_title,\n      poll_date_s: date_s_Str,\n      poll_detail: value.poll_detail,\n      poll_date_e: date_e_Str,\n      is_identity: active\n    }; // console.log(data)\n\n    const registerData = await apiInstance().put('/poll/' + pollId, data);\n\n    if (registerData.data.status == 200) {\n      openNotificationRegisterSuccess();\n      fetchPollData();\n      setTimeout(function () {\n        //Start the timer\n        router.push('/admin/management/polls');\n      }.bind(this), 2000);\n    } else {\n      openNotificationRegisterFail(registerData.data.message);\n    }\n  }\n\n  const openNotificationRegisterSuccess = () => {\n    api.success({\n      message: `บันทึกข้อมูลสำเร็จ`,\n      description: 'บันทึกข้อมูลสำเร็จ',\n      placement: 'topRight'\n    });\n  };\n\n  const openNotificationRegisterFail = messgae => {\n    api.error({\n      message: `พบปัญหาระหว่างการบันทึกข้อมูล`,\n      description: messgae,\n      placement: 'topRight'\n    });\n  };\n\n  const onDelete = async value => {\n    // console.log('DELETE')\n    const registerData = await apiInstance().delete('pollmenu/' + dataDelete.poll_questions_id, {});\n\n    if (registerData.data.status == 200) {\n      openNotificationSuccess(); // fetchOrganizationData();\n\n      setVisibleModalDelete(false);\n      fetch();\n      fetchPollQuestionData();\n    } else {\n      openNotificationFail(registerData.data.message);\n    }\n  };\n\n  const onMenuSubDelete = async value => {\n    // console.log('DELETE')\n    const registerData = await apiInstance().delete('pollmenu/poll-option/' + dataDelete.poll_option_id, {});\n\n    if (registerData.data.status == 200) {\n      openNotificationSuccess(); // fetchOrganizationData();\n\n      setVisibleModalMenuSubDelete(false);\n      fetch();\n      fetchPollQuestionData();\n    } else {\n      openNotificationFail(registerData.data.message);\n    }\n  };\n\n  const fetch = async (params = {}) => {\n    setLoading(true); // setVisibleEditModal(false)\n\n    const menuData = await apiInstance().get('pollmenu?organization_id=' + (!user ? 0 : user.organization_id));\n    console.log(menuData);\n    setMenus(menuData.data.results);\n    setTimeout(function () {\n      //Start the timer\n      setLoading(false);\n    }.bind(this), 800);\n  };\n\n  const hideModal = () => {\n    setVisibleModalDelete(false);\n  };\n\n  const hideMenuSubModal = () => {\n    setVisibleModalMenuSubDelete(false);\n  };\n\n  const showModal = data => {\n    console.log('data deletd');\n    console.log(data);\n    setDataDelete(data);\n    setVisibleModalDelete(true);\n  };\n\n  const showDeletMenuSubModal = data => {\n    console.log('data deletd');\n    console.log(data);\n    setDataDelete(data);\n    setVisibleModalMenuSubDelete(true);\n  };\n\n  const onclikEditModal = (value, obj) => {\n    // compareSync\n    console.log('onclikEditModal');\n    setDataEdit(obj);\n    setVisibleEditModal(value);\n  };\n\n  const onclikEditMenuSubModal = (value, obj) => {\n    // compareSync\n    setDataEdit(obj);\n    setVisibleEditMenuSubModal(value);\n  };\n\n  const onclikAddSubMenuModal = (value, obj) => {\n    // compareSync\n    console.log('onclikEditModal');\n    setDataEdit(obj);\n    setVisibleAddSubMenuModal(value);\n  };\n\n  const hideEditModal = () => {\n    // setVisibleModalDelete(false)\n    setVisibleEditModal(false);\n  };\n\n  const hideSubMenuModal = () => {\n    // setVisibleModalDelete(false)\n    setVisibleAddSubMenuModal(false);\n  };\n\n  const hideEditMenuSubModal = () => {\n    // setVisibleModalDelete(false)\n    setVisibleEditMenuSubModal(false);\n  };\n\n  useEffect(() => {\n    fetchPollData();\n    fetchPollQuestionData();\n  }, []);\n\n  const onResetForm = () => {\n    setActive(pollData.is_use == 1 ? 1 : 0);\n    setFields([{\n      name: ['poll_title'],\n      value: pollData.poll_title\n    }, {\n      name: ['poll_date_s'],\n      value: moment(convertDateDBtoDatePickerWithTime(pollData.data.poll.poll_date_s))\n    }, {\n      name: ['poll_date_e'],\n      value: moment(convertDateDBtoDatePickerWithTime(pollData.data.poll.poll_date_e))\n    }, {\n      name: ['poll_detail'],\n      value: pollData.poll_detail\n    }, {\n      name: ['is_identity'],\n      value: pollData.is_identity\n    }]);\n  };\n\n  const fetchPollQuestionData = async () => {\n    setLoading(true);\n\n    const _pollQuestionData = await apiInstance().get('pollmenu/' + pollId);\n\n    console.log(_pollQuestionData);\n    setQuestions(_pollQuestionData.data.pollQuestions);\n    setLoading(false);\n  };\n\n  const fetchPollData = async () => {\n    const _pollData = await apiInstance().get('poll/' + pollId);\n\n    console.log(_pollData.data.poll.poll_date_s);\n    console.log(_pollData.data.poll.poll_date_e);\n    console.log(convertDateDBtoDatePickerWithTime(_pollData.data.poll.poll_date_s));\n    console.log(convertDateDBtoDatePickerWithTime(_pollData.data.poll.poll_date_e));\n    setActive(_pollData.data.poll.is_identity);\n    setFields([{\n      name: ['poll_title'],\n      value: _pollData.data.poll.poll_title\n    }, {\n      name: ['poll_date_s'],\n      value: moment(convertDateDBtoDatePickerWithTime(_pollData.data.poll.poll_date_s))\n    }, {\n      name: ['poll_date_e'],\n      value: moment(convertDateDBtoDatePickerWithTime(_pollData.data.poll.poll_date_e))\n    }, {\n      name: ['poll_detail'],\n      value: _pollData.data.poll.poll_detail\n    }, {\n      name: ['is_identity'],\n      value: _pollData.data.poll.is_identity\n    }]);\n  };\n\n  function onChange(value, dateString) {\n    // console.log('Selected Time: ', value);\n    // console.log('Formatted Selected Time: ', dateString);\n    setDate(dateString);\n  }\n\n  const onDragEnd = async (fromIndex, toIndex, type, index) => {\n    setLoading(true);\n    /* IGNORES DRAG IF OUTSIDE DESIGNATED AREA */\n\n    if (toIndex < 0) return;\n    /* REORDER PARENT OR SUBLIST, ELSE THROW ERROR */\n\n    if (type === 'LIST-ITEM') {\n      const _data = {\n        menu_id: questions[fromIndex].poll_questions_id,\n        menu_seq: toIndex\n      };\n      const menuData = await apiInstance().put('pollmenu/reorder-menu', _data);\n      const _dataRevert = {\n        menu_id: questions[toIndex].poll_questions_id,\n        menu_seq: fromIndex\n      };\n      const menuDataRevert = await apiInstance().put('pollmenu/reorder-menu', _dataRevert); // console.log(menuDataRevert)\n\n      return fetchPollQuestionData(); // const categories = reorder(data, fromIndex, toIndex);\n      // return setData(categories);\n    } else if (type === 'SUBLIST-ITEM') {\n      const _data = {\n        menu_id: questions[index].options[fromIndex].poll_option_id,\n        menu_seq: toIndex\n      };\n      const menuData = await apiInstance().put('pollmenu/reorder-menu-options', _data);\n      const _dataRevert = {\n        menu_id: questions[index].options[toIndex].poll_option_id,\n        menu_seq: fromIndex\n      };\n      const menuDataRevert = await apiInstance().put('pollmenu/reorder-menu-options', _dataRevert);\n      return fetchPollQuestionData();\n    } else return new Error('NOT A VALID LIST');\n  };\n\n  const openNotificationSuccess = () => {\n    api.success({\n      message: `ลบข้อมูลสำเร็จ`,\n      description: 'ลบข้อมูลสำเร็จ',\n      placement: 'topRight'\n    });\n  };\n\n  const openNotificationFail = messgae => {\n    api.error({\n      message: `พบปัญหาระหว่างการลบข้อมูล`,\n      description: messgae,\n      placement: 'topRight'\n    });\n  };\n\n  return __jsx(Layout, {\n    title: \"Government - Admin management\",\n    titlePage: 'แก้ไขแบบสำรวจความคิดเห็น ' + (pollData ? pollData.poll_title : ''),\n    url: origin,\n    indexSubMenu: '1',\n    indexMenu: 'sub-1-6',\n    titlePage: \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E41\\u0E1A\\u0E1A\\u0E2A\\u0E33\\u0E23\\u0E27\\u0E08\\u0E04\\u0E27\\u0E32\\u0E21\\u0E04\\u0E34\\u0E14\\u0E40\\u0E2B\\u0E47\\u0E19\",\n    _routes: [{\n      path: '/admin/dashborad',\n      breadcrumbName: 'หน้าหลัก'\n    }, {\n      path: '/admin/management/polls',\n      breadcrumbName: 'จัดการแบบสำรวจความคิดเห็น'\n    }, {\n      path: '/admin/management/polls/add-poll',\n      breadcrumbName: 'แก้ไขแบบสำรวจความคิดเห็น'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }\n  }, contextHolder, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    name: \"basic\",\n    className: \"w-full\" // initialValues={{ email: email, invitationCode: code }}\n    ,\n    layout: \"vertical\",\n    onFinish: onSubmitHandler // onFinishFailed={onFinishFailed}\n    ,\n    requiredMark: true,\n    fields: fields,\n    form: form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"poll_title\",\n    label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E41\\u0E1A\\u0E1A\\u0E2A\\u0E33\\u0E23\\u0E27\\u0E08\",\n    className: \"block text-gray-700 text-sm font-bold mb-2 w-full form-organization\",\n    rules: [{\n      required: true,\n      message: 'กรุณากรอกชื่อแบบสำรวจ'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n    id: \"#\",\n    type: \"text\",\n    placeholder: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E41\\u0E1A\\u0E1A\\u0E2A\\u0E33\\u0E23\\u0E27\\u0E08\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Item, {\n    name: \"poll_detail\",\n    label: \"\\u0E04\\u0E33\\u0E2D\\u0E18\\u0E34\\u0E1A\\u0E32\\u0E22\\u0E41\\u0E1A\\u0E1A\\u0E2A\\u0E33\\u0E23\\u0E27\\u0E08\",\n    className: \"block text-gray-700 text-sm font-bold mb-2 w-full form-organization\",\n    style: {\n      textAlign: 'left !important'\n    },\n    rules: [{\n      required: true,\n      message: 'กรุณากรอกคำอธิบายแบบสำรวจ'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }, __jsx(JoditEditor, {\n    ref: editor,\n    value: content,\n    config: config.config(user),\n    height: '700px',\n    tabIndex: 1 // tabIndex of textarea\n    ,\n    onBlur: newContent => setContent(newContent) // preferred to use only this option to update the content for performance reasons\n    ,\n    onChange: newContent => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Item, {\n    name: \"poll_date_s\",\n    label: \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48\\u0E40\\u0E1B\\u0E34\\u0E14\\u0E43\\u0E2B\\u0E49\\u0E41\\u0E2A\\u0E14\\u0E07\\u0E04\\u0E27\\u0E32\\u0E21\\u0E04\\u0E34\\u0E14\\u0E40\\u0E2B\\u0E47\\u0E19\",\n    className: \"block text-gray-700 text-sm font-bold mb-2 w-full form-organization\",\n    style: {\n      textAlign: 'left !important'\n    },\n    rules: [{\n      required: true,\n      message: 'กรุณากรอกเลือกวันที่เปิดให้แสดงความคิดเห็น'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, __jsx(DatePicker, {\n    className: \"w-full\",\n    showTime: true,\n    onChange: onChange,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Item, {\n    name: \"poll_date_e\",\n    label: \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48\\u0E1B\\u0E34\\u0E14\\u0E43\\u0E2B\\u0E49\\u0E41\\u0E2A\\u0E14\\u0E07\\u0E04\\u0E27\\u0E32\\u0E21\\u0E04\\u0E34\\u0E14\\u0E40\\u0E2B\\u0E47\\u0E19\",\n    className: \"block text-gray-700 text-sm font-bold mb-2 w-full form-organization\",\n    style: {\n      textAlign: 'left !important'\n    },\n    rules: [{\n      required: true,\n      message: 'กรุณากรอกเลือกวันที่ปิดให้แสดงความคิดเห็น'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }\n  }, __jsx(DatePicker, {\n    className: \"w-full\",\n    showTime: true,\n    onChange: onChange,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  }), __jsx(Form.Item, {\n    className: \"flex mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"lg:inline-flex w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"lg:inline-flex text-left w-1/2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 17\n    }\n  }, __jsx(Switch, {\n    className: \"swt-btn\",\n    checked: active,\n    onClick: value => setActive(value ? 1 : 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 19\n    }\n  }), __jsx(\"p\", {\n    className: \"mx-2 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 19\n    }\n  }, \"\\u0E01\\u0E32\\u0E23\\u0E41\\u0E2A\\u0E14\\u0E07\\u0E1C\\u0E25\")), __jsx(\"div\", {\n    className: \"text-center lg:text-right w-full lg:w-1/2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    htmlType: \"button\",\n    onClick: onResetForm,\n    style: {\n      backgroundColor: '#C2CFE0',\n      borderColor: '#C2CFE0',\n      height: 40,\n      width: 110,\n      marginBottom: '0px !important',\n      marginRight: '2px',\n      color: 'white !important'\n    } // htmlType=\"submit\"\n    ,\n    className: \"text-center bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full lg:w-1/4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    className: \"text-custom-black \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 21\n    }\n  }, \"\\u0E23\\u0E35\\u0E40\\u0E0B\\u0E47\\u0E17\")), __jsx(Button // type=\"primary\"\n  , {\n    style: {\n      backgroundColor: '#059669',\n      borderColor: '#059669',\n      height: 40,\n      width: 110,\n      marginBottom: '0px !important',\n      color: 'white !important'\n    },\n    htmlType: \"submit\",\n    className: \"text-center bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full lg:w-1/4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    className: \"text-custom-white \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 21\n    }\n  }, \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"))))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 13\n    }\n  }, __jsx(ModalAddMenu, {\n    fetch: fetch,\n    user: user,\n    pollId: pollId,\n    fetchPollQuestionData: fetchPollQuestionData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 15\n    }\n  }), __jsx(ModalEditMenu, {\n    _visible: visibleEditModal,\n    hideEditModal: hideEditModal,\n    fetch: fetchPollQuestionData,\n    user: user,\n    dataEdit: dataEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 15\n    }\n  }), __jsx(ModalEditMenuSub, {\n    _visible: visibleEditMenuSubModal,\n    hideModal: hideEditMenuSubModal,\n    fetch: fetchPollQuestionData,\n    dataEdit: dataEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 15\n    }\n  }), __jsx(ModalAddMenuSub, {\n    _visible: visibleAddSubMenuModal,\n    hideModal: hideSubMenuModal,\n    fetch: fetchPollQuestionData,\n    dataEdit: dataEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 15\n    }\n  }), __jsx(Spin, {\n    spinning: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 15\n    }\n  }, __jsx(ReactDragListView, {\n    nodeSelector: \".ant-list.draggable\",\n    lineClassName: \"dragLine\",\n    onDragEnd: (fromIndex, toIndex) => onDragEnd(fromIndex, toIndex, 'LIST-ITEM'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 17\n    }\n  }, questions.length == 0 && __jsx(Empty, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 45\n    }\n  }), questions.map((obj, index) => __jsx(List, {\n    header: __jsx(React.Fragment, null, __jsx(Typography.Text, {\n      strong: true,\n      className: \"grabbable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 27\n      }\n    }, __jsx(DragOutlined, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 29\n      }\n    }), obj.poll_questions_title), __jsx(Button, {\n      className: \"ml-2\",\n      type: \"default\",\n      onClick: () => {\n        onclikEditModal(true, obj);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 27\n      }\n    }, \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\"), __jsx(Button, {\n      style: {\n        backgroundColor: '#059669',\n        color: 'white',\n        borderColor: '#059669'\n      },\n      onClick: () => {\n        onclikAddSubMenuModal(true, obj);\n      },\n      className: \"ml-2\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 27\n      }\n    }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E15\\u0E31\\u0E27\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\"), __jsx(Button, {\n      className: \"ml-2\",\n      type: \"danger\",\n      onClick: () => showModal(obj),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 27\n      }\n    }, \"\\u0E25\\u0E1A\")),\n    key: index,\n    className: \"draggable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 21\n    }\n  }, __jsx(ReactDragListView, {\n    nodeSelector: \".ant-list-item.draggable-item\",\n    lineClassName: \"dragLine\",\n    onDragEnd: (fromIndex, toIndex) => onDragEnd(fromIndex, toIndex, 'SUBLIST-ITEM', index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 23\n    }\n  }, __jsx(React.Fragment, null, obj.options.map((item, index2) => __jsx(List.Item, {\n    key: index2,\n    className: \"draggable-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 29\n    }\n  }, __jsx(DragOutlined, {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 31\n    }\n  }), __jsx(List.Item.Meta, {\n    title: item.poll_options_name + \" ( \" + item.poll_options_score + \" ) | จำนวนผู้เลือกตัวเลือกนี้ ( \" + item.poll_option_total_score + \" )\",\n    className: \"grabbable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 31\n    }\n  }), __jsx(Button, {\n    className: \"mr-1\",\n    type: \"default\",\n    onClick: () => {\n      onclikEditMenuSubModal(true, item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 31\n    }\n  }, \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\"), __jsx(Button, {\n    className: \"mr-2\",\n    type: \"danger\",\n    onClick: () => showDeletMenuSubModal(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 31\n    }\n  }, \"\\u0E25\\u0E1A\")))))))))), __jsx(Modal, {\n    title: \"\\u0E04\\u0E38\\u0E13\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23\\u0E25\\u0E1A\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E44\\u0E21\\u0E48?\",\n    visible: visibleModalDelete,\n    onOk: onDelete,\n    onCancel: hideModal,\n    okText: \"\\u0E25\\u0E1A\",\n    cancelText: \"\\u0E22\\u0E01\\u0E40\\u0E25\\u0E34\\u0E01\",\n    okButtonProps: {\n      type: 'primary',\n      danger: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 15\n    }\n  }, \"\\u0E04\\u0E38\\u0E13\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23\\u0E25\\u0E1A \\\"\", dataDelete ? dataDelete.poll_questions_title : '', \"\\\" \\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E44\\u0E21\\u0E48?\", ' ')), __jsx(Modal, {\n    title: \"\\u0E04\\u0E38\\u0E13\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23\\u0E25\\u0E1A\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E44\\u0E21\\u0E48?\",\n    visible: visibleModalMenuSubDelete,\n    onOk: onMenuSubDelete,\n    onCancel: hideMenuSubModal,\n    okText: \"\\u0E25\\u0E1A\",\n    cancelText: \"\\u0E22\\u0E01\\u0E40\\u0E25\\u0E34\\u0E01\",\n    okButtonProps: {\n      type: 'primary',\n      danger: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 15\n    }\n  }, \"\\u0E04\\u0E38\\u0E13\\u0E15\\u0E49\\u0E2D\\u0E07\\u0E01\\u0E32\\u0E23\\u0E25\\u0E1A \\\"\", dataDelete ? dataDelete.poll_options_name : '', \"\\\" \\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E44\\u0E21\\u0E48?\", ' '))))));\n}\n/* getServerSideProps */\n\nexport async function getServerSideProps(context) {\n  const {\n    req\n  } = context;\n  const {\n    origin\n  } = absoluteUrl(req);\n  return {\n    props: {\n      origin\n    }\n  };\n}","map":{"version":3,"sources":["D:/govermentlt/pages/admin/management/polls/[pollId].js"],"names":["DragOutlined","Button","DatePicker","Empty","Form","List","Modal","notification","Row","Select","Spin","Switch","Typography","Upload","moment","dynamic","useRouter","useEffect","useRef","useState","ReactDragListView","Layout","ModalAddMenu","ModalAddMenuSub","ModalEditMenu","ModalEditMenuSub","absoluteUrl","apiInstance","convertDateDBtoDatePickerWithTime","Text","Title","Option","JoditEditor","ssr","config","require","Home","props","editor","content","setContent","user","origin","url","setUrl","pollData","setPollData","menus","setMenus","questions","setQuestions","loading","setLoading","dataDelete","setDataDelete","dataEdit","setDataEdit","visibleModalDelete","setVisibleModalDelete","visibleEditModal","setVisibleEditModal","visibleEditMenuSubModal","setVisibleEditMenuSubModal","visibleAddSubMenuModal","setVisibleAddSubMenuModal","visibleModalMenuSubDelete","setVisibleModalMenuSubDelete","fields","setFields","name","value","api","contextHolder","useNotification","router","pollId","query","Dragger","date","setDate","active","setActive","form","useForm","onSubmitHandler","date_s_Str","poll_date_s","format","date_e_Str","poll_date_e","data","poll_title","poll_detail","is_identity","registerData","put","status","openNotificationRegisterSuccess","fetchPollData","setTimeout","push","bind","openNotificationRegisterFail","message","success","description","placement","messgae","error","onDelete","delete","poll_questions_id","openNotificationSuccess","fetch","fetchPollQuestionData","openNotificationFail","onMenuSubDelete","poll_option_id","params","menuData","get","organization_id","console","log","results","hideModal","hideMenuSubModal","showModal","showDeletMenuSubModal","onclikEditModal","obj","onclikEditMenuSubModal","onclikAddSubMenuModal","hideEditModal","hideSubMenuModal","hideEditMenuSubModal","onResetForm","is_use","poll","_pollQuestionData","pollQuestions","_pollData","onChange","dateString","onDragEnd","fromIndex","toIndex","type","index","_data","menu_id","menu_seq","_dataRevert","menuDataRevert","options","Error","path","breadcrumbName","required","clear","textAlign","newContent","width","backgroundColor","borderColor","height","marginBottom","marginRight","color","length","map","poll_questions_title","item","index2","poll_options_name","poll_options_score","poll_option_total_score","danger","getServerSideProps","context","req"],"mappings":"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","sourcesContent":["import { DragOutlined } from '@ant-design/icons';\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Empty,\r\n  Form, List, Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Spin,\r\n  Switch,\r\n  Typography,\r\n  Upload\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport dynamic from 'next/dynamic';\r\nimport { useRouter } from 'next/router';\r\n// import UserNav from '../components/navigation/User';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactDragListView from 'react-drag-listview';\r\n/* components */\r\nimport Layout from '../../../../components/layout/LayoutAdmin';\r\nimport ModalAddMenu from '../../../../components/managemnet/poll-menu/add-menu';\r\nimport ModalAddMenuSub from '../../../../components/managemnet/poll-menu/add-menu-sub';\r\nimport ModalEditMenu from '../../../../components/managemnet/poll-menu/edit-menu';\r\nimport ModalEditMenuSub from '../../../../components/managemnet/poll-menu/edit-menu-sub';\r\n/* utils */\r\nimport {\r\n  absoluteUrl,\r\n  apiInstance,\r\n  convertDateDBtoDatePickerWithTime\r\n} from '../../../../middleware/utils';\r\n\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\nconst JoditEditor = dynamic(() => import('jodit-react'), { ssr: false });\r\nconst config = require('./../../config');\r\n\r\nexport default function Home(props) {\r\n  const editor = useRef(null);\r\n  const [content, setContent] = useState('');\r\n  const { user, origin } = props;\r\n  const [url, setUrl] = useState('');\r\n  const [pollData, setPollData] = useState(null);\r\n  const [menus, setMenus] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataDelete, setDataDelete] = useState(null);\r\n  const [dataEdit, setDataEdit] = useState(null);\r\n  const [visibleModalDelete, setVisibleModalDelete] = useState(false);\r\n  const [visibleEditModal, setVisibleEditModal] = useState(false);\r\n  const [visibleEditMenuSubModal, setVisibleEditMenuSubModal] = useState(false);\r\n  const [visibleAddSubMenuModal, setVisibleAddSubMenuModal] = useState(false);\r\n  const [visibleModalMenuSubDelete, setVisibleModalMenuSubDelete] = useState(\r\n    false,\r\n  );\r\n  const [fields, setFields] = useState([\r\n    {\r\n      name: ['poll_title'],\r\n      value: '',\r\n    },\r\n  ]);\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const router = useRouter();\r\n  const { pollId } = router.query;\r\n  const { Dragger } = Upload;\r\n  const [date, setDate] = useState('');\r\n  const [active, setActive] = useState(1);\r\n  const [form] = Form.useForm();\r\n\r\n  async function onSubmitHandler(value) {\r\n    var date_s_Str = moment(value.poll_date_s).format();\r\n    var date_e_Str = moment(value.poll_date_e).format();\r\n    const data = {\r\n      poll_title: value.poll_title,\r\n      poll_date_s: date_s_Str,\r\n      poll_detail: value.poll_detail,\r\n      poll_date_e: date_e_Str,\r\n      is_identity: active,\r\n    };\r\n    // console.log(data)\r\n    const registerData = await apiInstance().put('/poll/' + pollId, data);\r\n    if (registerData.data.status == 200) {\r\n      openNotificationRegisterSuccess();\r\n      fetchPollData();\r\n      setTimeout(\r\n        function () {\r\n          //Start the timer\r\n          router.push('/admin/management/polls');\r\n        }.bind(this),\r\n        2000,\r\n      );\r\n    } else {\r\n      openNotificationRegisterFail(registerData.data.message);\r\n    }\r\n  }\r\n\r\n  const openNotificationRegisterSuccess = () => {\r\n    api.success({\r\n      message: `บันทึกข้อมูลสำเร็จ`,\r\n      description: 'บันทึกข้อมูลสำเร็จ',\r\n      placement: 'topRight',\r\n    });\r\n  };\r\n\r\n  const openNotificationRegisterFail = messgae => {\r\n    api.error({\r\n      message: `พบปัญหาระหว่างการบันทึกข้อมูล`,\r\n      description: messgae,\r\n      placement: 'topRight',\r\n    });\r\n  };\r\n\r\n  const onDelete = async value => {\r\n    // console.log('DELETE')\r\n\r\n    const registerData = await apiInstance().delete(\r\n      'pollmenu/' + dataDelete.poll_questions_id,\r\n      {},\r\n    );\r\n    if (registerData.data.status == 200) {\r\n      openNotificationSuccess();\r\n      // fetchOrganizationData();\r\n      setVisibleModalDelete(false);\r\n      fetch();\r\n      fetchPollQuestionData();\r\n    } else {\r\n      openNotificationFail(registerData.data.message);\r\n    }\r\n  };\r\n\r\n  const onMenuSubDelete = async value => {\r\n    // console.log('DELETE')\r\n\r\n    const registerData = await apiInstance().delete(\r\n      'pollmenu/poll-option/' + dataDelete.poll_option_id,\r\n      {},\r\n    );\r\n    if (registerData.data.status == 200) {\r\n      openNotificationSuccess();\r\n      // fetchOrganizationData();\r\n      setVisibleModalMenuSubDelete(false);\r\n      fetch();\r\n      fetchPollQuestionData();\r\n    } else {\r\n      openNotificationFail(registerData.data.message);\r\n    }\r\n  };\r\n\r\n  const fetch = async (params = {}) => {\r\n    setLoading(true);\r\n    // setVisibleEditModal(false)\r\n    const menuData = await apiInstance().get(\r\n      'pollmenu?organization_id=' + (!user ? 0 : user.organization_id),\r\n    );\r\n    console.log(menuData);\r\n    setMenus(menuData.data.results);\r\n    setTimeout(\r\n      function () {\r\n        //Start the timer\r\n        setLoading(false);\r\n      }.bind(this),\r\n      800,\r\n    );\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setVisibleModalDelete(false);\r\n  };\r\n\r\n  const hideMenuSubModal = () => {\r\n    setVisibleModalMenuSubDelete(false);\r\n  };\r\n\r\n  const showModal = data => {\r\n    console.log('data deletd');\r\n    console.log(data);\r\n    setDataDelete(data);\r\n    setVisibleModalDelete(true);\r\n  };\r\n  const showDeletMenuSubModal = data => {\r\n    console.log('data deletd');\r\n    console.log(data);\r\n    setDataDelete(data);\r\n    setVisibleModalMenuSubDelete(true);\r\n  };\r\n\r\n  const onclikEditModal = (value, obj) => {\r\n    // compareSync\r\n    console.log('onclikEditModal');\r\n    setDataEdit(obj);\r\n    setVisibleEditModal(value);\r\n  };\r\n\r\n  const onclikEditMenuSubModal = (value, obj) => {\r\n    // compareSync\r\n    setDataEdit(obj);\r\n    setVisibleEditMenuSubModal(value);\r\n  };\r\n\r\n  const onclikAddSubMenuModal = (value, obj) => {\r\n    // compareSync\r\n    console.log('onclikEditModal');\r\n    setDataEdit(obj);\r\n    setVisibleAddSubMenuModal(value);\r\n  };\r\n\r\n  const hideEditModal = () => {\r\n    // setVisibleModalDelete(false)\r\n    setVisibleEditModal(false);\r\n  };\r\n  const hideSubMenuModal = () => {\r\n    // setVisibleModalDelete(false)\r\n    setVisibleAddSubMenuModal(false);\r\n  };\r\n  const hideEditMenuSubModal = () => {\r\n    // setVisibleModalDelete(false)\r\n    setVisibleEditMenuSubModal(false);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchPollData();\r\n    fetchPollQuestionData();\r\n  }, []);\r\n\r\n  const onResetForm = () => {\r\n    setActive(pollData.is_use == 1 ? 1 : 0);\r\n    setFields([\r\n      {\r\n        name: ['poll_title'],\r\n        value: pollData.poll_title,\r\n      },\r\n      {\r\n        name: ['poll_date_s'],\r\n\r\n        value: moment(\r\n          convertDateDBtoDatePickerWithTime(pollData.data.poll.poll_date_s),\r\n        ),\r\n      },\r\n      {\r\n        name: ['poll_date_e'],\r\n\r\n        value: moment(\r\n          convertDateDBtoDatePickerWithTime(pollData.data.poll.poll_date_e),\r\n        ),\r\n      },\r\n      {\r\n        name: ['poll_detail'],\r\n        value: pollData.poll_detail,\r\n      },\r\n      {\r\n        name: ['is_identity'],\r\n        value: pollData.is_identity,\r\n      },\r\n    ]);\r\n  };\r\n  const fetchPollQuestionData = async () => {\r\n    setLoading(true)\r\n    const _pollQuestionData = await apiInstance().get('pollmenu/' + pollId);\r\n    console.log(_pollQuestionData)\r\n    setQuestions(_pollQuestionData.data.pollQuestions)\r\n    setLoading(false)\r\n\r\n  };\r\n  const fetchPollData = async () => {\r\n    const _pollData = await apiInstance().get('poll/' + pollId);\r\n    console.log(_pollData.data.poll.poll_date_s);\r\n    console.log(_pollData.data.poll.poll_date_e);\r\n    console.log(\r\n      convertDateDBtoDatePickerWithTime(_pollData.data.poll.poll_date_s),\r\n    );\r\n    console.log(\r\n      convertDateDBtoDatePickerWithTime(_pollData.data.poll.poll_date_e),\r\n    );\r\n    setActive(_pollData.data.poll.is_identity);\r\n    setFields([\r\n      {\r\n        name: ['poll_title'],\r\n        value: _pollData.data.poll.poll_title,\r\n      },\r\n      {\r\n        name: ['poll_date_s'],\r\n        value: moment(\r\n          convertDateDBtoDatePickerWithTime(_pollData.data.poll.poll_date_s),\r\n        ),\r\n      },\r\n      {\r\n        name: ['poll_date_e'],\r\n        value: moment(\r\n          convertDateDBtoDatePickerWithTime(_pollData.data.poll.poll_date_e),\r\n        ),\r\n      },\r\n      {\r\n        name: ['poll_detail'],\r\n        value: _pollData.data.poll.poll_detail,\r\n      },\r\n      {\r\n        name: ['is_identity'],\r\n        value: _pollData.data.poll.is_identity,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  function onChange(value, dateString) {\r\n    // console.log('Selected Time: ', value);\r\n    // console.log('Formatted Selected Time: ', dateString);\r\n    setDate(dateString);\r\n  }\r\n\r\n  const onDragEnd = async (fromIndex, toIndex, type, index) => {\r\n    setLoading(true);\r\n    /* IGNORES DRAG IF OUTSIDE DESIGNATED AREA */\r\n    if (toIndex < 0) return;\r\n\r\n    /* REORDER PARENT OR SUBLIST, ELSE THROW ERROR */\r\n    if (type === 'LIST-ITEM') {\r\n      const _data = {\r\n        menu_id: questions[fromIndex].poll_questions_id,\r\n        menu_seq: toIndex,\r\n      };\r\n      const menuData = await apiInstance().put('pollmenu/reorder-menu', _data);\r\n\r\n      const _dataRevert = {\r\n        menu_id: questions[toIndex].poll_questions_id,\r\n        menu_seq: fromIndex,\r\n      };\r\n      const menuDataRevert = await apiInstance().put(\r\n        'pollmenu/reorder-menu',\r\n        _dataRevert,\r\n      );\r\n      // console.log(menuDataRevert)\r\n      return fetchPollQuestionData();\r\n      // const categories = reorder(data, fromIndex, toIndex);\r\n      // return setData(categories);\r\n    } else if (type === 'SUBLIST-ITEM') {\r\n      const _data = {\r\n        menu_id: questions[index].options[fromIndex].poll_option_id,\r\n        menu_seq: toIndex,\r\n      };\r\n      const menuData = await apiInstance().put('pollmenu/reorder-menu-options', _data);\r\n\r\n      const _dataRevert = {\r\n        menu_id: questions[index].options[toIndex].poll_option_id,\r\n        menu_seq: fromIndex,\r\n      };\r\n      const menuDataRevert = await apiInstance().put(\r\n        'pollmenu/reorder-menu-options',\r\n        _dataRevert,\r\n      );\r\n      return fetchPollQuestionData();\r\n    } else return new Error('NOT A VALID LIST');\r\n  };\r\n\r\n  const openNotificationSuccess = () => {\r\n    api.success({\r\n      message: `ลบข้อมูลสำเร็จ`,\r\n      description: 'ลบข้อมูลสำเร็จ',\r\n      placement: 'topRight',\r\n    });\r\n  };\r\n\r\n  const openNotificationFail = messgae => {\r\n    api.error({\r\n      message: `พบปัญหาระหว่างการลบข้อมูล`,\r\n      description: messgae,\r\n      placement: 'topRight',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      title=\"Government - Admin management\"\r\n      titlePage={\r\n        'แก้ไขแบบสำรวจความคิดเห็น ' + (pollData ? pollData.poll_title : '')\r\n      }\r\n      url={origin}\r\n      indexSubMenu={'1'}\r\n      indexMenu={'sub-1-6'}\r\n      titlePage=\"แก้ไขแบบสำรวจความคิดเห็น\"\r\n      _routes={[\r\n        {\r\n          path: '/admin/dashborad',\r\n          breadcrumbName: 'หน้าหลัก',\r\n        },\r\n        {\r\n          path: '/admin/management/polls',\r\n          breadcrumbName: 'จัดการแบบสำรวจความคิดเห็น',\r\n        },\r\n        {\r\n          path: '/admin/management/polls/add-poll',\r\n          breadcrumbName: 'แก้ไขแบบสำรวจความคิดเห็น',\r\n        },\r\n      ]}\r\n    >\r\n      <div>\r\n        {contextHolder}\r\n        {/* {JSON.stringify(organizationData)} */}\r\n        <Row>\r\n          {/* {JSON.stringify(organizationData)} */}\r\n          <Form\r\n            name=\"basic\"\r\n            className=\"w-full\"\r\n            // initialValues={{ email: email, invitationCode: code }}\r\n            layout=\"vertical\"\r\n            onFinish={onSubmitHandler}\r\n            // onFinishFailed={onFinishFailed}\r\n            requiredMark={true}\r\n            fields={fields}\r\n            form={form}\r\n          >\r\n            <Form.Item\r\n              name=\"poll_title\"\r\n              label=\"ชื่อแบบสำรวจ\"\r\n              className=\"block text-gray-700 text-sm font-bold mb-2 w-full form-organization\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'กรุณากรอกชื่อแบบสำรวจ',\r\n                },\r\n              ]}\r\n            >\r\n              <input\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                id=\"#\"\r\n                type=\"text\"\r\n                placeholder=\"ชื่อแบบสำรวจ\"\r\n              />\r\n            </Form.Item>\r\n            <div style={{ clear: 'both' }}></div>\r\n            <Form.Item\r\n              name=\"poll_detail\"\r\n              label=\"คำอธิบายแบบสำรวจ\"\r\n              className=\"block text-gray-700 text-sm font-bold mb-2 w-full form-organization\"\r\n              style={{ textAlign: 'left !important' }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'กรุณากรอกคำอธิบายแบบสำรวจ',\r\n                },\r\n              ]}\r\n            >\r\n              <JoditEditor\r\n                ref={editor}\r\n                value={content}\r\n                config={config.config(user)}\r\n                height={'700px'}\r\n                tabIndex={1} // tabIndex of textarea\r\n                onBlur={newContent => setContent(newContent)} // preferred to use only this option to update the content for performance reasons\r\n                onChange={newContent => { }}\r\n              />\r\n            </Form.Item>\r\n            <div style={{ clear: 'both' }}></div>\r\n            <Form.Item\r\n              name=\"poll_date_s\"\r\n              label=\"วันที่เปิดให้แสดงความคิดเห็น\"\r\n              className=\"block text-gray-700 text-sm font-bold mb-2 w-full form-organization\"\r\n              style={{ textAlign: 'left !important' }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'กรุณากรอกเลือกวันที่เปิดให้แสดงความคิดเห็น',\r\n                },\r\n              ]}\r\n            >\r\n              {/* <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                showTime={{ format: 'HH:mm:ss' }}\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              // showTime={{ defaultValue: moment('00:00:00') }}\r\n              /> */}\r\n              <DatePicker\r\n                className=\"w-full\"\r\n                showTime\r\n                onChange={onChange}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n              />\r\n            </Form.Item>\r\n            <div style={{ clear: 'both' }}></div>\r\n            <Form.Item\r\n              name=\"poll_date_e\"\r\n              label=\"วันที่ปิดให้แสดงความคิดเห็น\"\r\n              className=\"block text-gray-700 text-sm font-bold mb-2 w-full form-organization\"\r\n              style={{ textAlign: 'left !important' }}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'กรุณากรอกเลือกวันที่ปิดให้แสดงความคิดเห็น',\r\n                },\r\n              ]}\r\n            >\r\n              {/* <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                showTime={{ format: 'HH:mm:ss' }}\r\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              // showTime={{ defaultValue: moment('00:00:00') }}\r\n              /> */}\r\n              <DatePicker\r\n                className=\"w-full\"\r\n                showTime\r\n                onChange={onChange}\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n              />\r\n            </Form.Item>\r\n            <div style={{ clear: 'both' }}></div>\r\n            <Form.Item className=\"flex mt-6\">\r\n              <div className=\"lg:inline-flex w-full\">\r\n                <div className=\"lg:inline-flex text-left w-1/2\">\r\n                  <Switch\r\n                    className=\"swt-btn\"\r\n                    checked={active}\r\n                    onClick={value => setActive(value ? 1 : 0)}\r\n                  />\r\n                  <p className=\"mx-2 text-sm\">การแสดงผล</p>\r\n                </div>\r\n                <div className=\"text-center lg:text-right w-full lg:w-1/2\">\r\n                  <Button\r\n                    htmlType=\"button\"\r\n                    onClick={onResetForm}\r\n                    style={{\r\n                      backgroundColor: '#C2CFE0',\r\n                      borderColor: '#C2CFE0',\r\n                      height: 40,\r\n                      width: 110,\r\n                      marginBottom: '0px !important',\r\n                      marginRight: '2px',\r\n                      color: 'white !important',\r\n                    }}\r\n                    // htmlType=\"submit\"\r\n                    className=\"text-center bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full lg:w-1/4\"\r\n                  >\r\n                    <Text className=\"text-custom-black \">รีเซ็ท</Text>\r\n                  </Button>\r\n                  <Button\r\n                    // type=\"primary\"\r\n                    style={{\r\n                      backgroundColor: '#059669',\r\n                      borderColor: '#059669',\r\n                      height: 40,\r\n                      width: 110,\r\n                      marginBottom: '0px !important',\r\n                      color: 'white !important',\r\n                    }}\r\n                    htmlType=\"submit\"\r\n                    className=\"text-center bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full lg:w-1/4\"\r\n                  >\r\n                    <Text className=\"text-custom-white \">บันทึก</Text>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form.Item>\r\n            <div>\r\n              <ModalAddMenu fetch={fetch} user={user} pollId={pollId} fetchPollQuestionData={fetchPollQuestionData} />\r\n              <ModalEditMenu\r\n                _visible={visibleEditModal}\r\n                hideEditModal={hideEditModal}\r\n                fetch={fetchPollQuestionData}\r\n                user={user}\r\n                dataEdit={dataEdit}\r\n              />\r\n              <ModalEditMenuSub\r\n                _visible={visibleEditMenuSubModal}\r\n                hideModal={hideEditMenuSubModal}\r\n                fetch={fetchPollQuestionData}\r\n                dataEdit={dataEdit}\r\n              />\r\n              <ModalAddMenuSub\r\n                _visible={visibleAddSubMenuModal}\r\n                hideModal={hideSubMenuModal}\r\n                fetch={fetchPollQuestionData}\r\n                dataEdit={dataEdit}\r\n              />\r\n              <Spin spinning={loading}>\r\n                <ReactDragListView\r\n                  nodeSelector=\".ant-list.draggable\"\r\n                  lineClassName=\"dragLine\"\r\n                  onDragEnd={(fromIndex, toIndex) =>\r\n                    onDragEnd(fromIndex, toIndex, 'LIST-ITEM')\r\n                  }\r\n                >\r\n                  {questions.length == 0 && <Empty />}\r\n                  {questions.map((obj, index) => (\r\n                    <List\r\n                      header={\r\n                        <>\r\n                          <Typography.Text strong className=\"grabbable\">\r\n                            <DragOutlined className=\"icon\" />\r\n                            {obj.poll_questions_title}\r\n                          </Typography.Text>\r\n                          <Button\r\n                            className=\"ml-2\"\r\n                            type=\"default\"\r\n                            onClick={() => {\r\n                              onclikEditModal(true, obj);\r\n                            }}\r\n                          >\r\n                            แก้ไข\r\n                          </Button>\r\n\r\n                          <Button\r\n                            style={{\r\n                              backgroundColor: '#059669',\r\n                              color: 'white',\r\n                              borderColor: '#059669',\r\n                            }}\r\n                            onClick={() => {\r\n                              onclikAddSubMenuModal(true, obj);\r\n                            }}\r\n                            className=\"ml-2\"\r\n                            type=\"success\"\r\n                          >\r\n                            เพิ่มตัวเลือก\r\n                          </Button>\r\n\r\n                          <Button\r\n                            className=\"ml-2\"\r\n                            type=\"danger\"\r\n                            onClick={() => showModal(obj)}\r\n                          >\r\n                            ลบ\r\n                          </Button>\r\n                        </>\r\n                      }\r\n                      key={index}\r\n                      className=\"draggable\"\r\n                    >\r\n                      <ReactDragListView\r\n                        nodeSelector=\".ant-list-item.draggable-item\"\r\n                        lineClassName=\"dragLine\"\r\n                        onDragEnd={(fromIndex, toIndex) =>\r\n                          onDragEnd(fromIndex, toIndex, 'SUBLIST-ITEM', index)\r\n                        }\r\n                      >\r\n                        <>\r\n                          {obj.options.map((item, index2) => (\r\n                            <List.Item\r\n                              key={index2}\r\n                              className=\"draggable-item\"\r\n                            >\r\n                              <DragOutlined className=\"icon\" />\r\n                              <List.Item.Meta\r\n                                title={item.poll_options_name + \" ( \" + item.poll_options_score + \" ) | จำนวนผู้เลือกตัวเลือกนี้ ( \" + item.poll_option_total_score + \" )\"}\r\n                                className=\"grabbable\"\r\n                              />\r\n                              <Button\r\n                                className=\"mr-1\"\r\n                                type=\"default\"\r\n                                onClick={() => {\r\n                                  onclikEditMenuSubModal(true, item);\r\n                                }}\r\n                              >\r\n                                แก้ไข\r\n                              </Button>\r\n                              <Button\r\n                                className=\"mr-2\"\r\n                                type=\"danger\"\r\n                                onClick={() => showDeletMenuSubModal(item)}\r\n                              >\r\n                                ลบ\r\n                              </Button>\r\n                            </List.Item>\r\n                          ))}\r\n                        </>\r\n                      </ReactDragListView>\r\n                    </List>\r\n                  ))}\r\n                </ReactDragListView>\r\n              </Spin>\r\n            </div>\r\n\r\n            <Modal\r\n              title=\"คุณต้องการลบข้อมูลหรือไม่?\"\r\n              visible={visibleModalDelete}\r\n              onOk={onDelete}\r\n              onCancel={hideModal}\r\n              okText=\"ลบ\"\r\n              cancelText=\"ยกเลิก\"\r\n              okButtonProps={{\r\n                type: 'primary',\r\n                danger: true,\r\n              }}\r\n            >\r\n              <p>\r\n                คุณต้องการลบ \"\r\n                {dataDelete ? dataDelete.poll_questions_title : ''}\" หรือไม่?{' '}\r\n              </p>\r\n            </Modal>\r\n\r\n            <Modal\r\n              title=\"คุณต้องการลบข้อมูลหรือไม่?\"\r\n              visible={visibleModalMenuSubDelete}\r\n              onOk={onMenuSubDelete}\r\n              onCancel={hideMenuSubModal}\r\n              okText=\"ลบ\"\r\n              cancelText=\"ยกเลิก\"\r\n              okButtonProps={{\r\n                type: 'primary',\r\n                danger: true,\r\n              }}\r\n            >\r\n              <p>\r\n                คุณต้องการลบ \"\r\n                {dataDelete ? dataDelete.poll_options_name : ''}\" หรือไม่?{' '}\r\n              </p>\r\n            </Modal>\r\n          </Form>\r\n        </Row>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}