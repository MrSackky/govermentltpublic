{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../../db/models/index');\n\nimport middleware from '../../../../middleware/auth';\nimport { addDays } from '../../../../middleware/utils';\n\nconst bcrypt = require('bcryptjs');\n\nconst salt = bcrypt.genSaltSync(10);\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query; // const { email } = body;\n  // const userId = slug;\n\n  const dataUsers = await models.tender_type.findAndCountAll();\n\n  if (dataUsers != null) {\n    return res.status(200).json({\n      status: 200,\n      data: dataUsers.rows\n    });\n  }\n}) // Post method\n.post(async (req, res) => {});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/admin/management/tender_type.js"],"names":["nextConnect","models","require","middleware","addDays","bcrypt","salt","genSaltSync","handler","use","get","req","res","body","slug","query","dataUsers","tender_type","findAndCountAll","status","json","data","rows","post"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,6BAAD,CAAtB;;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AACA,MAAMC,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMI,IAAI,GAAGD,MAAM,CAACE,WAAP,CAAmB,EAAnB,CAAb;AAEA,MAAMC,OAAO,GAAGR,WAAW,GACzB;AADyB,CAExBS,GAFa,CAETN,UAFS,EAGd;AAHc,CAIbO,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAqB;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAWF,GAAjB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWH,GAAG,CAACI,KAArB,CAFwB,CAGxB;AACA;;AACA,QAAMC,SAAS,GAAG,MAAMf,MAAM,CAACgB,WAAP,CAAmBC,eAAnB,EAAxB;;AACA,MAAIF,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAOJ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BE,MAAAA,IAAI,EAAEL,SAAS,CAACM;AAFU,KAArB,CAAP;AAID;AACF,CAhBa,EAiBd;AAjBc,CAkBbC,IAlBa,CAkBR,OAAOZ,GAAP,EAAYC,GAAZ,KAAoB,CAAE,CAlBd,CAAhB;AAoBA,eAAeJ,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../../db/models/index');\r\nimport middleware from '../../../../middleware/auth';\r\nimport { addDays } from '../../../../middleware/utils';\r\nconst bcrypt = require('bcryptjs');\r\nconst salt = bcrypt.genSaltSync(10);\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res)  => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    // const { email } = body;\r\n    // const userId = slug;\r\n    const dataUsers = await models.tender_type.findAndCountAll();\r\n    if (dataUsers != null) {\r\n      return res.status(200).json({\r\n        status: 200,\r\n        data: dataUsers.rows,\r\n      });\r\n    }\r\n  })\r\n  // Post method\r\n  .post(async (req, res) => {});\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}