{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../db/models/index');\n\nimport middleware from '../../../middleware/auth';\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    results,\n    page,\n    search,\n    sortField = \"organization_id\",\n    sortOrder = \"DESC\",\n    filters = [],\n    today,\n    willExpried\n  } = req.query;\n  let _search = {};\n\n  if (search != \"\") {\n    if (filters == 'undefined' || filters == \"null\") {\n      // console.log(\"if1\")\n      _search = {\n        is_use: {\n          [Op.ne]: 3\n        },\n        date_expired: {\n          [Op.lte]: today\n        },\n        [Op.or]: [{\n          organization_name_eng: {\n            [Op.like]: '%' + search + '%'\n          }\n        }, {\n          organization_name: {\n            [Op.like]: '%' + search + '%'\n          }\n        }]\n      };\n    } else {\n      console.log(\"if2\");\n      console.log(filters);\n      _search = {\n        is_use: {\n          [Op.ne]: 3\n        },\n        date_expired: {\n          [Op.lte]: today\n        },\n        package: {\n          [Op.in]: [filters]\n        },\n        [Op.or]: [{\n          organization_name_eng: {\n            [Op.like]: '%' + search + '%'\n          }\n        }, {\n          organization_name: {\n            [Op.like]: '%' + search + '%'\n          }\n        }]\n      };\n    }\n  } else {\n    if (filters == 'undefined' || filters == 'null') {\n      // console.log(\"if3\")\n      // console.log(filters)\n      _search = {\n        is_use: {\n          [Op.ne]: 3\n        },\n        date_expired: {\n          [Op.lte]: today\n        }\n      };\n    } else {\n      // console.log(\"if4\")\n      // console.log(filters)\n      _search = {\n        is_use: {\n          [Op.ne]: 3\n        },\n        date_expired: {\n          [Op.lte]: today\n        },\n        package: {\n          [Op.in]: [filters]\n        }\n      };\n    }\n  } // console.log(_search)\n\n\n  const _organization = await models.Organization.findAndCountAll({\n    // attributes: ['package_id','code_package','name_package','size_limit'] \n    attributes: ['organization_id', 'organization_name', 'organization_name_eng', 'organization_logo', 'organization_email', 'organization_address', 'organization_sub_district_id', 'organization_phone', 'organization_fax', 'theme', 'thumbnail', 'thumbnail_link', 'thumbnail_url', 'show_index', 'google_verify', 'social_fb', 'social_fb_pageid', 'rss', 'google_tag_manager1', 'google_tag_manager2', 'date_created', 'date_expired', 'size_used', 'package', 'is_use'],\n    where: _search,\n    offset: results * (page - 1),\n    limit: parseInt(results),\n    include: [{\n      model: models.Packages,\n      as: 'packages'\n    }],\n    order: [[sortField != \"undefined\" && sortOrder != \"undefined\" ? sortField : \"organization_id\", sortOrder != \"undefined\" ? sortOrder == \"ascend\" ? \"ASC\" : \"DESC\" : \"DESC\"]]\n  });\n\n  return res.status(200).json({\n    info: {\n      page: page,\n      results: results,\n      today: today,\n      willExpried: willExpried\n    },\n    results: _organization.rows,\n    totalCount: _organization.count\n  });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/government/pages/api/organization/dashborad-expried.js"],"names":["nextConnect","models","require","middleware","Sequelize","Op","handler","use","get","req","res","method","body","results","page","search","sortField","sortOrder","filters","today","willExpried","query","_search","is_use","ne","date_expired","lte","or","organization_name_eng","like","organization_name","console","log","package","in","_organization","Organization","findAndCountAll","attributes","where","offset","limit","parseInt","include","model","Packages","as","order","status","json","info","rows","totalCount","count"],"mappings":"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","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../db/models/index');\r\nimport middleware from '../../../middleware/auth';\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { results, page, search, sortField = \"organization_id\", sortOrder = \"DESC\", filters = [], today, willExpried } = req.query;\r\n    let _search = {};\r\n\r\n\r\n    if (search != \"\") {\r\n      if (filters == 'undefined' || filters == \"null\") {\r\n        // console.log(\"if1\")\r\n        _search = {\r\n          is_use: {\r\n            [Op.ne]: 3,\r\n          },\r\n          date_expired: {\r\n            [Op.lte]: today\r\n          },\r\n          [Op.or]: [\r\n            {\r\n              organization_name_eng: {\r\n                [Op.like]: '%' + search + '%'\r\n              }\r\n            }, {\r\n              organization_name: {\r\n                [Op.like]: '%' + search + '%'\r\n              },\r\n            }\r\n          ],\r\n\r\n\r\n        }\r\n      } else {\r\n        console.log(\"if2\")\r\n        console.log(filters)\r\n        _search = {\r\n          is_use: {\r\n            [Op.ne]: 3,\r\n          },\r\n          date_expired: {\r\n            [Op.lte]: today\r\n          },\r\n          package: {\r\n            [Op.in]: [filters],\r\n          },\r\n          [Op.or]: [\r\n            {\r\n              organization_name_eng: {\r\n                [Op.like]: '%' + search + '%'\r\n              }\r\n            }, {\r\n              organization_name: {\r\n                [Op.like]: '%' + search + '%'\r\n              },\r\n            }\r\n          ],\r\n\r\n\r\n        }\r\n      }\r\n\r\n\r\n    } else {\r\n      if (filters == 'undefined' || filters == 'null') {\r\n        // console.log(\"if3\")\r\n        // console.log(filters)\r\n\r\n        _search = {\r\n\r\n          is_use: {\r\n            [Op.ne]: 3,\r\n          },\r\n          date_expired: {\r\n            [Op.lte]: today\r\n          },\r\n\r\n        }\r\n      } else {\r\n        // console.log(\"if4\")\r\n        // console.log(filters)\r\n        _search = {\r\n\r\n          is_use: {\r\n            [Op.ne]: 3,\r\n          },\r\n          date_expired: {\r\n            [Op.lte]: today\r\n          },\r\n          package: {\r\n            [Op.in]: [filters],\r\n          },\r\n\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n\r\n    // console.log(_search)\r\n    const _organization = await models.Organization.findAndCountAll({\r\n      // attributes: ['package_id','code_package','name_package','size_limit'] \r\n      attributes: [\r\n        'organization_id', 'organization_name', 'organization_name_eng', 'organization_logo',\r\n        'organization_email', 'organization_address', 'organization_sub_district_id', 'organization_phone',\r\n        'organization_fax', 'theme', 'thumbnail', 'thumbnail_link', 'thumbnail_url', 'show_index',\r\n        'google_verify', 'social_fb', 'social_fb_pageid', 'rss', 'google_tag_manager1', 'google_tag_manager2',\r\n        'date_created', 'date_expired', 'size_used', 'package', 'is_use'\r\n      ],\r\n      where: _search,\r\n      offset: results * (page - 1),\r\n      limit: parseInt(results),\r\n      include: [\r\n        {\r\n          model: models.Packages,\r\n          as: 'packages',\r\n        },\r\n      ],\r\n      order: [\r\n        [sortField != \"undefined\" && sortOrder != \"undefined\" ? sortField : \"organization_id\", sortOrder != \"undefined\" ? sortOrder == \"ascend\" ? \"ASC\" : \"DESC\" : \"DESC\"]\r\n      ]\r\n    });\r\n    return res.status(200).json({\r\n      info: {\r\n        page: page,\r\n        results: results,\r\n        today: today,\r\n        willExpried: willExpried\r\n      },\r\n      results: _organization.rows,\r\n      totalCount: _organization.count\r\n    });\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}