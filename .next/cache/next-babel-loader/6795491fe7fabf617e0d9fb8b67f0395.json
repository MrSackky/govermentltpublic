{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../db/models/index');\n\nconst handler = nextConnect().get(async (req, res) => {\n  const {\n    query: {\n      id,\n      name\n    }\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const news_id = slug;\n  console.log(news_id);\n  const information_news = await models.information_news.findOne({\n    where: {\n      infor_id: news_id\n    }\n  });\n  return res.status(200).json({\n    status: 200,\n    message: \"success\",\n    information_news: information_news ? information_news : []\n  });\n}).post(async (req, res) => {}).put(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const news_id = slug;\n  const {\n    infor_detail\n  } = body;\n  const dataNews = {\n    infor_detail: infor_detail\n  };\n\n  if (news_id == undefined || infor_detail == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      news_id: news_id,\n      dataNews: dataNews\n    });\n  }\n\n  const organization = await models.information_news.update(dataNews, {\n    where: {\n      infor_id: news_id\n    }\n  });\n  return res.status(200).json({\n    status: 200,\n    message: \"success\",\n    organization: organization ? organization : []\n  }); // await User.update({ lastName: \"Doe\" }, {\n  //   where: {\n  //     lastName: null\n  //   }\n  // });\n}).delete(async (req, res) => {}).patch(async (req, res) => {});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/information-news/[slug].js"],"names":["nextConnect","models","require","handler","get","req","res","query","id","name","slug","news_id","console","log","information_news","findOne","where","infor_id","status","json","message","post","put","body","infor_detail","dataNews","undefined","organization","update","delete","patch"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AAEA,MAAMC,OAAO,GAAGH,WAAW,GACxBI,GADa,CACT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN;AADH,MAEFJ,GAFJ;AAGA,QAAM;AAAEK,IAAAA;AAAF,MAAWL,GAAG,CAACE,KAArB;AACA,QAAMI,OAAO,GAAGD,IAAhB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,QAAMG,gBAAgB,GAAG,MAAMb,MAAM,CAACa,gBAAP,CAAwBC,OAAxB,CAAgC;AAC7DC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAGN;AADN;AADsD,GAAhC,CAA/B;AAQA,SAAOL,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,GADkB;AAE1BE,IAAAA,OAAO,EAAE,SAFiB;AAG1BN,IAAAA,gBAAgB,EAAEA,gBAAgB,GAAGA,gBAAH,GAAsB;AAH9B,GAArB,CAAP;AAKD,CAtBa,EAuBbO,IAvBa,CAuBR,OAAOhB,GAAP,EAAYC,GAAZ,KAAoB,CAAG,CAvBf,EAwBbgB,GAxBa,CAwBT,OAAOjB,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AAAEiB,IAAAA;AAAF,MAAWlB,GAAjB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWL,GAAG,CAACE,KAArB;AACA,QAAMI,OAAO,GAAGD,IAAhB;AACA,QAAM;AACJc,IAAAA;AADI,MAEFD,IAFJ;AAIA,QAAME,QAAQ,GAAG;AACfD,IAAAA,YAAY,EAAEA;AADC,GAAjB;;AAIA,MACEb,OAAO,IAAIe,SAAX,IACAF,YAAY,IAAIE,SAFlB,EAGE;AACA,WAAOpB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BE,MAAAA,OAAO,EAAE,gBAFiB;AAG1BT,MAAAA,OAAO,EAAEA,OAHiB;AAI1Bc,MAAAA,QAAQ,EAAEA;AAJgB,KAArB,CAAP;AAMD;;AAGD,QAAME,YAAY,GAAG,MAAM1B,MAAM,CAACa,gBAAP,CAAwBc,MAAxB,CACzBH,QADyB,EACf;AACVT,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAGN;AADN;AADG,GADe,CAA3B;AAQA,SAAOL,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,GADkB;AAE1BE,IAAAA,OAAO,EAAE,SAFiB;AAG1BO,IAAAA,YAAY,EAAEA,YAAY,GAAGA,YAAH,GAAkB;AAHlB,GAArB,CAAP,CAjCuB,CAuCvB;AACA;AACA;AACA;AACA;AAED,CArEa,EAsEbE,MAtEa,CAsEN,OAAOxB,GAAP,EAAYC,GAAZ,KAAoB,CAE3B,CAxEa,EAyEbwB,KAzEa,CAyEP,OAAOzB,GAAP,EAAYC,GAAZ,KAAoB,CAE1B,CA3Ea,CAAhB;AA6EA,eAAeH,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../db/models/index');\r\n\r\nconst handler = nextConnect()\r\n  .get(async (req, res) => {\r\n    const {\r\n      query: { id, name },\r\n    } = req;\r\n    const { slug } = req.query;\r\n    const news_id = slug;\r\n    console.log(news_id)\r\n\r\n    const information_news = await models.information_news.findOne({\r\n      where: {\r\n        infor_id : news_id,\r\n      },\r\n     \r\n    });\r\n    \r\n    \r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: \"success\",\r\n      information_news: information_news ? information_news : []\r\n    });\r\n  })\r\n  .post(async (req, res) => { })\r\n  .put(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    const news_id = slug;\r\n    const {\r\n      infor_detail\r\n    } = body;\r\n\r\n    const dataNews = {\r\n      infor_detail: infor_detail\r\n    };\r\n\r\n    if (\r\n      news_id == undefined ||\r\n      infor_detail == undefined \r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        news_id: news_id,\r\n        dataNews: dataNews\r\n      });\r\n    }\r\n\r\n\r\n    const organization = await models.information_news.update(\r\n      dataNews, {\r\n      where: {\r\n        infor_id : news_id\r\n      }\r\n    }\r\n    );\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: \"success\",\r\n      organization: organization ? organization : []\r\n    });\r\n\r\n    // await User.update({ lastName: \"Doe\" }, {\r\n    //   where: {\r\n    //     lastName: null\r\n    //   }\r\n    // });\r\n\r\n  })\r\n  .delete(async (req, res) => {\r\n    \r\n  })\r\n  .patch(async (req, res) => {\r\n\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}