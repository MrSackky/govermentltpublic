{"ast":null,"code":"var _jsxFileName = \"D:\\\\govermentlt\\\\pages\\\\admin\\\\dashborad\\\\index-super-admin.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router from 'next/router';\n/* utils */\n\nimport { absoluteUrl, addDays, apiInstance, bytesToMB, bytesToSize, convertDateDBtoDatePickerNoTime, convertDatetoThaiDate, formatDateWithoutTime } from '../../../middleware/utils';\nimport { useEffect, useState } from 'react';\nimport { LikeOutlined } from '@ant-design/icons';\nimport { Button, Col, Input, Row, Statistic, Table, Typography } from 'antd';\nimport moment from 'moment';\nconst {\n  Search\n} = Input;\nconst {\n  Text,\n  Title\n} = Typography;\nexport default function Home(props) {\n  const {\n    origin\n  } = props;\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: pagination,\n    1: setPagination\n  } = useState({\n    current: 1,\n    pageSize: 10\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(null);\n  const {\n    0: totalUser,\n    1: setTotalUser\n  } = useState(0);\n  const {\n    0: totalWillExpired,\n    1: setTotalWillExpired\n  } = useState(0);\n  const {\n    0: totalExpired,\n    1: setTotalExpired\n  } = useState(0);\n  const {\n    0: apiTxt,\n    1: setApiTxt\n  } = useState('dashborad-all');\n  const {\n    0: today,\n    1: setToday\n  } = useState(null);\n  const {\n    0: willExpried,\n    1: setWillExpried\n  } = useState(null);\n  const {\n    0: expried,\n    1: setExpried\n  } = useState(null);\n  const {\n    0: apiTxtWillExpried,\n    1: setApiTxtWillExpried\n  } = useState('dashborad-will-expried');\n  const {\n    0: txtMenu,\n    1: setTextMenu\n  } = useState('ผู้ใช้ทั้งหมด');\n  useEffect(() => {\n    var _filters = [];\n    pagination.filters = _filters;\n    fetch({\n      pagination\n    });\n    fetchWillExprired({\n      pagination\n    });\n    fetchExprired({\n      pagination\n    });\n  }, []);\n  const columns = [{\n    title: 'วันที่สมัคร',\n    dataIndex: '',\n    sorter: true,\n    key: 'date_created',\n    render: data => __jsx(React.Fragment, null, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \" \", convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_created)), \" \")) // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'วันที่หมดอายุ',\n    dataIndex: '',\n    sorter: true,\n    key: 'date_expired',\n    render: data => __jsx(React.Fragment, null, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \" \", convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_expired)), \" \")) // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'ชื่อหน่วยงาน',\n    dataIndex: 'organization_name',\n    sorter: true // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'ใช้พื้นที่',\n    dataIndex: '',\n    sorter: true,\n    key: 'size_used',\n    render: data => __jsx(React.Fragment, null, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \" \", bytesToSize(data.size_used), \"  \")) // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'package',\n    dataIndex: '',\n    key: 'package',\n    sorter: true,\n    render: data => __jsx(React.Fragment, null, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \" \", data.packages.name_package, \" \")),\n    filters: [{\n      text: 'Free Package',\n      value: 1\n    }, {\n      text: 'Connect Package',\n      value: 2\n    }, {\n      text: 'Standard Package',\n      value: 3\n    }, {\n      text: 'Premium Package',\n      value: 4\n    }] // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'สถานะ',\n    dataIndex: '',\n    key: 'is_use',\n    sorter: true,\n    render: data => __jsx(React.Fragment, null, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, \" \", data.is_use == 1 ? \"ใช้งาน\" : \"ไม่ใช้งาน\", \" \")) // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: '',\n    dataIndex: '',\n    key: 'x',\n    render: data => __jsx(React.Fragment, null, __jsx(Button, {\n      type: \"primary\",\n      size: \"default\",\n      onClick: () => gotoPage(data.organization_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, \" \\u0E41\\u0E01\\u0E49\\u0E44\\u0E02 \"), __jsx(Button, {\n      className: \"ml-1\",\n      type: \"danger\",\n      onClick: () => showModal(data),\n      size: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, \" \\u0E25\\u0E1A \"))\n  } // {\n  //   title: 'Gender',\n  //   dataIndex: 'gender',\n  //   // filters: [\n  //   //   { text: 'Male', value: 'male' },\n  //   //   { text: 'Female', value: 'female' },\n  //   // ],\n  //   width: '20%',\n  // },\n  // {\n  //   title: 'Email',\n  //   dataIndex: 'email',\n  // },\n  ];\n\n  const gotoPage = id => {\n    console.log(id);\n    Router.push('/admin/management-organization/organization/' + id);\n  };\n\n  const usedSize = async size_used => {\n    var _size = await bytesToMB(parseInt(size_used));\n\n    return _size;\n  };\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    console.log(sorter);\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: pagination.current\n    });\n    setFilters(filters.package);\n\n    switch (apiTxt) {\n      case \"dashborad-will-expried\":\n        fetchWillExpriredData({\n          sortField: sorter.columnKey,\n          sortOrder: sorter.order,\n          pagination,\n          filters: filters.package\n        });\n        break;\n\n      case \"dashborad-expried\":\n        fetchExpriredData({\n          sortField: sorter.columnKey,\n          sortOrder: sorter.order,\n          pagination,\n          filters: filters.package\n        });\n        break;\n\n      default:\n        fetchData({\n          sortField: sorter.columnKey,\n          sortOrder: sorter.order,\n          pagination,\n          filters: filters.package\n        });\n        break;\n    }\n  };\n\n  const onSearch = async _search => {\n    setLoading(true);\n    setSearch(_search);\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: 1\n    });\n\n    var _today = moment().format('YYYY-MM-DD');\n\n    var _willExpried = addDays(_today, 31);\n\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried);\n\n    switch (apiTxt) {\n      case \"dashborad-will-expried\":\n        fetchWillExpriredData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          },\n          search: _search\n        });\n        break;\n\n      case \"dashborad-expried\":\n        fetchExpriredData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          },\n          search: _search\n        });\n        break;\n\n      case \"dashborad-all\":\n        fetchData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          },\n          search: _search\n        });\n        break;\n    } // const addactivitiesData = await apiInstance().get(\n    //   'organization/' + apiTxt + '?results=' + pagination.pageSize + '&page=1&search=' + _search + \"&filters=\" + filters\n    // );\n    // setData(addactivitiesData.data.results)\n    // setLoading(false)\n\n  };\n\n  const fetch = async (params = {}) => {\n    setLoading(true);\n    const addactivitiesData = await apiInstance().get('organization/' + apiTxt + '?results=' + params.pagination.pageSize + '&page=' + params.pagination.current + \"&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters);\n    setData(addactivitiesData.data.results);\n    setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n      total: addactivitiesData.data.totalCount // 200 is mock data, you should read it from server\n      // total: data.totalCount,\n\n    }));\n    setTotalUser(addactivitiesData.data.totalCount);\n    setLoading(false);\n  };\n\n  const fetchData = async (params = {}) => {\n    setLoading(true);\n    const addactivitiesData = await apiInstance().get('organization/dashborad-all?results=' + params.pagination.pageSize + '&page=' + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters);\n    setData(addactivitiesData.data.results);\n    setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n      total: addactivitiesData.data.totalCount // 200 is mock data, you should read it from server\n      // total: data.totalCount,\n\n    })); // setTotalUser(addactivitiesData.data.totalCount)\n\n    setLoading(false);\n  };\n\n  const fetchWillExprired = async (params = {}) => {\n    var myCurrentDate = new Date();\n\n    var _today = moment().format('YYYY-MM-DD'); // var _today = myCurrentDate;\n\n\n    console.log(\"_today\");\n    console.log(_today);\n\n    var _willExpried = addDays(_today, 31);\n\n    console.log(\"_willExpried\");\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried);\n    pagination.today = _today;\n    pagination.willExpried = willExpriedDateString; // setExpried(_expried)\n\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: 1\n    });\n\n    const _Data = await apiInstance().get('organization/' + apiTxtWillExpried + '?results=' + params.pagination.pageSize + \"&page=1&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried);\n\n    console.log(\"_Data fetchWillExprired\");\n    console.log(_Data);\n    setTotalWillExpired(_Data.data.totalCount);\n  };\n\n  const fetchWillExpriredData = async (params = {}) => {\n    var myCurrentDate = new Date();\n\n    var _today = moment().format('YYYY-MM-DD'); // var _today = myCurrentDate;\n\n\n    console.log(\"_today\");\n    console.log(_today);\n\n    var _willExpried = addDays(_today, 31);\n\n    console.log(\"_willExpried\");\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried);\n    params.pagination.today = _today;\n    params.pagination.willExpried = willExpriedDateString; // setExpried(_expried)\n\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: 1\n    });\n\n    const _Data = await apiInstance().get('organization/' + apiTxtWillExpried + '?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried);\n\n    console.log(\"_Data fetchWillExprired\");\n    console.log(_Data);\n    setData(_Data.data.results);\n    setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n      total: _Data.data.totalCount // 200 is mock data, you should read it from server\n      // total: data.totalCount,\n\n    })); // setTotalWillExpired(_Data.data.totalCount)\n\n    setLoading(false);\n  };\n\n  const fetchExprired = async (params = {}) => {\n    var myCurrentDate = new Date();\n\n    var _today = moment().format('YYYY-MM-DD'); // var _today = myCurrentDate;\n\n\n    console.log(\"_today\");\n    console.log(_today);\n\n    var _willExpried = addDays(_today, 31);\n\n    console.log(\"_willExpried\");\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried);\n    params.pagination.today = _today;\n    params.pagination.willExpried = willExpriedDateString; // setExpried(_expried)\n\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: 1\n    });\n\n    const _Data = await apiInstance().get('organization/dashborad-expried?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried);\n\n    console.log(\"_Data fetchWillExprired\");\n    console.log(_Data);\n    setTotalExpired(_Data.data.totalCount);\n  };\n\n  const fetchExpriredData = async (params = {}) => {\n    var myCurrentDate = new Date();\n\n    var _today = moment().format('YYYY-MM-DD'); // var _today = myCurrentDate;\n\n\n    console.log(\"_today\");\n    console.log(_today);\n\n    var _willExpried = addDays(_today, 31);\n\n    console.log(\"_willExpried\");\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried);\n    params.pagination.today = _today;\n    params.pagination.willExpried = willExpriedDateString; // setExpried(_expried)\n\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: 1\n    });\n\n    const _Data = await apiInstance().get('organization/dashborad-expried?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried);\n\n    console.log(\"_Data fetchWillExprired\");\n    console.log(_Data);\n    setData(_Data.data.results);\n    setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n      total: _Data.data.totalCount // 200 is mock data, you should read it from server\n      // total: data.totalCount,\n\n    })); // setTotalExpired(_Data.data.totalCount)\n\n    setLoading(false);\n  };\n\n  const handleStatisticClick = value => {\n    setSearch(\"\");\n\n    switch (value) {\n      case \"willExpried\":\n        setTextMenu(\"จำนวนผู้ใช้งานที่กำลังจะหมดอายุ\");\n        setApiTxt(\"dashborad-will-expried\");\n        fetchWillExpriredData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          }\n        });\n        break;\n\n      case \"expried\":\n        setTextMenu(\"จำนวนผู้ใช้งานที่หมดอายุ\");\n        setApiTxt(\"dashborad-expried\");\n        fetchExpriredData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          }\n        });\n        break;\n\n      default:\n        setTextMenu(\"จำนวนผู้ใช้งานทั้งหมด\");\n        setApiTxt(\"dashborad-all\");\n        fetchData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          }\n        });\n        break;\n    }\n  };\n\n  const promiseState = async value => new Promise(resolve => setApiTxt(value, resolve));\n\n  const onChangeSearch = value => {\n    console.log(value);\n    setSearch(value.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 4,\n    className: \"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-green-600 mr-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    onClick: () => {\n      handleStatisticClick('all');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(Statistic, {\n    title: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\",\n    value: totalUser,\n    prefix: __jsx(LikeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 130\n      }\n    }),\n    valueStyle: {\n      color: \"white\",\n      fontSize: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 63\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    className: \"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-yellow-600 mr-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    onClick: () => {\n      handleStatisticClick('willExpried');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }, __jsx(Statistic, {\n    title: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E08\\u0E30\\u0E2B\\u0E21\\u0E14\\u0E2D\\u0E32\\u0E22\\u0E38\",\n    value: totalWillExpired,\n    prefix: __jsx(LikeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 154\n      }\n    }),\n    valueStyle: {\n      color: \"white\",\n      fontSize: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 70\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    className: \"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-red-600 mr-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    onClick: () => {\n      handleStatisticClick('expried');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(Statistic, {\n    title: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E2B\\u0E21\\u0E14\\u0E2D\\u0E32\\u0E22\\u0E38\",\n    value: totalExpired,\n    prefix: __jsx(LikeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 140\n      }\n    }),\n    valueStyle: {\n      color: \"white\",\n      fontSize: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 67\n    }\n  })))), __jsx(Row, {\n    className: \"w-full mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 24,\n    className: \" pb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 18,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    className: \"items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/admin/management-auto-landingpage/add-landingpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 19\n    }\n  }, __jsx(\"a\", {\n    //onClick={(e) => handleLogout(e)}\n    className: \"lg:inline-flex lg:w-auto w-full px-2 py-2 rounded h-8 text-white bg-green-600 font-bold items-center justify-center hover:bg-green-600 hover:text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 21\n    }\n  }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E27\\u0E31\\u0E19\\u0E2B\\u0E22\\u0E38\\u0E14\\u0E1E\\u0E34\\u0E40\\u0E28\\u0E29\")))), __jsx(Col, {\n    span: 6,\n    className: \"flex items-center justify-end justify-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    className: \" justify-end justify-items-end \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  }, __jsx(Search, {\n    placeholder: \"input search text\",\n    onSearch: onSearch,\n    enterButton: true,\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 19\n    }\n  })))))), __jsx(Row, {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    className: \"w-full\",\n    columns: columns,\n    rowKey: record => record.organization_id,\n    dataSource: data,\n    pagination: pagination,\n    loading: loading,\n    onChange: handleTableChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }\n  })))));\n}\n/* getServerSideProps */\n\nexport async function getServerSideProps(context) {\n  const {\n    req\n  } = context;\n  const {\n    origin\n  } = absoluteUrl(req);\n  return {\n    props: {\n      origin\n    }\n  };\n}","map":{"version":3,"sources":["D:/govermentlt/pages/admin/dashborad/index-super-admin.js"],"names":["Router","absoluteUrl","addDays","apiInstance","bytesToMB","bytesToSize","convertDateDBtoDatePickerNoTime","convertDatetoThaiDate","formatDateWithoutTime","useEffect","useState","LikeOutlined","Button","Col","Input","Row","Statistic","Table","Typography","moment","Search","Text","Title","Home","props","origin","data","setData","pagination","setPagination","current","pageSize","loading","setLoading","search","setSearch","filters","setFilters","totalUser","setTotalUser","totalWillExpired","setTotalWillExpired","totalExpired","setTotalExpired","apiTxt","setApiTxt","today","setToday","willExpried","setWillExpried","expried","setExpried","apiTxtWillExpried","setApiTxtWillExpried","txtMenu","setTextMenu","_filters","fetch","fetchWillExprired","fetchExprired","columns","title","dataIndex","sorter","key","render","date_created","date_expired","size_used","packages","name_package","text","value","is_use","gotoPage","organization_id","showModal","id","console","log","push","usedSize","_size","parseInt","handleTableChange","package","fetchWillExpriredData","sortField","columnKey","sortOrder","order","fetchExpriredData","fetchData","onSearch","_search","_today","format","_willExpried","willExpriedDateString","params","addactivitiesData","get","results","total","totalCount","myCurrentDate","Date","_Data","handleStatisticClick","promiseState","Promise","resolve","onChangeSearch","target","color","fontSize","record","getServerSideProps","context","req"],"mappings":"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","sourcesContent":["import Router from 'next/router';\r\n/* utils */\r\nimport { absoluteUrl, addDays, apiInstance, bytesToMB, bytesToSize, convertDateDBtoDatePickerNoTime, convertDatetoThaiDate, formatDateWithoutTime } from '../../../middleware/utils';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Statistic,\r\n  Table,\r\n  Typography\r\n} from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { Search } = Input;\r\nconst { Text, Title } = Typography;\r\n\r\n\r\nexport default function Home(props) {\r\n  const { origin } = props;\r\n  const [data, setData] = useState([])\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n  const [search, setSearch] = useState(\"\")\r\n  const [filters, setFilters] = useState(null)\r\n  const [totalUser, setTotalUser] = useState(0)\r\n  const [totalWillExpired, setTotalWillExpired] = useState(0)\r\n  const [totalExpired, setTotalExpired] = useState(0)\r\n  const [apiTxt, setApiTxt] = useState('dashborad-all')\r\n  const [today, setToday] = useState(null)\r\n  const [willExpried, setWillExpried] = useState(null)\r\n  const [expried, setExpried] = useState(null)\r\n  const [apiTxtWillExpried, setApiTxtWillExpried] = useState('dashborad-will-expried')\r\n  const [txtMenu, setTextMenu] = useState('ผู้ใช้ทั้งหมด')\r\n\r\n  useEffect(() => {\r\n    var _filters = []\r\n    pagination.filters = _filters\r\n    fetch({ pagination });\r\n    fetchWillExprired({ pagination })\r\n    fetchExprired({ pagination })\r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'วันที่สมัคร',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'date_created',\r\n      render: (data) => <>\r\n        <span > {convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_created))} </span>\r\n      </>,\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'วันที่หมดอายุ',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'date_expired',\r\n      render: (data) => <>\r\n        <span > {convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_expired))} </span>\r\n      </>,\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'ชื่อหน่วยงาน',\r\n      dataIndex: 'organization_name',\r\n      sorter: true,\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'ใช้พื้นที่',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'size_used',\r\n      render: (data) => <>\r\n        <span > {bytesToSize(data.size_used)}  </span>\r\n      </>\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'package',\r\n      dataIndex: '',\r\n      key: 'package',\r\n      sorter: true,\r\n      render: (data) => <>\r\n        <span > {data.packages.name_package} </span>\r\n      </>,\r\n      filters: [\r\n        {\r\n          text: 'Free Package',\r\n          value: 1,\r\n        },\r\n        {\r\n          text: 'Connect Package',\r\n          value: 2,\r\n        },\r\n        {\r\n          text: 'Standard Package',\r\n          value: 3,\r\n        },\r\n        {\r\n          text: 'Premium Package',\r\n          value: 4,\r\n        },\r\n      ],\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'สถานะ',\r\n      dataIndex: '',\r\n      key: 'is_use',\r\n      sorter: true,\r\n      render: (data) => <>\r\n        <span > {data.is_use == 1 ? \"ใช้งาน\" : \"ไม่ใช้งาน\"} </span>\r\n      </>,\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (data) => <>\r\n        <Button type=\"primary\" size={\"default\"} onClick={() => gotoPage(data.organization_id)} > แก้ไข </Button>\r\n        <Button className=\"ml-1\" type=\"danger\" onClick={() => showModal(data)} size={\"default\"} > ลบ </Button>\r\n      </>,\r\n    },\r\n    // {\r\n    //   title: 'Gender',\r\n    //   dataIndex: 'gender',\r\n    //   // filters: [\r\n    //   //   { text: 'Male', value: 'male' },\r\n    //   //   { text: 'Female', value: 'female' },\r\n    //   // ],\r\n    //   width: '20%',\r\n    // },\r\n    // {\r\n    //   title: 'Email',\r\n    //   dataIndex: 'email',\r\n    // },\r\n  ];\r\n  const gotoPage = (id) => {\r\n    console.log(id)\r\n    Router.push('/admin/management-organization/organization/' + id);\r\n\r\n  };\r\n\r\n  const usedSize = async (size_used) => {\r\n    var _size = await bytesToMB(parseInt(size_used))\r\n\r\n    return _size\r\n  }\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    console.log(sorter)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: pagination.current\r\n    })\r\n    setFilters(filters.package)\r\n\r\n    switch (apiTxt) {\r\n      case \"dashborad-will-expried\":\r\n        fetchWillExpriredData({\r\n          sortField: sorter.columnKey,\r\n          sortOrder: sorter.order,\r\n          pagination,\r\n          filters: filters.package,\r\n        })\r\n        break;\r\n      case \"dashborad-expried\":\r\n        fetchExpriredData({\r\n          sortField: sorter.columnKey,\r\n          sortOrder: sorter.order,\r\n          pagination,\r\n          filters: filters.package,\r\n        })\r\n        break;\r\n      default:\r\n        fetchData({\r\n          sortField: sorter.columnKey,\r\n          sortOrder: sorter.order,\r\n          pagination,\r\n          filters: filters.package,\r\n        });\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  const onSearch = async (_search) => {\r\n    setLoading(true)\r\n    setSearch(_search)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    var _willExpried = addDays(_today, 31);\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    switch (apiTxt) {\r\n\r\n      case \"dashborad-will-expried\":\r\n        fetchWillExpriredData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n          search: _search\r\n        })\r\n\r\n        break;\r\n      case \"dashborad-expried\":\r\n        fetchExpriredData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n          search: _search\r\n        })\r\n\r\n        break;\r\n\r\n      case \"dashborad-all\":\r\n        fetchData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n          search: _search\r\n        })\r\n        break;\r\n\r\n    }\r\n    // const addactivitiesData = await apiInstance().get(\r\n    //   'organization/' + apiTxt + '?results=' + pagination.pageSize + '&page=1&search=' + _search + \"&filters=\" + filters\r\n    // );\r\n\r\n    // setData(addactivitiesData.data.results)\r\n    // setLoading(false)\r\n  }\r\n  const fetch = async (params = {}) => {\r\n    setLoading(true)\r\n    const addactivitiesData = await apiInstance().get(\r\n      'organization/' + apiTxt + '?results=' + params.pagination.pageSize + '&page=' + params.pagination.current + \"&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters\r\n    );\r\n\r\n    setData(addactivitiesData.data.results)\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: addactivitiesData.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    })\r\n    setTotalUser(addactivitiesData.data.totalCount)\r\n    setLoading(false)\r\n  };\r\n\r\n  const fetchData = async (params = {}) => {\r\n    setLoading(true)\r\n    const addactivitiesData = await apiInstance().get(\r\n      'organization/dashborad-all?results=' + params.pagination.pageSize + '&page=' + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters\r\n    );\r\n\r\n    setData(addactivitiesData.data.results)\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: addactivitiesData.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    })\r\n    // setTotalUser(addactivitiesData.data.totalCount)\r\n    setLoading(false)\r\n  };\r\n\r\n  const fetchWillExprired = async (params = {}) => {\r\n    var myCurrentDate = new Date();\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    // var _today = myCurrentDate;\r\n    console.log(\"_today\")\r\n    console.log(_today)\r\n    var _willExpried = addDays(_today, 31);\r\n    console.log(\"_willExpried\")\r\n\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    pagination.today = _today\r\n    pagination.willExpried = willExpriedDateString\r\n    // setExpried(_expried)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    const _Data = await apiInstance().get(\r\n      'organization/' + apiTxtWillExpried + '?results=' + params.pagination.pageSize + \"&page=1&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried\r\n    );\r\n    console.log(\"_Data fetchWillExprired\")\r\n    console.log(_Data)\r\n\r\n\r\n    setTotalWillExpired(_Data.data.totalCount)\r\n  };\r\n\r\n  const fetchWillExpriredData = async (params = {}) => {\r\n    var myCurrentDate = new Date();\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    // var _today = myCurrentDate;\r\n    console.log(\"_today\")\r\n    console.log(_today)\r\n    var _willExpried = addDays(_today, 31);\r\n    console.log(\"_willExpried\")\r\n\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    params.pagination.today = _today\r\n    params.pagination.willExpried = willExpriedDateString\r\n    // setExpried(_expried)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    const _Data = await apiInstance().get(\r\n      'organization/' + apiTxtWillExpried + '?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried\r\n    );\r\n    console.log(\"_Data fetchWillExprired\")\r\n    console.log(_Data)\r\n\r\n    setData(_Data.data.results)\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: _Data.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    })\r\n    // setTotalWillExpired(_Data.data.totalCount)\r\n    setLoading(false)\r\n  };\r\n\r\n  const fetchExprired = async (params = {}) => {\r\n    var myCurrentDate = new Date();\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    // var _today = myCurrentDate;\r\n    console.log(\"_today\")\r\n    console.log(_today)\r\n    var _willExpried = addDays(_today, 31);\r\n    console.log(\"_willExpried\")\r\n\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    params.pagination.today = _today\r\n    params.pagination.willExpried = willExpriedDateString\r\n    // setExpried(_expried)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    const _Data = await apiInstance().get(\r\n      'organization/dashborad-expried?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried\r\n    );\r\n    console.log(\"_Data fetchWillExprired\")\r\n    console.log(_Data)\r\n\r\n\r\n    setTotalExpired(_Data.data.totalCount)\r\n  };\r\n\r\n  const fetchExpriredData = async (params = {}) => {\r\n    var myCurrentDate = new Date();\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    // var _today = myCurrentDate;\r\n    console.log(\"_today\")\r\n    console.log(_today)\r\n    var _willExpried = addDays(_today, 31);\r\n    console.log(\"_willExpried\")\r\n\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    params.pagination.today = _today\r\n    params.pagination.willExpried = willExpriedDateString\r\n    // setExpried(_expried)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    const _Data = await apiInstance().get(\r\n      'organization/dashborad-expried?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried\r\n    );\r\n    console.log(\"_Data fetchWillExprired\")\r\n    console.log(_Data)\r\n\r\n    setData(_Data.data.results)\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: _Data.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    })\r\n    // setTotalExpired(_Data.data.totalCount)\r\n    setLoading(false)\r\n  };\r\n\r\n  const handleStatisticClick = (value) => {\r\n    setSearch(\"\")\r\n    switch (value) {\r\n\r\n      case \"willExpried\":\r\n        setTextMenu(\"จำนวนผู้ใช้งานที่กำลังจะหมดอายุ\")\r\n        setApiTxt(\"dashborad-will-expried\")\r\n\r\n        fetchWillExpriredData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n        })\r\n        break;\r\n      case \"expried\":\r\n        setTextMenu(\"จำนวนผู้ใช้งานที่หมดอายุ\")\r\n        setApiTxt(\"dashborad-expried\")\r\n        fetchExpriredData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n        })\r\n        break;\r\n\r\n      default:\r\n        setTextMenu(\"จำนวนผู้ใช้งานทั้งหมด\")\r\n        setApiTxt(\"dashborad-all\")\r\n        fetchData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n        })\r\n        break;\r\n    }\r\n\r\n  }\r\n  const promiseState = async value =>\r\n    new Promise(resolve => setApiTxt(value, resolve));\r\n\r\n  const onChangeSearch = (value) => {\r\n    console.log(value)\r\n    setSearch(value.target.value)\r\n  }\r\n  return (\r\n    <div>\r\n      <Row>\r\n\r\n        <Col span={4} className=\"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-green-600 mr-4 mt-2\">\r\n          <a onClick={() => { handleStatisticClick('all') }}> <Statistic title=\"จำนวนผู้ใช้งานทั้งหมด\" value={totalUser} prefix={<LikeOutlined />} valueStyle={{\r\n            color: \"white\",\r\n            fontSize: \"2rem\"\r\n          }} /></a>\r\n        </Col>\r\n\r\n        <Col span={4} className=\"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-yellow-600 mr-4 mt-2\">\r\n          <a onClick={() => { handleStatisticClick('willExpried') }}><Statistic title=\"จำนวนผู้ใช้งานที่กำลังจะหมดอายุ\" value={totalWillExpired} prefix={<LikeOutlined />} valueStyle={{\r\n            color: \"white\",\r\n            fontSize: \"2rem\"\r\n          }} /></a>\r\n        </Col>\r\n\r\n        <Col span={4} className=\"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-red-600 mr-4 mt-2\">\r\n          <a onClick={() => { handleStatisticClick('expried') }}> <Statistic title=\"จำนวนผู้ใช้งานที่หมดอายุ\" value={totalExpired} prefix={<LikeOutlined />} valueStyle={{\r\n            color: \"white\",\r\n            fontSize: \"2rem\"\r\n          }} /></a>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"w-full mt-4\">\r\n\r\n      <Row >\r\n          <Col span={24} className=\" pb-1\">\r\n            <Row>\r\n              <Col span={18} className=\"\">\r\n                <Row className=\"items-center\">\r\n                  <Link href=\"/admin/management-auto-landingpage/add-landingpage\">\r\n                    <a\r\n                      //onClick={(e) => handleLogout(e)}\r\n                      className=\"lg:inline-flex lg:w-auto w-full px-2 py-2 rounded h-8 text-white bg-green-600 font-bold items-center justify-center hover:bg-green-600 hover:text-white\"\r\n                    >\r\n                      เพิ่มวันหยุดพิเศษ\r\n                    </a>\r\n                  </Link>\r\n                </Row>\r\n              </Col>\r\n              <Col span={6} className=\"flex items-center justify-end justify-items-end\">\r\n                <Row className=\" justify-end justify-items-end \">\r\n                  <Search placeholder=\"input search text\"\r\n                    onSearch={onSearch}\r\n                    enterButton\r\n                    allowClear\r\n                  />\r\n                </Row>\r\n              </Col>\r\n              {/* <Col span={12} className=\"flex justify-items-end\">\r\n                    <div>\r\n\r\n                  </Col> */}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"w-full\">\r\n          <Col span={24}>\r\n            <Table\r\n              className=\"w-full\"\r\n              columns={columns}\r\n              rowKey={record => record.organization_id}\r\n              dataSource={data}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              onChange={handleTableChange}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}