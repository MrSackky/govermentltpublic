{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../db/models/index');\n\nconst handler = nextConnect().get(async (req, res) => {\n  const {\n    query: {\n      id,\n      name\n    }\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const organization_id = slug;\n  console.log(organization_id);\n  const organization = await models.Organization.findOne({\n    attributes: ['organization_id', 'organization_name', 'organization_name_eng', 'organization_logo', 'organization_email', 'organization_address', 'organization_sub_district_id', 'organization_phone', 'organization_fax', 'theme', 'thumbnail', 'thumbnail_link', 'thumbnail_url', 'show_index', 'google_verify', 'social_fb', 'social_fb_pageid', 'rss', 'google_tag_manager1', 'google_tag_manager2', 'date_created', 'date_expired', 'size_used', 'is_use', 'organization_email_alert', 'package', 'person01_name', 'person01_position', 'person01_image', 'person01_phone', 'person02_name', 'person02_position', 'person02_image', 'person02_phone', 'person03_name', 'person03_position', 'person03_image', 'person03_phone', 'is_use_intro', 'is_poll_confirm'],\n    where: {\n      organization_id: organization_id\n    },\n    include: [{\n      model: models.Packages,\n      as: 'packages'\n    }, {\n      model: models.Sub_district,\n      as: 'sub_districts',\n      attributes: ['sub_district_id', 'sub_district_name', 'province_id'],\n      include: [{\n        model: models.District,\n        as: 'districts',\n        attributes: ['district_id', 'district_name']\n      }, {\n        model: models.Province,\n        as: 'provinces',\n        attributes: ['province_id', 'province_name', 'province_abbrev']\n      }]\n    }, {\n      model: models.Users,\n      as: 'users',\n      where: {\n        type_user: 2\n      }\n    }] // include: models.Packages\n    // include: [{\n    //   association: models.Packages,\n    //   include: [ models.Organization.package_data ]\n    // }]\n\n  }); // const user = await models.users.findOne({\n  //   where: {\n  //     id: userId,\n  //   },\n  //   include: [\n  //     {\n  //       model: models.posts,\n  //       as: 'posts',\n  //     },\n  //     {\n  //       model: models.jobs,\n  //       as: 'jobs',\n  //     },\n  //   ],\n  // });\n\n  return res.status(200).json({\n    status: 200,\n    message: \"success\",\n    organization: organization ? organization : []\n  });\n}).post(async (req, res) => {}).put(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const organization_id = slug;\n  const {\n    organization_name,\n    organization_name_eng = \"\",\n    organization_phone,\n    thumbnail_url,\n    organization_email,\n    date_expired,\n    package_id,\n    organization_sub_district_id = 0,\n    organization_fax = \"\",\n    thumbnail_link,\n    is_use,\n    organization_address = \"\"\n  } = body;\n  const dataOrganization = {\n    organization_name: organization_name,\n    organization_name_eng: organization_name_eng,\n    organization_phone: organization_phone,\n    thumbnail_url: thumbnail_url,\n    organization_email: organization_email,\n    date_expired: date_expired,\n    package: package_id,\n    organization_sub_district_id: organization_sub_district_id,\n    organization_fax: organization_fax,\n    thumbnail_link: thumbnail_link,\n    is_use: is_use,\n    organization_address: organization_address\n  };\n\n  if (organization_id == undefined || organization_name == undefined || organization_name_eng == undefined || organization_phone == undefined || thumbnail_url == undefined || organization_email == undefined || date_expired == undefined || package_id == undefined || organization_sub_district_id == undefined || organization_fax == undefined || thumbnail_link == undefined || is_use == undefined || organization_address == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      organization_id: organization_id,\n      dataOrganization: dataOrganization\n    });\n  }\n\n  const organization = await models.Organization.update(dataOrganization, {\n    where: {\n      organization_id: organization_id\n    }\n  });\n  return res.status(200).json({\n    status: 200,\n    message: \"success\",\n    organization: organization ? organization : []\n  }); // await User.update({ lastName: \"Doe\" }, {\n  //   where: {\n  //     lastName: null\n  //   }\n  // });\n}).delete(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const organization_id = slug;\n\n  if (organization_id == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      organization_id: organization_id\n    });\n  }\n\n  const dataOrganization = {\n    is_use: 3\n  };\n  const organization = await models.Organization.update(dataOrganization, {\n    where: {\n      organization_id: organization_id\n    }\n  });\n  return res.status(200).json({\n    status: 200,\n    message: \"success\",\n    organization: organization ? organization : []\n  });\n}).patch(async (req, res) => {});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/government/pages/api/organization/[slug].js"],"names":["nextConnect","models","require","handler","get","req","res","query","id","name","slug","organization_id","console","log","organization","Organization","findOne","attributes","where","include","model","Packages","as","Sub_district","District","Province","Users","type_user","status","json","message","post","put","body","organization_name","organization_name_eng","organization_phone","thumbnail_url","organization_email","date_expired","package_id","organization_sub_district_id","organization_fax","thumbnail_link","is_use","organization_address","dataOrganization","package","undefined","update","delete","patch"],"mappings":"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","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../db/models/index');\r\n\r\nconst handler = nextConnect()\r\n  .get(async (req, res) => {\r\n    const {\r\n      query: { id, name },\r\n    } = req;\r\n    const { slug } = req.query;\r\n    const organization_id = slug;\r\n    console.log(organization_id)\r\n\r\n    const organization = await models.Organization.findOne({\r\n      attributes: [\r\n        'organization_id', 'organization_name', 'organization_name_eng', 'organization_logo',\r\n        'organization_email', 'organization_address', 'organization_sub_district_id', 'organization_phone',\r\n        'organization_fax', 'theme', 'thumbnail', 'thumbnail_link', 'thumbnail_url', 'show_index',\r\n        'google_verify', 'social_fb', 'social_fb_pageid', 'rss', 'google_tag_manager1', 'google_tag_manager2',\r\n        'date_created', 'date_expired', 'size_used', 'is_use', 'organization_email_alert', 'package',\r\n        'person01_name', 'person01_position', 'person01_image', 'person01_phone',\r\n        'person02_name', 'person02_position', 'person02_image', 'person02_phone',\r\n        'person03_name', 'person03_position', 'person03_image', 'person03_phone',\r\n        'is_use_intro', 'is_poll_confirm'\r\n      ],\r\n      where: {\r\n        organization_id: organization_id,\r\n      },\r\n      include: [\r\n\r\n        {\r\n          model: models.Packages,\r\n          as: 'packages',\r\n        },\r\n        {\r\n          model: models.Sub_district,\r\n          as: 'sub_districts',\r\n          attributes: ['sub_district_id', 'sub_district_name', 'province_id'],\r\n          include: [\r\n            {\r\n              model: models.District,\r\n              as: 'districts',\r\n              attributes: ['district_id', 'district_name'],\r\n\r\n            },\r\n            {\r\n              model: models.Province,\r\n              as: 'provinces',\r\n              attributes: ['province_id', 'province_name', 'province_abbrev'],\r\n\r\n            },\r\n          ]\r\n        },\r\n\r\n        {\r\n          model: models.Users,\r\n          as: 'users',\r\n          where: {\r\n            type_user: 2,\r\n          },\r\n        },\r\n      ],\r\n      // include: models.Packages\r\n      // include: [{\r\n      //   association: models.Packages,\r\n      //   include: [ models.Organization.package_data ]\r\n      // }]\r\n    });\r\n    // const user = await models.users.findOne({\r\n    //   where: {\r\n    //     id: userId,\r\n    //   },\r\n    //   include: [\r\n    //     {\r\n    //       model: models.posts,\r\n    //       as: 'posts',\r\n    //     },\r\n    //     {\r\n    //       model: models.jobs,\r\n    //       as: 'jobs',\r\n    //     },\r\n    //   ],\r\n    // });\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: \"success\",\r\n      organization: organization ? organization : []\r\n    });\r\n  })\r\n  .post(async (req, res) => { })\r\n  .put(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    const organization_id = slug;\r\n    const {\r\n      organization_name,\r\n      organization_name_eng = \"\",\r\n      organization_phone,\r\n      thumbnail_url,\r\n      organization_email,\r\n      date_expired,\r\n      package_id,\r\n      organization_sub_district_id = 0,\r\n      organization_fax = \"\",\r\n      thumbnail_link,\r\n      is_use,\r\n      organization_address = \"\"\r\n    } = body;\r\n\r\n    const dataOrganization = {\r\n      organization_name: organization_name,\r\n      organization_name_eng: organization_name_eng,\r\n      organization_phone: organization_phone,\r\n      thumbnail_url: thumbnail_url,\r\n      organization_email: organization_email,\r\n      date_expired: date_expired,\r\n      package: package_id,\r\n      organization_sub_district_id: organization_sub_district_id,\r\n      organization_fax: organization_fax,\r\n      thumbnail_link: thumbnail_link,\r\n      is_use: is_use,\r\n      organization_address: organization_address\r\n    };\r\n\r\n    if (\r\n      organization_id == undefined ||\r\n      organization_name == undefined || organization_name_eng == undefined ||\r\n      organization_phone == undefined || thumbnail_url == undefined ||\r\n      organization_email == undefined || date_expired == undefined ||\r\n      package_id == undefined || organization_sub_district_id == undefined ||\r\n      organization_fax == undefined || thumbnail_link == undefined ||\r\n      is_use == undefined || organization_address == undefined\r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        organization_id: organization_id,\r\n        dataOrganization: dataOrganization\r\n      });\r\n    }\r\n\r\n\r\n    const organization = await models.Organization.update(\r\n      dataOrganization, {\r\n      where: {\r\n        organization_id: organization_id\r\n      }\r\n    }\r\n    );\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: \"success\",\r\n      organization: organization ? organization : []\r\n    });\r\n\r\n    // await User.update({ lastName: \"Doe\" }, {\r\n    //   where: {\r\n    //     lastName: null\r\n    //   }\r\n    // });\r\n\r\n  })\r\n  .delete(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    const organization_id = slug;\r\n    if (organization_id == undefined) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        organization_id: organization_id\r\n      });\r\n    }\r\n\r\n    const dataOrganization = {\r\n      is_use: 3,\r\n\r\n    };\r\n    const organization = await models.Organization.update(\r\n      dataOrganization, {\r\n      where: {\r\n        organization_id: organization_id\r\n      }\r\n    }\r\n    );\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: \"success\",\r\n      organization: organization ? organization : []\r\n    });\r\n\r\n  })\r\n  .patch(async (req, res) => {\r\n\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}