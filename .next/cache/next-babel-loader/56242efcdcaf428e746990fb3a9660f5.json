{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../../db/models/index');\n\nimport middleware from '../../../../middleware/auth';\nimport { addDays, getIPAddress } from '../../../../middleware/utils';\n\nconst bcrypt = require('bcryptjs');\n\nconst salt = bcrypt.genSaltSync(10);\nimport moment from 'moment';\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  return res.status(400).json({\n    status: 400,\n    message: 'deny permission!!'\n  });\n}) // Post method\n.post(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const {\n    organization_id,\n    file_name,\n    file_name_ori,\n    file_subject,\n    file_url,\n    is_show,\n    download,\n    is_deleted\n  } = body; // const userId = slug;\n\n  const dataUser = {\n    \"organization_id\": organization_id,\n    \"file_name\": file_name,\n    \"file_name_ori\": file_name_ori,\n    \"file_subject\": file_subject,\n    \"file_url\": file_url,\n    \"is_show\": is_show,\n    \"download\": download,\n    \"is_deleted\": is_deleted\n  };\n  console.log(dataUser);\n\n  if (organization_id == undefined || file_name == undefined || file_name_ori == undefined || file_subject == undefined || file_url == undefined || download == undefined || is_deleted == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      dataUser: dataUser\n    });\n  }\n\n  var ip = await getIPAddress();\n  var currentDate = moment().format();\n  dataUser.ip = ip;\n  dataUser.is_deleted = 0;\n  dataUser.date_created = currentDate.replace(\"+07:00\", \"+00:00\");\n  dataUser.date_update = currentDate.replace(\"+07:00\", \"+00:00\");\n  const newDocuments = await models.store_documents.create(dataUser);\n\n  if (newDocuments == null) {\n    return res.status(500).json({\n      status: 500,\n      message: 'Internal error'\n    });\n  }\n\n  return res.status(200).json({\n    status: 200,\n    message: 'Insert completed'\n  });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/govermentlt/pages/api/admin/management/add-documents.js"],"names":["nextConnect","models","require","middleware","addDays","getIPAddress","bcrypt","salt","genSaltSync","moment","handler","use","get","req","res","status","json","message","post","body","slug","query","organization_id","file_name","file_name_ori","file_subject","file_url","is_show","download","is_deleted","dataUser","console","log","undefined","ip","currentDate","format","date_created","replace","date_update","newDocuments","store_documents","create"],"mappings":"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","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../../db/models/index');\r\nimport middleware from '../../../../middleware/auth';\r\nimport { addDays, getIPAddress } from '../../../../middleware/utils';\r\nconst bcrypt = require('bcryptjs');\r\nconst salt = bcrypt.genSaltSync(10);\r\nimport moment from 'moment';\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    return res.status(400).json({\r\n      status: 400,\r\n      message: 'deny permission!!',\r\n    });\r\n  })\r\n  // Post method\r\n  .post(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    const {\r\n      organization_id,\r\n      file_name,\r\n      file_name_ori,\r\n      file_subject,\r\n      file_url,\r\n      is_show,\r\n      download,\r\n      is_deleted,\r\n    } = body;\r\n    // const userId = slug;\r\n\r\n    const dataUser = {\r\n      \"organization_id\": organization_id,\r\n      \"file_name\": file_name,\r\n      \"file_name_ori\": file_name_ori,\r\n      \"file_subject\": file_subject,\r\n      \"file_url\": file_url,\r\n      \"is_show\": is_show,\r\n      \"download\": download,\r\n      \"is_deleted\": is_deleted,\r\n    };\r\n    console.log(dataUser);\r\n    if (\r\n      organization_id == undefined ||\r\n      file_name == undefined ||\r\n      file_name_ori == undefined ||\r\n      file_subject == undefined ||\r\n      file_url == undefined ||\r\n      download == undefined ||\r\n      is_deleted == undefined\r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        dataUser: dataUser,\r\n      });\r\n    }\r\n\r\n    var ip = await getIPAddress()\r\n    var currentDate = moment().format()\r\n    dataUser.ip = ip\r\n    dataUser.is_deleted = 0\r\n    dataUser.date_created = currentDate.replace(\"+07:00\", \"+00:00\")\r\n    dataUser.date_update = currentDate.replace(\"+07:00\", \"+00:00\")\r\n\r\n    const newDocuments = await models.store_documents.create(dataUser);\r\n\r\n    if (newDocuments == null) {\r\n      return res.status(500).json({\r\n        status: 500,\r\n        message: 'Internal error',\r\n      });\r\n    }\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: 'Insert completed',\r\n    });\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}