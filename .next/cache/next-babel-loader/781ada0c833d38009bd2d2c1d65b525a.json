{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\govermentlt\\\\pages\\\\admin\\\\dashborad\\\\index-super-admin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router from 'next/router';\n/* utils */\n\nimport { addDays, apiInstance, bytesToMB, bytesToSize, convertDateDBtoDatePickerNoTime, convertDatetoThaiDate, formatDateWithoutTime } from '../../../middleware/utils';\nimport { useEffect, useState } from 'react';\nimport { LikeOutlined } from '@ant-design/icons';\nimport { Button, Col, Input, Row, Statistic, Table, Typography } from 'antd';\nimport moment from 'moment';\nvar Search = Input.Search;\nvar Text = Typography.Text,\n    Title = Typography.Title;\nexport var __N_SSP = true;\nexport default function Home(props) {\n  _s();\n\n  var _this = this;\n\n  var origin = props.origin;\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState({\n    current: 1,\n    pageSize: 10\n  }),\n      pagination = _useState2[0],\n      setPagination = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState(null),\n      filters = _useState5[0],\n      setFilters = _useState5[1];\n\n  var _useState6 = useState(0),\n      totalUser = _useState6[0],\n      setTotalUser = _useState6[1];\n\n  var _useState7 = useState(0),\n      totalWillExpired = _useState7[0],\n      setTotalWillExpired = _useState7[1];\n\n  var _useState8 = useState(0),\n      totalExpired = _useState8[0],\n      setTotalExpired = _useState8[1];\n\n  var _useState9 = useState('dashborad-all'),\n      apiTxt = _useState9[0],\n      setApiTxt = _useState9[1];\n\n  var _useState10 = useState(null),\n      today = _useState10[0],\n      setToday = _useState10[1];\n\n  var _useState11 = useState(null),\n      willExpried = _useState11[0],\n      setWillExpried = _useState11[1];\n\n  var _useState12 = useState(null),\n      expried = _useState12[0],\n      setExpried = _useState12[1];\n\n  var _useState13 = useState('dashborad-will-expried'),\n      apiTxtWillExpried = _useState13[0],\n      setApiTxtWillExpried = _useState13[1];\n\n  var _useState14 = useState('ผู้ใช้ทั้งหมด'),\n      txtMenu = _useState14[0],\n      setTextMenu = _useState14[1];\n\n  useEffect(function () {\n    var _filters = [];\n    pagination.filters = _filters;\n    fetch({\n      pagination: pagination\n    });\n    fetchWillExprired({\n      pagination: pagination\n    });\n    fetchExprired({\n      pagination: pagination\n    });\n  }, []);\n  var columns = [{\n    title: 'วันที่สมัคร',\n    dataIndex: '',\n    sorter: true,\n    key: 'date_created',\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, \" \", convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_created)), \" \"));\n    } // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'วันที่หมดอายุ',\n    dataIndex: '',\n    sorter: true,\n    key: 'date_expired',\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, \" \", convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_expired)), \" \"));\n    } // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'ชื่อหน่วยงาน',\n    dataIndex: 'organization_name',\n    sorter: true // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'ใช้พื้นที่',\n    dataIndex: '',\n    sorter: true,\n    key: 'size_used',\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, \" \", bytesToSize(data.size_used), \"  \"));\n    } // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'package',\n    dataIndex: '',\n    key: 'package',\n    sorter: true,\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, \" \", data.packages.name_package, \" \"));\n    },\n    filters: [{\n      text: 'Free Package',\n      value: 1\n    }, {\n      text: 'Connect Package',\n      value: 2\n    }, {\n      text: 'Standard Package',\n      value: 3\n    }, {\n      text: 'Premium Package',\n      value: 4\n    }] // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: 'สถานะ',\n    dataIndex: '',\n    key: 'is_use',\n    sorter: true,\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, \" \", data.is_use == 1 ? \"ใช้งาน\" : \"ไม่ใช้งาน\", \" \"));\n    } // render: name => `${name.first} ${name.last}`,\n    // width: '20%',\n    // defaultSortOrder: 'descend',\n\n  }, {\n    title: '',\n    dataIndex: '',\n    key: 'x',\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(Button, {\n        type: \"primary\",\n        size: \"default\",\n        onClick: function onClick() {\n          return gotoPage(data.organization_id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, \" \\u0E41\\u0E01\\u0E49\\u0E44\\u0E02 \"), __jsx(Button, {\n        className: \"ml-1\",\n        type: \"danger\",\n        onClick: function onClick() {\n          return showModal(data);\n        },\n        size: \"default\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, \" \\u0E25\\u0E1A \"));\n    }\n  } // {\n  //   title: 'Gender',\n  //   dataIndex: 'gender',\n  //   // filters: [\n  //   //   { text: 'Male', value: 'male' },\n  //   //   { text: 'Female', value: 'female' },\n  //   // ],\n  //   width: '20%',\n  // },\n  // {\n  //   title: 'Email',\n  //   dataIndex: 'email',\n  // },\n  ];\n\n  var gotoPage = function gotoPage(id) {\n    console.log(id);\n    Router.push('/admin/management-organization/organization/' + id);\n  };\n\n  var usedSize = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(size_used) {\n      var _size;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return bytesToMB(parseInt(size_used));\n\n            case 2:\n              _size = _context.sent;\n              return _context.abrupt(\"return\", _size);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function usedSize(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleTableChange = function handleTableChange(pagination, filters, sorter) {\n    console.log(sorter);\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: pagination.current\n    });\n    setFilters(filters[\"package\"]);\n\n    switch (apiTxt) {\n      case \"dashborad-will-expried\":\n        fetchWillExpriredData({\n          sortField: sorter.columnKey,\n          sortOrder: sorter.order,\n          pagination: pagination,\n          filters: filters[\"package\"]\n        });\n        break;\n\n      case \"dashborad-expried\":\n        fetchExpriredData({\n          sortField: sorter.columnKey,\n          sortOrder: sorter.order,\n          pagination: pagination,\n          filters: filters[\"package\"]\n        });\n        break;\n\n      default:\n        fetchData({\n          sortField: sorter.columnKey,\n          sortOrder: sorter.order,\n          pagination: pagination,\n          filters: filters[\"package\"]\n        });\n        break;\n    }\n  };\n\n  var onSearch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_search) {\n      var _today, _willExpried, willExpriedDateString;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              setSearch(_search);\n              setPagination({\n                pageSize: pagination.pageSize,\n                current: 1\n              });\n              _today = moment().format('YYYY-MM-DD');\n              _willExpried = addDays(_today, 31);\n              _context2.next = 7;\n              return formatDateWithoutTime(_willExpried);\n\n            case 7:\n              willExpriedDateString = _context2.sent;\n              _context2.t0 = apiTxt;\n              _context2.next = _context2.t0 === \"dashborad-will-expried\" ? 11 : _context2.t0 === \"dashborad-expried\" ? 13 : _context2.t0 === \"dashborad-all\" ? 15 : 17;\n              break;\n\n            case 11:\n              fetchWillExpriredData({\n                pagination: {\n                  pageSize: pagination.pageSize,\n                  current: 1\n                },\n                search: _search\n              });\n              return _context2.abrupt(\"break\", 17);\n\n            case 13:\n              fetchExpriredData({\n                pagination: {\n                  pageSize: pagination.pageSize,\n                  current: 1\n                },\n                search: _search\n              });\n              return _context2.abrupt(\"break\", 17);\n\n            case 15:\n              fetchData({\n                pagination: {\n                  pageSize: pagination.pageSize,\n                  current: 1\n                },\n                search: _search\n              });\n              return _context2.abrupt(\"break\", 17);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSearch(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var fetch = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var params,\n          addactivitiesData,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              params = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              setLoading(true);\n              _context3.next = 4;\n              return apiInstance().get('organization/' + apiTxt + '?results=' + params.pagination.pageSize + '&page=' + params.pagination.current + \"&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters);\n\n            case 4:\n              addactivitiesData = _context3.sent;\n              setData(addactivitiesData.data.results);\n              setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n                total: addactivitiesData.data.totalCount // 200 is mock data, you should read it from server\n                // total: data.totalCount,\n\n              }));\n              setTotalUser(addactivitiesData.data.totalCount);\n              setLoading(false);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function fetch() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var params,\n          addactivitiesData,\n          _args4 = arguments;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              params = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};\n              setLoading(true);\n              _context4.next = 4;\n              return apiInstance().get('organization/dashborad-all?results=' + params.pagination.pageSize + '&page=' + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters);\n\n            case 4:\n              addactivitiesData = _context4.sent;\n              setData(addactivitiesData.data.results);\n              setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n                total: addactivitiesData.data.totalCount // 200 is mock data, you should read it from server\n                // total: data.totalCount,\n\n              })); // setTotalUser(addactivitiesData.data.totalCount)\n\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function fetchData() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var fetchWillExprired = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var params,\n          myCurrentDate,\n          _today,\n          _willExpried,\n          willExpriedDateString,\n          _Data,\n          _args5 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              params = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {};\n              myCurrentDate = new Date();\n              _today = moment().format('YYYY-MM-DD'); // var _today = myCurrentDate;\n\n              console.log(\"_today\");\n              console.log(_today);\n              _willExpried = addDays(_today, 31);\n              console.log(\"_willExpried\");\n              _context5.next = 9;\n              return formatDateWithoutTime(_willExpried);\n\n            case 9:\n              willExpriedDateString = _context5.sent;\n              pagination.today = _today;\n              pagination.willExpried = willExpriedDateString; // setExpried(_expried)\n\n              setPagination({\n                pageSize: pagination.pageSize,\n                current: 1\n              });\n              _context5.next = 15;\n              return apiInstance().get('organization/' + apiTxtWillExpried + '?results=' + params.pagination.pageSize + \"&page=1&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried);\n\n            case 15:\n              _Data = _context5.sent;\n              console.log(\"_Data fetchWillExprired\");\n              console.log(_Data);\n              setTotalWillExpired(_Data.data.totalCount);\n\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function fetchWillExprired() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var fetchWillExpriredData = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var params,\n          myCurrentDate,\n          _today,\n          _willExpried,\n          willExpriedDateString,\n          _Data,\n          _args6 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              params = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n              myCurrentDate = new Date();\n              _today = moment().format('YYYY-MM-DD'); // var _today = myCurrentDate;\n\n              console.log(\"_today\");\n              console.log(_today);\n              _willExpried = addDays(_today, 31);\n              console.log(\"_willExpried\");\n              _context6.next = 9;\n              return formatDateWithoutTime(_willExpried);\n\n            case 9:\n              willExpriedDateString = _context6.sent;\n              params.pagination.today = _today;\n              params.pagination.willExpried = willExpriedDateString; // setExpried(_expried)\n\n              setPagination({\n                pageSize: pagination.pageSize,\n                current: 1\n              });\n              _context6.next = 15;\n              return apiInstance().get('organization/' + apiTxtWillExpried + '?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried);\n\n            case 15:\n              _Data = _context6.sent;\n              console.log(\"_Data fetchWillExprired\");\n              console.log(_Data);\n              setData(_Data.data.results);\n              setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n                total: _Data.data.totalCount // 200 is mock data, you should read it from server\n                // total: data.totalCount,\n\n              })); // setTotalWillExpired(_Data.data.totalCount)\n\n              setLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function fetchWillExpriredData() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var fetchExprired = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var params,\n          myCurrentDate,\n          _today,\n          _willExpried,\n          willExpriedDateString,\n          _Data,\n          _args7 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              params = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};\n              myCurrentDate = new Date();\n              _today = moment().format('YYYY-MM-DD'); // var _today = myCurrentDate;\n\n              console.log(\"_today\");\n              console.log(_today);\n              _willExpried = addDays(_today, 31);\n              console.log(\"_willExpried\");\n              _context7.next = 9;\n              return formatDateWithoutTime(_willExpried);\n\n            case 9:\n              willExpriedDateString = _context7.sent;\n              params.pagination.today = _today;\n              params.pagination.willExpried = willExpriedDateString; // setExpried(_expried)\n\n              setPagination({\n                pageSize: pagination.pageSize,\n                current: 1\n              });\n              _context7.next = 15;\n              return apiInstance().get('organization/dashborad-expried?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried);\n\n            case 15:\n              _Data = _context7.sent;\n              console.log(\"_Data fetchWillExprired\");\n              console.log(_Data);\n              setTotalExpired(_Data.data.totalCount);\n\n            case 19:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function fetchExprired() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var fetchExpriredData = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var params,\n          myCurrentDate,\n          _today,\n          _willExpried,\n          willExpriedDateString,\n          _Data,\n          _args8 = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              params = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {};\n              myCurrentDate = new Date();\n              _today = moment().format('YYYY-MM-DD'); // var _today = myCurrentDate;\n\n              console.log(\"_today\");\n              console.log(_today);\n              _willExpried = addDays(_today, 31);\n              console.log(\"_willExpried\");\n              _context8.next = 9;\n              return formatDateWithoutTime(_willExpried);\n\n            case 9:\n              willExpriedDateString = _context8.sent;\n              params.pagination.today = _today;\n              params.pagination.willExpried = willExpriedDateString; // setExpried(_expried)\n\n              setPagination({\n                pageSize: pagination.pageSize,\n                current: 1\n              });\n              _context8.next = 15;\n              return apiInstance().get('organization/dashborad-expried?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried);\n\n            case 15:\n              _Data = _context8.sent;\n              console.log(\"_Data fetchWillExprired\");\n              console.log(_Data);\n              setData(_Data.data.results);\n              setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n                total: _Data.data.totalCount // 200 is mock data, you should read it from server\n                // total: data.totalCount,\n\n              })); // setTotalExpired(_Data.data.totalCount)\n\n              setLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function fetchExpriredData() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var handleStatisticClick = function handleStatisticClick(value) {\n    setSearch(\"\");\n\n    switch (value) {\n      case \"willExpried\":\n        setTextMenu(\"จำนวนผู้ใช้งานที่กำลังจะหมดอายุ\");\n        setApiTxt(\"dashborad-will-expried\");\n        fetchWillExpriredData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          }\n        });\n        break;\n\n      case \"expried\":\n        setTextMenu(\"จำนวนผู้ใช้งานที่หมดอายุ\");\n        setApiTxt(\"dashborad-expried\");\n        fetchExpriredData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          }\n        });\n        break;\n\n      default:\n        setTextMenu(\"จำนวนผู้ใช้งานทั้งหมด\");\n        setApiTxt(\"dashborad-all\");\n        fetchData({\n          pagination: {\n            pageSize: pagination.pageSize,\n            current: 1\n          }\n        });\n        break;\n    }\n  };\n\n  var promiseState = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(value) {\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              return _context9.abrupt(\"return\", new Promise(function (resolve) {\n                return setApiTxt(value, resolve);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function promiseState(_x3) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var onChangeSearch = function onChangeSearch(value) {\n    console.log(value);\n    setSearch(value.target.value);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    span: 4,\n    className: \"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-green-600 mr-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      handleStatisticClick('all');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(Statistic, {\n    title: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\",\n    value: totalUser,\n    prefix: __jsx(LikeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 130\n      }\n    }),\n    valueStyle: {\n      color: \"white\",\n      fontSize: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 63\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    className: \"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-yellow-600 mr-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      handleStatisticClick('willExpried');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  }, __jsx(Statistic, {\n    title: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E01\\u0E33\\u0E25\\u0E31\\u0E07\\u0E08\\u0E30\\u0E2B\\u0E21\\u0E14\\u0E2D\\u0E32\\u0E22\\u0E38\",\n    value: totalWillExpired,\n    prefix: __jsx(LikeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 154\n      }\n    }),\n    valueStyle: {\n      color: \"white\",\n      fontSize: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 70\n    }\n  }))), __jsx(Col, {\n    span: 4,\n    className: \"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-red-600 mr-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    onClick: function onClick() {\n      handleStatisticClick('expried');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, \" \", __jsx(Statistic, {\n    title: \"\\u0E08\\u0E33\\u0E19\\u0E27\\u0E19\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\\u0E17\\u0E35\\u0E48\\u0E2B\\u0E21\\u0E14\\u0E2D\\u0E32\\u0E22\\u0E38\",\n    value: totalExpired,\n    prefix: __jsx(LikeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 140\n      }\n    }),\n    valueStyle: {\n      color: \"white\",\n      fontSize: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 67\n    }\n  })))), __jsx(Row, {\n    className: \"w-full mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 24,\n    className: \" pb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    span: 18,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    className: \"items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, __jsx(Title, {\n    level: 2,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 19\n    }\n  }, txtMenu))), __jsx(Col, {\n    span: 24,\n    className: \"flex items-center justify-end justify-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    className: \"justify-end justify-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 17\n    }\n  }, __jsx(Search, {\n    placeholder: \"\\u0E01\\u0E23\\u0E2D\\u0E01\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\\u0E07\\u0E32\\u0E19\",\n    value: search,\n    onChange: function onChange(value) {\n      return onChangeSearch(value);\n    },\n    onSearch: onSearch,\n    enterButton: true,\n    allowClear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 19\n    }\n  })))))), __jsx(Row, {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    className: \"w-full\",\n    columns: columns,\n    rowKey: function rowKey(record) {\n      return record.organization_id;\n    },\n    dataSource: data,\n    pagination: pagination,\n    loading: loading,\n    onChange: handleTableChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }\n  })))));\n}\n/* getServerSideProps */\n\n_s(Home, \"pLHt1v67KMnPUEgZdD/GuyUIPak=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/govermentlt/pages/admin/dashborad/index-super-admin.js"],"names":["Router","addDays","apiInstance","bytesToMB","bytesToSize","convertDateDBtoDatePickerNoTime","convertDatetoThaiDate","formatDateWithoutTime","useEffect","useState","LikeOutlined","Button","Col","Input","Row","Statistic","Table","Typography","moment","Search","Text","Title","Home","props","origin","data","setData","current","pageSize","pagination","setPagination","loading","setLoading","search","setSearch","filters","setFilters","totalUser","setTotalUser","totalWillExpired","setTotalWillExpired","totalExpired","setTotalExpired","apiTxt","setApiTxt","today","setToday","willExpried","setWillExpried","expried","setExpried","apiTxtWillExpried","setApiTxtWillExpried","txtMenu","setTextMenu","_filters","fetch","fetchWillExprired","fetchExprired","columns","title","dataIndex","sorter","key","render","date_created","date_expired","size_used","packages","name_package","text","value","is_use","gotoPage","organization_id","showModal","id","console","log","push","usedSize","parseInt","_size","handleTableChange","fetchWillExpriredData","sortField","columnKey","sortOrder","order","fetchExpriredData","fetchData","onSearch","_search","_today","format","_willExpried","willExpriedDateString","params","get","addactivitiesData","results","total","totalCount","myCurrentDate","Date","_Data","handleStatisticClick","promiseState","Promise","resolve","onChangeSearch","target","color","fontSize","record"],"mappings":"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","sourcesContent":["import Router from 'next/router';\r\n/* utils */\r\nimport { absoluteUrl, addDays, apiInstance, bytesToMB, bytesToSize, convertDateDBtoDatePickerNoTime, convertDatetoThaiDate, formatDateWithoutTime } from '../../../middleware/utils';\r\n\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Input,\r\n  Row,\r\n  Statistic,\r\n  Table,\r\n  Typography\r\n} from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { Search } = Input;\r\nconst { Text, Title } = Typography;\r\n\r\n\r\nexport default function Home(props) {\r\n  const { origin } = props;\r\n  const [data, setData] = useState([])\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  })\r\n  const [loading, setLoading] = useState(false)\r\n  const [search, setSearch] = useState(\"\")\r\n  const [filters, setFilters] = useState(null)\r\n  const [totalUser, setTotalUser] = useState(0)\r\n  const [totalWillExpired, setTotalWillExpired] = useState(0)\r\n  const [totalExpired, setTotalExpired] = useState(0)\r\n  const [apiTxt, setApiTxt] = useState('dashborad-all')\r\n  const [today, setToday] = useState(null)\r\n  const [willExpried, setWillExpried] = useState(null)\r\n  const [expried, setExpried] = useState(null)\r\n  const [apiTxtWillExpried, setApiTxtWillExpried] = useState('dashborad-will-expried')\r\n  const [txtMenu, setTextMenu] = useState('ผู้ใช้ทั้งหมด')\r\n\r\n  useEffect(() => {\r\n    var _filters = []\r\n    pagination.filters = _filters\r\n    fetch({ pagination });\r\n    fetchWillExprired({ pagination })\r\n    fetchExprired({ pagination })\r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'วันที่สมัคร',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'date_created',\r\n      render: (data) => <>\r\n        <span > {convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_created))} </span>\r\n      </>,\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'วันที่หมดอายุ',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'date_expired',\r\n      render: (data) => <>\r\n        <span > {convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_expired))} </span>\r\n      </>,\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'ชื่อหน่วยงาน',\r\n      dataIndex: 'organization_name',\r\n      sorter: true,\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'ใช้พื้นที่',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'size_used',\r\n      render: (data) => <>\r\n        <span > {bytesToSize(data.size_used)}  </span>\r\n      </>\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'package',\r\n      dataIndex: '',\r\n      key: 'package',\r\n      sorter: true,\r\n      render: (data) => <>\r\n        <span > {data.packages.name_package} </span>\r\n      </>,\r\n      filters: [\r\n        {\r\n          text: 'Free Package',\r\n          value: 1,\r\n        },\r\n        {\r\n          text: 'Connect Package',\r\n          value: 2,\r\n        },\r\n        {\r\n          text: 'Standard Package',\r\n          value: 3,\r\n        },\r\n        {\r\n          text: 'Premium Package',\r\n          value: 4,\r\n        },\r\n      ],\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: 'สถานะ',\r\n      dataIndex: '',\r\n      key: 'is_use',\r\n      sorter: true,\r\n      render: (data) => <>\r\n        <span > {data.is_use == 1 ? \"ใช้งาน\" : \"ไม่ใช้งาน\"} </span>\r\n      </>,\r\n      // render: name => `${name.first} ${name.last}`,\r\n      // width: '20%',\r\n      // defaultSortOrder: 'descend',\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: (data) => <>\r\n        <Button type=\"primary\" size={\"default\"} onClick={() => gotoPage(data.organization_id)} > แก้ไข </Button>\r\n        <Button className=\"ml-1\" type=\"danger\" onClick={() => showModal(data)} size={\"default\"} > ลบ </Button>\r\n      </>,\r\n    },\r\n    // {\r\n    //   title: 'Gender',\r\n    //   dataIndex: 'gender',\r\n    //   // filters: [\r\n    //   //   { text: 'Male', value: 'male' },\r\n    //   //   { text: 'Female', value: 'female' },\r\n    //   // ],\r\n    //   width: '20%',\r\n    // },\r\n    // {\r\n    //   title: 'Email',\r\n    //   dataIndex: 'email',\r\n    // },\r\n  ];\r\n  const gotoPage = (id) => {\r\n    console.log(id)\r\n    Router.push('/admin/management-organization/organization/' + id);\r\n\r\n  };\r\n\r\n  const usedSize = async (size_used) => {\r\n    var _size = await bytesToMB(parseInt(size_used))\r\n\r\n    return _size\r\n  }\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    console.log(sorter)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: pagination.current\r\n    })\r\n    setFilters(filters.package)\r\n\r\n    switch (apiTxt) {\r\n      case \"dashborad-will-expried\":\r\n        fetchWillExpriredData({\r\n          sortField: sorter.columnKey,\r\n          sortOrder: sorter.order,\r\n          pagination,\r\n          filters: filters.package,\r\n        })\r\n        break;\r\n      case \"dashborad-expried\":\r\n        fetchExpriredData({\r\n          sortField: sorter.columnKey,\r\n          sortOrder: sorter.order,\r\n          pagination,\r\n          filters: filters.package,\r\n        })\r\n        break;\r\n      default:\r\n        fetchData({\r\n          sortField: sorter.columnKey,\r\n          sortOrder: sorter.order,\r\n          pagination,\r\n          filters: filters.package,\r\n        });\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  const onSearch = async (_search) => {\r\n    setLoading(true)\r\n    setSearch(_search)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    var _willExpried = addDays(_today, 31);\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    switch (apiTxt) {\r\n\r\n      case \"dashborad-will-expried\":\r\n        fetchWillExpriredData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n          search: _search\r\n        })\r\n\r\n        break;\r\n      case \"dashborad-expried\":\r\n        fetchExpriredData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n          search: _search\r\n        })\r\n\r\n        break;\r\n\r\n      case \"dashborad-all\":\r\n        fetchData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n          search: _search\r\n        })\r\n        break;\r\n\r\n    }\r\n    // const addactivitiesData = await apiInstance().get(\r\n    //   'organization/' + apiTxt + '?results=' + pagination.pageSize + '&page=1&search=' + _search + \"&filters=\" + filters\r\n    // );\r\n\r\n    // setData(addactivitiesData.data.results)\r\n    // setLoading(false)\r\n  }\r\n  const fetch = async (params = {}) => {\r\n    setLoading(true)\r\n    const addactivitiesData = await apiInstance().get(\r\n      'organization/' + apiTxt + '?results=' + params.pagination.pageSize + '&page=' + params.pagination.current + \"&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters\r\n    );\r\n\r\n    setData(addactivitiesData.data.results)\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: addactivitiesData.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    })\r\n    setTotalUser(addactivitiesData.data.totalCount)\r\n    setLoading(false)\r\n  };\r\n\r\n  const fetchData = async (params = {}) => {\r\n    setLoading(true)\r\n    const addactivitiesData = await apiInstance().get(\r\n      'organization/dashborad-all?results=' + params.pagination.pageSize + '&page=' + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters\r\n    );\r\n\r\n    setData(addactivitiesData.data.results)\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: addactivitiesData.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    })\r\n    // setTotalUser(addactivitiesData.data.totalCount)\r\n    setLoading(false)\r\n  };\r\n\r\n  const fetchWillExprired = async (params = {}) => {\r\n    var myCurrentDate = new Date();\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    // var _today = myCurrentDate;\r\n    console.log(\"_today\")\r\n    console.log(_today)\r\n    var _willExpried = addDays(_today, 31);\r\n    console.log(\"_willExpried\")\r\n\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    pagination.today = _today\r\n    pagination.willExpried = willExpriedDateString\r\n    // setExpried(_expried)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    const _Data = await apiInstance().get(\r\n      'organization/' + apiTxtWillExpried + '?results=' + params.pagination.pageSize + \"&page=1&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried\r\n    );\r\n    console.log(\"_Data fetchWillExprired\")\r\n    console.log(_Data)\r\n\r\n\r\n    setTotalWillExpired(_Data.data.totalCount)\r\n  };\r\n\r\n  const fetchWillExpriredData = async (params = {}) => {\r\n    var myCurrentDate = new Date();\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    // var _today = myCurrentDate;\r\n    console.log(\"_today\")\r\n    console.log(_today)\r\n    var _willExpried = addDays(_today, 31);\r\n    console.log(\"_willExpried\")\r\n\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    params.pagination.today = _today\r\n    params.pagination.willExpried = willExpriedDateString\r\n    // setExpried(_expried)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    const _Data = await apiInstance().get(\r\n      'organization/' + apiTxtWillExpried + '?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried\r\n    );\r\n    console.log(\"_Data fetchWillExprired\")\r\n    console.log(_Data)\r\n\r\n    setData(_Data.data.results)\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: _Data.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    })\r\n    // setTotalWillExpired(_Data.data.totalCount)\r\n    setLoading(false)\r\n  };\r\n\r\n  const fetchExprired = async (params = {}) => {\r\n    var myCurrentDate = new Date();\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    // var _today = myCurrentDate;\r\n    console.log(\"_today\")\r\n    console.log(_today)\r\n    var _willExpried = addDays(_today, 31);\r\n    console.log(\"_willExpried\")\r\n\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    params.pagination.today = _today\r\n    params.pagination.willExpried = willExpriedDateString\r\n    // setExpried(_expried)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    const _Data = await apiInstance().get(\r\n      'organization/dashborad-expried?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + search + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried\r\n    );\r\n    console.log(\"_Data fetchWillExprired\")\r\n    console.log(_Data)\r\n\r\n\r\n    setTotalExpired(_Data.data.totalCount)\r\n  };\r\n\r\n  const fetchExpriredData = async (params = {}) => {\r\n    var myCurrentDate = new Date();\r\n    var _today = moment().format('YYYY-MM-DD');\r\n    // var _today = myCurrentDate;\r\n    console.log(\"_today\")\r\n    console.log(_today)\r\n    var _willExpried = addDays(_today, 31);\r\n    console.log(\"_willExpried\")\r\n\r\n    var willExpriedDateString = await formatDateWithoutTime(_willExpried)\r\n\r\n    params.pagination.today = _today\r\n    params.pagination.willExpried = willExpriedDateString\r\n    // setExpried(_expried)\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1\r\n    })\r\n    const _Data = await apiInstance().get(\r\n      'organization/dashborad-expried?results=' + params.pagination.pageSize + \"&page=\" + params.pagination.current + \"&search=\" + (params.search ? params.search : \"\") + \"&sortField=\" + params.sortField + \"&sortOrder=\" + params.sortOrder + \"&filters=\" + params.filters + \"&today=\" + params.pagination.today + \"&willExpried=\" + params.pagination.willExpried\r\n    );\r\n    console.log(\"_Data fetchWillExprired\")\r\n    console.log(_Data)\r\n\r\n    setData(_Data.data.results)\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: _Data.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    })\r\n    // setTotalExpired(_Data.data.totalCount)\r\n    setLoading(false)\r\n  };\r\n\r\n  const handleStatisticClick = (value) => {\r\n    setSearch(\"\")\r\n    switch (value) {\r\n\r\n      case \"willExpried\":\r\n        setTextMenu(\"จำนวนผู้ใช้งานที่กำลังจะหมดอายุ\")\r\n        setApiTxt(\"dashborad-will-expried\")\r\n\r\n        fetchWillExpriredData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n        })\r\n        break;\r\n      case \"expried\":\r\n        setTextMenu(\"จำนวนผู้ใช้งานที่หมดอายุ\")\r\n        setApiTxt(\"dashborad-expried\")\r\n        fetchExpriredData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n        })\r\n        break;\r\n\r\n      default:\r\n        setTextMenu(\"จำนวนผู้ใช้งานทั้งหมด\")\r\n        setApiTxt(\"dashborad-all\")\r\n        fetchData({\r\n          pagination: {\r\n            pageSize: pagination.pageSize,\r\n            current: 1\r\n          },\r\n        })\r\n        break;\r\n    }\r\n\r\n  }\r\n  const promiseState = async value =>\r\n    new Promise(resolve => setApiTxt(value, resolve));\r\n\r\n  const onChangeSearch = (value) => {\r\n    console.log(value)\r\n    setSearch(value.target.value)\r\n  }\r\n  return (\r\n    <div>\r\n      <Row>\r\n\r\n        <Col span={4} className=\"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-green-600 mr-4 mt-2\">\r\n          <a onClick={() => { handleStatisticClick('all') }}> <Statistic title=\"จำนวนผู้ใช้งานทั้งหมด\" value={totalUser} prefix={<LikeOutlined />} valueStyle={{\r\n            color: \"white\",\r\n            fontSize: \"2rem\"\r\n          }} /></a>\r\n        </Col>\r\n\r\n        <Col span={4} className=\"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-yellow-600 mr-4 mt-2\">\r\n          <a onClick={() => { handleStatisticClick('willExpried') }}><Statistic title=\"จำนวนผู้ใช้งานที่กำลังจะหมดอายุ\" value={totalWillExpired} prefix={<LikeOutlined />} valueStyle={{\r\n            color: \"white\",\r\n            fontSize: \"2rem\"\r\n          }} /></a>\r\n        </Col>\r\n\r\n        <Col span={4} className=\"lg:col-3 md:col-12 p-4 rounded-lg text-white bg-red-600 mr-4 mt-2\">\r\n          <a onClick={() => { handleStatisticClick('expried') }}> <Statistic title=\"จำนวนผู้ใช้งานที่หมดอายุ\" value={totalExpired} prefix={<LikeOutlined />} valueStyle={{\r\n            color: \"white\",\r\n            fontSize: \"2rem\"\r\n          }} /></a>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"w-full mt-4\">\r\n\r\n        <Row >\r\n          <Col span={24} className=\" pb-1\">\r\n            <Row>\r\n              <Col span={18} className=\"\">\r\n                <Row className=\"items-center\">\r\n                  <Title level={2} className=\"mr-2\">{txtMenu}</Title>\r\n                </Row>\r\n              </Col>\r\n              <Col span={24} className=\"flex items-center justify-end justify-items-end\">\r\n                <Row className='justify-end justify-items-end'>\r\n                  <Search placeholder=\"กรอกชื่อผู้ใช้งาน\"\r\n                    value={search}\r\n                    onChange={(value) => onChangeSearch(value)}\r\n                    onSearch={onSearch}\r\n                    enterButton\r\n                    allowClear\r\n                  />\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"w-full\">\r\n          <Col span={24}>\r\n            <Table\r\n              className=\"w-full\"\r\n              columns={columns}\r\n              rowKey={record => record.organization_id}\r\n              dataSource={data}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              onChange={handleTableChange}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}