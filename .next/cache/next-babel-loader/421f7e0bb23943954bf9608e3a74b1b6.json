{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../db/models/index');\n\nimport middleware from '../../../middleware/auth';\nimport moment from 'moment';\nimport { absoluteUrl, checkIsLogin, getIPAddress, convertDatetoAddDB } from '../../../middleware/utils';\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {}).post(async (req, res) => {}).put(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const {\n    menu_sub_id,\n    menu_seq\n  } = body; //SampleText.replace(\"Developer\", \"App Builder\");\n\n  const dataMenu = {\n    // menu_id: menu_id,\n    menu_seq: menu_seq\n  };\n\n  if (menu_sub_id == undefined || menu_seq == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      menu_sub_id: menu_sub_id,\n      dataMenu: dataMenu\n    });\n  }\n\n  const menu_subDataResult = await models.Menu_sub.update(dataMenu, {\n    where: {\n      menu_sub_id: menu_sub_id\n    }\n  });\n  return res.status(200).json({\n    status: 200,\n    message: \"success\" // organization: organization ? organization : []\n\n  }); // await User.update({ lastName: \"Doe\" }, {\n  //   where: {\n  //     lastName: null\n  //   }\n  // });\n});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/menu/reorder-menu-sub.js"],"names":["nextConnect","models","require","middleware","moment","absoluteUrl","checkIsLogin","getIPAddress","convertDatetoAddDB","Sequelize","Op","handler","use","get","req","res","post","put","body","slug","query","menu_sub_id","menu_seq","dataMenu","undefined","status","json","message","menu_subDataResult","Menu_sub","update","where"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,kBAAlD,QAA4E,2BAA5E;;AACA,MAAMC,SAAS,GAAGP,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMQ,EAAE,GAAGD,SAAS,CAACC,EAArB;AAEA,MAAMC,OAAO,GAAGX,WAAW,GACzB;AADyB,CAExBY,GAFa,CAETT,UAFS,EAGd;AAHc,CAIbU,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB,CAExB,CANa,EAObC,IAPa,CAOR,OAAOF,GAAP,EAAYC,GAAZ,KAAoB,CAEzB,CATa,EAUbE,GAVa,CAUT,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AAAEG,IAAAA;AAAF,MAAWJ,GAAjB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWL,GAAG,CAACM,KAArB;AACA,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA;AAFI,MAGFJ,IAHJ,CAHuB,CAOvB;;AACA,QAAMK,QAAQ,GAAI;AAChB;AACAD,IAAAA,QAAQ,EAAEA;AAFM,GAAlB;;AAKA,MACED,WAAW,IAAIG,SAAf,IACAF,QAAQ,IAAIE,SAFd,EAGE;AACA,WAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BE,MAAAA,OAAO,EAAE,gBAFiB;AAG1BN,MAAAA,WAAW,EAAEA,WAHa;AAI1BE,MAAAA,QAAQ,EAAEA;AAJgB,KAArB,CAAP;AAMD;;AAGD,QAAMK,kBAAkB,GAAG,MAAM3B,MAAM,CAAC4B,QAAP,CAAgBC,MAAhB,CAC/BP,QAD+B,EACrB;AACVQ,IAAAA,KAAK,EAAE;AACLV,MAAAA,WAAW,EAAEA;AADR;AADG,GADqB,CAAjC;AAQA,SAAON,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,GADkB;AAE1BE,IAAAA,OAAO,EAAE,SAFiB,CAG1B;;AAH0B,GAArB,CAAP,CAlCuB,CAwCvB;AACA;AACA;AACA;AACA;AAED,CAxDa,CAAhB;AA0DA,eAAehB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\n\r\nconst models = require('../../../db/models/index');\r\nimport middleware from '../../../middleware/auth';\r\nimport moment from 'moment';\r\nimport { absoluteUrl, checkIsLogin, getIPAddress, convertDatetoAddDB } from '../../../middleware/utils';\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    \r\n  })\r\n  .post(async (req, res) => {\r\n   \r\n  })\r\n  .put(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    const {\r\n      menu_sub_id,\r\n      menu_seq,\r\n    } = body;\r\n    //SampleText.replace(\"Developer\", \"App Builder\");\r\n    const dataMenu  = {\r\n      // menu_id: menu_id,\r\n      menu_seq: menu_seq,\r\n    };\r\n\r\n    if (\r\n      menu_sub_id == undefined ||\r\n      menu_seq == undefined \r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        menu_sub_id: menu_sub_id,\r\n        dataMenu: dataMenu,\r\n      });\r\n    }\r\n\r\n\r\n    const menu_subDataResult = await models.Menu_sub.update(\r\n      dataMenu, {\r\n      where: {\r\n        menu_sub_id: menu_sub_id\r\n      }\r\n    }\r\n    );\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: \"success\",\r\n      // organization: organization ? organization : []\r\n    });\r\n\r\n    // await User.update({ lastName: \"Doe\" }, {\r\n    //   where: {\r\n    //     lastName: null\r\n    //   }\r\n    // });\r\n\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}