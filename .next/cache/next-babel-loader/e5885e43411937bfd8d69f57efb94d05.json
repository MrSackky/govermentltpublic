{"ast":null,"code":"import moment from 'moment';\nimport nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\nimport { getIPAddress } from '../../../middleware/utils';\n\nconst models = require('../../../db/models/index');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    organization_id = 0,\n    is_primary_menu = 1\n  } = req.query;\n  let _search = {\n    organization_id: organization_id,\n    is_deleted: 0,\n    is_primary_menu: is_primary_menu\n  }; // console.log(_search)\n\n  const _menu = await models.Menu.findAndCountAll({\n    // attributes: ['package_id','code_package','name_package','size_limit']\n    where: _search,\n    // offset: results * (page - 1),\n    // limit: parseInt(results),\n    include: [{\n      model: models.Menu_sub,\n      as: 'menu_subs',\n      where: {\n        is_deleted: 0\n      },\n      required: false,\n      // will create a left join,\n      order: [[\"menu_seq\", \"ASC\"]]\n    }],\n    order: [[\"menu_seq\", \"ASC\"], [\"menu_id\", \"ASC\"], ['menu_subs', 'menu_seq', 'ASC'], ['menu_subs', 'menu_sub_id', 'ASC']]\n  });\n\n  return res.status(200).json({\n    // info: {\n    //   page: page,\n    //   results: results\n    // },\n    results: _menu.rows,\n    totalCount: _menu.count\n  });\n}).post(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const {\n    organization_id,\n    menu_title,\n    menu_detail = \"\",\n    menu_seq,\n    have_sub,\n    is_show,\n    is_primary_menu,\n    is_pattern_menu,\n    pattern_menu\n  } = body; //SampleText.replace(\"Developer\", \"App Builder\");\n\n  const dataMenu = {\n    organization_id: organization_id,\n    menu_title: menu_title,\n    menu_detail: menu_detail,\n    menu_seq: menu_seq,\n    have_sub: have_sub,\n    is_show: is_show,\n    is_primary_menu: is_primary_menu,\n    is_pattern_menu: is_pattern_menu,\n    pattern_menu: pattern_menu\n  };\n\n  if (organization_id == undefined || menu_title == undefined || menu_detail == undefined || menu_seq == undefined || have_sub == undefined || is_show == undefined || is_primary_menu == undefined || is_pattern_menu == undefined || pattern_menu == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      dataMenu: dataMenu\n    });\n  }\n\n  var ip = await getIPAddress();\n  var currentDate = moment().format();\n  dataMenu.ip = ip;\n  dataMenu.is_deleted = 0;\n  dataMenu.date_created = currentDate.replace(\"+07:00\", \"+00:00\");\n  dataMenu.date_updated = currentDate.replace(\"+07:00\", \"+00:00\"); // console.log(dataIntro)\n\n  const newMenu = await models.Menu.create(dataMenu);\n\n  if (newMenu == null) {\n    return res.status(500).json({\n      status: 500,\n      message: 'Internal error'\n    });\n  }\n\n  return res.status(200).json({\n    status: 200,\n    message: 'บันทึกข้อมูลสำเร็จ'\n  });\n});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/menu/index.js"],"names":["moment","nextConnect","middleware","getIPAddress","models","require","Sequelize","Op","handler","use","get","req","res","method","body","organization_id","is_primary_menu","query","_search","is_deleted","_menu","Menu","findAndCountAll","where","include","model","Menu_sub","as","required","order","status","json","results","rows","totalCount","count","post","slug","menu_title","menu_detail","menu_seq","have_sub","is_show","is_pattern_menu","pattern_menu","dataMenu","undefined","message","ip","currentDate","format","date_created","replace","date_updated","newMenu","create"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nimport { getIPAddress } from '../../../middleware/utils';\r\n\r\nconst models = require('../../../db/models/index');\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { organization_id = 0, is_primary_menu = 1 } = req.query;\r\n    let _search = {\r\n      organization_id: organization_id,\r\n      is_deleted: 0,\r\n      is_primary_menu: is_primary_menu\r\n    };\r\n\r\n    // console.log(_search)\r\n    const _menu = await models.Menu.findAndCountAll({\r\n      // attributes: ['package_id','code_package','name_package','size_limit']\r\n      where: _search,\r\n      // offset: results * (page - 1),\r\n      // limit: parseInt(results),\r\n      include: [\r\n        {\r\n          model: models.Menu_sub,\r\n          as: 'menu_subs',\r\n          where: {\r\n            is_deleted: 0\r\n          },\r\n          required: false, // will create a left join,\r\n          order: [\r\n            [\"menu_seq\", \"ASC\"]\r\n          ]\r\n        },\r\n      ],\r\n      order: [\r\n        [\"menu_seq\", \"ASC\"],\r\n        [\"menu_id\", \"ASC\"],\r\n        ['menu_subs', 'menu_seq', 'ASC'],\r\n        ['menu_subs', 'menu_sub_id', 'ASC']\r\n      ]\r\n    });\r\n    return res.status(200).json({\r\n      // info: {\r\n      //   page: page,\r\n      //   results: results\r\n      // },\r\n      results: _menu.rows,\r\n      totalCount: _menu.count\r\n    });\r\n  })\r\n  .post(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    const {\r\n      organization_id,\r\n      menu_title,\r\n      menu_detail = \"\",\r\n      menu_seq,\r\n      have_sub,\r\n      is_show,\r\n      is_primary_menu,\r\n      is_pattern_menu,\r\n      pattern_menu,\r\n    } = body;\r\n    //SampleText.replace(\"Developer\", \"App Builder\");\r\n    const dataMenu = {\r\n      organization_id: organization_id,\r\n      menu_title: menu_title,\r\n      menu_detail: menu_detail,\r\n      menu_seq: menu_seq,\r\n      have_sub: have_sub,\r\n      is_show: is_show,\r\n      is_primary_menu: is_primary_menu,\r\n      is_pattern_menu: is_pattern_menu,\r\n      pattern_menu: pattern_menu,\r\n    };\r\n\r\n    if (\r\n      organization_id == undefined ||\r\n      menu_title == undefined || menu_detail == undefined ||\r\n      menu_seq == undefined || have_sub == undefined ||\r\n      is_show == undefined || is_primary_menu == undefined ||\r\n      is_pattern_menu == undefined || pattern_menu == undefined\r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        dataMenu: dataMenu\r\n      });\r\n    }\r\n    var ip = await getIPAddress()\r\n    var currentDate = moment().format()\r\n    dataMenu.ip = ip\r\n    dataMenu.is_deleted = 0\r\n    dataMenu.date_created = currentDate.replace(\"+07:00\", \"+00:00\")\r\n    dataMenu.date_updated = currentDate.replace(\"+07:00\", \"+00:00\")\r\n\r\n\r\n    // console.log(dataIntro)\r\n    const newMenu = await models.Menu.create(dataMenu);\r\n\r\n    if (newMenu == null) {\r\n      return res.status(500).json({\r\n        status: 500,\r\n        message: 'Internal error',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: 'บันทึกข้อมูลสำเร็จ',\r\n    });\r\n  });\r\n\r\n\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}