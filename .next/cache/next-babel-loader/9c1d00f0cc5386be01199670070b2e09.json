{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\nimport { getCurrentDate } from '../../../middleware/utils';\n\nconst models = require('../../../db/models/index');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    organization_id,\n    results,\n    page,\n    _date_created = getCurrentDate('-'),\n    sortField = \"contact_id\",\n    sortOrder = \"DESC\",\n    filters = []\n  } = req.query;\n  let _search = {}; // console.log('date_created')\n  // console.log(_date_created)\n\n  const TODAY_START = new Date().setHours(7, 0, 0, 0);\n  const NOW = new Date();\n  NOW.setHours(NOW.getHours() + 7); // console.log(TODAY_START)\n\n  var _dateStr = '2021-10-26 00:00:00'; // var _dateStr = '' + _date_created + \".000Z\";\n\n  _search = {\n    is_done: {\n      [Op.ne]: 1\n    },\n    date_created: {\n      [Op.gt]: TODAY_START,\n      [Op.lt]: NOW\n    },\n    organization_id: organization_id\n  }; // console.log(_search)\n\n  const _contact = await models.contact.findAndCountAll({\n    attributes: ['contact_id', 'organization_id', 'contact_post', 'contact_detail', 'contact_name_posted', 'contact_telephone', 'contact_email', 'date_created', 'date_updated', 'ip', 'personid', 'is_done'],\n    where: _search\n  });\n\n  return res.status(200).json({\n    info: {\n      page: page,\n      results: results\n    },\n    results: _contact.rows,\n    totalCount: _contact.count\n  });\n}).delete(async (req, res) => {});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/govermentlt/pages/api/contact/report-daily.js"],"names":["nextConnect","middleware","getCurrentDate","models","require","Sequelize","Op","handler","use","get","req","res","method","body","organization_id","results","page","_date_created","sortField","sortOrder","filters","query","_search","TODAY_START","Date","setHours","NOW","getHours","_dateStr","is_done","ne","date_created","gt","lt","_contact","contact","findAndCountAll","attributes","where","status","json","info","rows","totalCount","count","delete"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;AACA,MAAMC,OAAO,GAAGP,WAAW,GACzB;AADyB,CAExBQ,GAFa,CAETP,UAFS,EAGd;AAHc,CAIbQ,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA;AAFI,MAGFH,GAHJ;AAIA,QAAM;AAAEI,IAAAA,eAAF;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,aAAa,GAAGf,cAAc,CAAC,GAAD,CAAhE;AAAuEgB,IAAAA,SAAS,GAAG,YAAnF;AAAiGC,IAAAA,SAAS,GAAG,MAA7G;AAAqHC,IAAAA,OAAO,GAAG;AAA/H,MAAsIV,GAAG,CAACW,KAAhJ;AACA,MAAIC,OAAO,GAAG,EAAd,CANuB,CAQvB;AACA;;AACA,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAApB;AACA,QAAMC,GAAG,GAAG,IAAIF,IAAJ,EAAZ;AACAE,EAAAA,GAAG,CAACD,QAAJ,CAAaC,GAAG,CAACC,QAAJ,KAAiB,CAA9B,EAZuB,CAavB;;AAEA,MAAIC,QAAQ,GAAG,qBAAf,CAfuB,CAgBvB;;AACAN,EAAAA,OAAO,GAAG;AACRO,IAAAA,OAAO,EAAE;AACP,OAACvB,EAAE,CAACwB,EAAJ,GAAS;AADF,KADD;AAIRC,IAAAA,YAAY,EAAE;AACZ,OAACzB,EAAE,CAAC0B,EAAJ,GAAST,WADG;AAEZ,OAACjB,EAAE,CAAC2B,EAAJ,GAASP;AAFG,KAJN;AAQRZ,IAAAA,eAAe,EAAEA;AART,GAAV,CAjBuB,CA8BvB;;AACA,QAAMoB,QAAQ,GAAG,MAAM/B,MAAM,CAACgC,OAAP,CAAeC,eAAf,CAA+B;AACpDC,IAAAA,UAAU,EAAE,CACV,YADU,EACI,iBADJ,EACuB,cADvB,EACuC,gBADvC,EACyD,qBADzD,EAEV,mBAFU,EAEW,eAFX,EAE4B,cAF5B,EAE4C,cAF5C,EAGV,IAHU,EAGJ,UAHI,EAGQ,SAHR,CADwC;AAMpDC,IAAAA,KAAK,EAAEhB;AAN6C,GAA/B,CAAvB;;AAQA,SAAOX,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,IAAI,EAAE;AACJzB,MAAAA,IAAI,EAAEA,IADF;AAEJD,MAAAA,OAAO,EAAEA;AAFL,KADoB;AAK1BA,IAAAA,OAAO,EAAEmB,QAAQ,CAACQ,IALQ;AAM1BC,IAAAA,UAAU,EAAET,QAAQ,CAACU;AANK,GAArB,CAAP;AASD,CApDa,EAqDbC,MArDa,CAqDN,OAAOnC,GAAP,EAAYC,GAAZ,KAAoB,CAE3B,CAvDa,CAAhB;AAyDA,eAAeJ,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nimport { getCurrentDate } from '../../../middleware/utils';\r\nconst models = require('../../../db/models/index');\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { organization_id, results, page, _date_created = getCurrentDate('-'), sortField = \"contact_id\", sortOrder = \"DESC\", filters = [] } = req.query;\r\n    let _search = {};\r\n\r\n    // console.log('date_created')\r\n    // console.log(_date_created)\r\n    const TODAY_START = new Date().setHours(7, 0, 0, 0);\r\n    const NOW = new Date();\r\n    NOW.setHours(NOW.getHours() + 7);\r\n    // console.log(TODAY_START)\r\n\r\n    var _dateStr = '2021-10-26 00:00:00';\r\n    // var _dateStr = '' + _date_created + \".000Z\";\r\n    _search = {\r\n      is_done: {\r\n        [Op.ne]: 1,\r\n      },\r\n      date_created: {\r\n        [Op.gt]: TODAY_START,\r\n        [Op.lt]: NOW\r\n      },\r\n      organization_id: organization_id\r\n\r\n    }\r\n\r\n\r\n    // console.log(_search)\r\n    const _contact = await models.contact.findAndCountAll({\r\n      attributes: [\r\n        'contact_id', 'organization_id', 'contact_post', 'contact_detail', 'contact_name_posted',\r\n        'contact_telephone', 'contact_email', 'date_created', 'date_updated',\r\n        'ip', 'personid', 'is_done',\r\n      ],\r\n      where: _search\r\n    });\r\n    return res.status(200).json({\r\n      info: {\r\n        page: page,\r\n        results: results\r\n      },\r\n      results: _contact.rows,\r\n      totalCount: _contact.count\r\n    });\r\n\r\n  })\r\n  .delete(async (req, res) => {\r\n\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}