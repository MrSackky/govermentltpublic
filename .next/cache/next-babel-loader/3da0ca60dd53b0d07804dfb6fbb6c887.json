{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sackky\\\\Desktop\\\\govermentlt\\\\pages\\\\admin\\\\management-complain\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Input, notification, Table, Typography } from 'antd';\nimport Router from 'next/router'; // import UserNav from '../components/navigation/User';\n\nimport { useEffect, useState } from 'react';\n/* components */\n\nimport Layout from '../../../components/layout/LayoutAdmin';\n/* utils */\n\nimport { absoluteUrl, apiInstance, convertDateDBtoDatePickerNoTime, convertDatetoThaiDate } from '../../../middleware/utils';\nconst {\n  Text,\n  Title\n} = Typography;\nconst {\n  TextArea,\n  Search\n} = Input;\nexport default function Home(props) {\n  const [api, contextHolder] = notification.useNotification();\n  const {\n    user,\n    origin\n  } = props;\n  const {\n    0: login,\n    1: setLogin\n  } = useState(null);\n  const {\n    0: shouldRun,\n    1: setShouldRun\n  } = useState(true);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: search,\n    1: setSearch\n  } = useState('');\n  const {\n    0: visibleModalDelete,\n    1: setVisibleModalDelete\n  } = useState(false);\n  const {\n    0: dataDelete,\n    1: setDataDelete\n  } = useState(null);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState(null);\n  const {\n    0: pagination,\n    1: setPagination\n  } = useState({\n    current: 1,\n    pageSize: 10\n  });\n  const columns = [{\n    title: 'วันที่',\n    dataIndex: '',\n    sorter: true,\n    key: 'date_created',\n    render: data => __jsx(React.Fragment, null, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, ' ', convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_created)), ' '))\n  }, {\n    title: 'ผู้ร้องทุกข์',\n    dataIndex: 'complain_name_posted',\n    sorter: true\n  }, {\n    title: 'หัวข้อร้องทุกข์',\n    dataIndex: 'complain_post',\n    sorter: true\n  }, {\n    title: 'สถานะดำเนินการ',\n    dataIndex: '',\n    sorter: true,\n    key: 'is_done',\n    render: data => __jsx(React.Fragment, null, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, data.is_done == '1' ? \"ดำเนินการแล้ว\" : \"ยังไม่ได้ดำเนินการ\"))\n  }, {\n    title: '',\n    dataIndex: '',\n    key: 'x',\n    render: data => __jsx(React.Fragment, null, __jsx(Button, {\n      size: 'default',\n      onClick: () => gotoPage(data.complain_id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, ' ', \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\", ' '))\n  }];\n\n  const gotoPage = id => {\n    console.log(id);\n    Router.push('/admin/management-complain/' + id);\n  };\n\n  useEffect(() => {\n    var _filters = [];\n    pagination.filters = _filters;\n    fetch({\n      pagination\n    });\n  }, []);\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    console.log(sorter);\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: pagination.current\n    });\n    setFilters(filters.package);\n    fetch({\n      sortField: sorter.columnKey,\n      sortOrder: sorter.order,\n      pagination,\n      filters: filters.package\n    });\n  };\n\n  const onSearch = async _search => {\n    setLoading(true);\n    setSearch(_search);\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: 1\n    });\n    const addactivitiesData = await apiInstance().get('complain?organization_id=' + (user ? user.organization_id : 0) + '&results=' + pagination.pageSize + '&page=1&search=' + _search + '&filters=' + filters);\n    setData(addactivitiesData.data.results);\n    setLoading(false);\n  };\n\n  const fetch = async (params = {}) => {\n    setLoading(true);\n    const addactivitiesData = await apiInstance().get('complain?organization_id=' + (user ? user.organization_id : 0) + '&results=' + params.pagination.pageSize + '&page=' + params.pagination.current + '&search=' + search + '&sortField=' + params.sortField + '&sortOrder=' + params.sortOrder + '&filters=' + params.filters);\n    setData(addactivitiesData.data.results);\n    setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n      total: addactivitiesData.data.totalCount // 200 is mock data, you should read it from server\n      // total: data.totalCount,\n\n    }));\n    setLoading(false);\n  };\n\n  const showModal = data => {\n    console.log('data deleted');\n    console.log(data);\n    setDataDelete(data);\n    setVisibleModalDelete(true);\n  };\n\n  const hideModal = () => {\n    setVisibleModalDelete(false);\n  };\n\n  const onDeleteOrganization = async () => {\n    // console.log('DELETE')\n    // const data = {\n    //   'organization_name': value.organization_name,\n    // }\n    // console.log(data)\n    const registerData = await apiInstance().delete('complain/' + dataDelete.complain_id, {});\n\n    if (registerData.data.status == 200) {\n      openNotificationSuccess(); // fetchOrganizationData();\n\n      setVisibleModalDelete(false);\n      fetch({\n        pagination\n      });\n    } else {\n      openNotificationFail(registerData.data.message);\n    }\n  };\n\n  const openNotificationSuccess = () => {\n    api.success({\n      message: `ลบข้อมูลสำเร็จ`,\n      description: 'ลบข้อมูลสำเร็จ',\n      placement: 'topRight'\n    });\n  };\n\n  const openNotificationFail = messgae => {\n    api.error({\n      message: `พบปัญหาระหว่างการบันทึกข้อมูล`,\n      description: messgae,\n      placement: 'topRight'\n    });\n  };\n\n  return __jsx(Layout, {\n    key: 'home-complain',\n    titlePage: 'จัดการข้อมูลเมนูร้องทุกข์',\n    title: \"Government - Admin management\",\n    url: origin,\n    origin: origin,\n    isMain: true,\n    indexMenu: '3',\n    user: login,\n    props: props,\n    _routes: [{\n      path: '/admin/dashborad',\n      breadcrumbName: 'หน้าหลัก'\n    }, {\n      path: '/admin/management-complain',\n      breadcrumbName: 'จัดการข้อมูลเมนูร้องทุกข์'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, contextHolder, __jsx(Table, {\n    columns: columns,\n    rowKey: record => record.complain_id,\n    dataSource: data,\n    pagination: pagination,\n    loading: loading,\n    onChange: handleTableChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  })));\n}\n/* getServerSideProps */\n\nexport async function getServerSideProps(context) {\n  const {\n    req\n  } = context;\n  const {\n    origin\n  } = absoluteUrl(req);\n  return {\n    props: {\n      origin\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/govermentlt/pages/admin/management-complain/index.js"],"names":["Button","Input","notification","Table","Typography","Router","useEffect","useState","Layout","absoluteUrl","apiInstance","convertDateDBtoDatePickerNoTime","convertDatetoThaiDate","Text","Title","TextArea","Search","Home","props","api","contextHolder","useNotification","user","origin","login","setLogin","shouldRun","setShouldRun","data","setData","loading","setLoading","search","setSearch","visibleModalDelete","setVisibleModalDelete","dataDelete","setDataDelete","filters","setFilters","pagination","setPagination","current","pageSize","columns","title","dataIndex","sorter","key","render","date_created","is_done","gotoPage","complain_id","id","console","log","push","_filters","fetch","handleTableChange","package","sortField","columnKey","sortOrder","order","onSearch","_search","addactivitiesData","get","organization_id","results","params","total","totalCount","showModal","hideModal","onDeleteOrganization","registerData","delete","status","openNotificationSuccess","openNotificationFail","message","success","description","placement","messgae","error","path","breadcrumbName","record","getServerSideProps","context","req"],"mappings":"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","sourcesContent":["import { Button, Input, notification, Table, Typography } from 'antd';\r\nimport Router from 'next/router';\r\n// import UserNav from '../components/navigation/User';\r\nimport { useEffect, useState } from 'react';\r\n/* components */\r\nimport Layout from '../../../components/layout/LayoutAdmin';\r\n/* utils */\r\nimport {\r\n  absoluteUrl,\r\n  apiInstance,\r\n  convertDateDBtoDatePickerNoTime,\r\n  convertDatetoThaiDate\r\n} from '../../../middleware/utils';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst { TextArea, Search } = Input;\r\n\r\nexport default function Home(props) {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const { user, origin } = props;\r\n  const [login, setLogin] = useState(null);\r\n  const [shouldRun, setShouldRun] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n  const [visibleModalDelete, setVisibleModalDelete] = useState(false);\r\n  const [dataDelete, setDataDelete] = useState(null);\r\n  const [filters, setFilters] = useState(null);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  });\r\n  const columns = [\r\n    {\r\n      title: 'วันที่',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'date_created',\r\n      render: data => (\r\n        <>\r\n          <span>\r\n            {' '}\r\n            {convertDatetoThaiDate(\r\n              convertDateDBtoDatePickerNoTime(data.date_created),\r\n            )}{' '}\r\n          </span>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'ผู้ร้องทุกข์',\r\n      dataIndex: 'complain_name_posted',\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'หัวข้อร้องทุกข์',\r\n      dataIndex: 'complain_post',\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'สถานะดำเนินการ',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'is_done',\r\n      render: data => <>\r\n        <span>\r\n          {data.is_done == '1' ? \"ดำเนินการแล้ว\" : \"ยังไม่ได้ดำเนินการ\"}\r\n        </span>\r\n      </>,\r\n    },\r\n    {\r\n      title: '',\r\n      dataIndex: '',\r\n      key: 'x',\r\n      render: data => (\r\n        <>\r\n          <Button size={'default'} onClick={() => gotoPage(data.complain_id)}>\r\n            {' '}\r\n            รายละเอียด{' '}\r\n          </Button>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  const gotoPage = id => {\r\n    console.log(id);\r\n    Router.push('/admin/management-complain/' + id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    var _filters = [];\r\n    pagination.filters = _filters;\r\n    fetch({ pagination });\r\n  }, []);\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    console.log(sorter);\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: pagination.current,\r\n    });\r\n    setFilters(filters.package);\r\n    fetch({\r\n      sortField: sorter.columnKey,\r\n      sortOrder: sorter.order,\r\n      pagination,\r\n      filters: filters.package,\r\n    });\r\n  };\r\n  const onSearch = async _search => {\r\n    setLoading(true);\r\n    setSearch(_search);\r\n    setPagination({\r\n      pageSize: pagination.pageSize,\r\n      current: 1,\r\n    });\r\n    const addactivitiesData = await apiInstance().get(\r\n      'complain?organization_id=' +\r\n      (user ? user.organization_id : 0) +\r\n      '&results=' +\r\n      pagination.pageSize +\r\n      '&page=1&search=' +\r\n      _search +\r\n      '&filters=' +\r\n      filters,\r\n    );\r\n\r\n    setData(addactivitiesData.data.results);\r\n    setLoading(false);\r\n  };\r\n  const fetch = async (params = {}) => {\r\n    setLoading(true);\r\n    const addactivitiesData = await apiInstance().get(\r\n      'complain?organization_id=' +\r\n      (user ? user.organization_id : 0) +\r\n      '&results=' +\r\n      params.pagination.pageSize +\r\n      '&page=' +\r\n      params.pagination.current +\r\n      '&search=' +\r\n      search +\r\n      '&sortField=' +\r\n      params.sortField +\r\n      '&sortOrder=' +\r\n      params.sortOrder +\r\n      '&filters=' +\r\n      params.filters,\r\n    );\r\n\r\n    setData(addactivitiesData.data.results);\r\n    setPagination({\r\n      ...params.pagination,\r\n      total: addactivitiesData.data.totalCount,\r\n      // 200 is mock data, you should read it from server\r\n      // total: data.totalCount,\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  const showModal = data => {\r\n    console.log('data deleted');\r\n    console.log(data);\r\n    setDataDelete(data);\r\n    setVisibleModalDelete(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setVisibleModalDelete(false);\r\n  };\r\n\r\n  const onDeleteOrganization = async () => {\r\n    // console.log('DELETE')\r\n    // const data = {\r\n    //   'organization_name': value.organization_name,\r\n    // }\r\n    // console.log(data)\r\n    const registerData = await apiInstance().delete(\r\n      'complain/' + dataDelete.complain_id,\r\n      {},\r\n    );\r\n    if (registerData.data.status == 200) {\r\n      openNotificationSuccess();\r\n      // fetchOrganizationData();\r\n      setVisibleModalDelete(false);\r\n      fetch({ pagination });\r\n    } else {\r\n      openNotificationFail(registerData.data.message);\r\n    }\r\n  };\r\n\r\n  const openNotificationSuccess = () => {\r\n    api.success({\r\n      message: `ลบข้อมูลสำเร็จ`,\r\n      description: 'ลบข้อมูลสำเร็จ',\r\n      placement: 'topRight',\r\n    });\r\n  };\r\n\r\n  const openNotificationFail = messgae => {\r\n    api.error({\r\n      message: `พบปัญหาระหว่างการบันทึกข้อมูล`,\r\n      description: messgae,\r\n      placement: 'topRight',\r\n    });\r\n  };\r\n  return (\r\n    <Layout\r\n      key={'home-complain'}\r\n      titlePage={'จัดการข้อมูลเมนูร้องทุกข์'}\r\n      title=\"Government - Admin management\"\r\n      url={origin}\r\n      origin={origin}\r\n      isMain={true}\r\n      indexMenu={'3'}\r\n      user={login}\r\n      props={props}\r\n      _routes={[\r\n        {\r\n          path: '/admin/dashborad',\r\n          breadcrumbName: 'หน้าหลัก',\r\n        },\r\n        {\r\n          path: '/admin/management-complain',\r\n          breadcrumbName: 'จัดการข้อมูลเมนูร้องทุกข์',\r\n        },\r\n      ]}\r\n    >\r\n      <div>\r\n        {contextHolder}\r\n        <Table\r\n          columns={columns}\r\n          rowKey={record => record.complain_id}\r\n          dataSource={data}\r\n          pagination={pagination}\r\n          loading={loading}\r\n          onChange={handleTableChange}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}