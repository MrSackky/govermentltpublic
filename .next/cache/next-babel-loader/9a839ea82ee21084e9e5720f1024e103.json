{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../db/models/index');\n\nimport middleware from '../../../middleware/auth';\nimport moment from 'moment';\nimport { absoluteUrl, checkIsLogin, getIPAddress, convertDatetoAddDB } from '../../../middleware/utils';\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    organization_id = 0\n  } = req.query;\n  let _search = {\n    is_show: 1,\n    is_deleted: 0\n  }; // console.log(_search)\n\n  const _menu = await models.Pattern_menu.findAndCountAll({\n    // attributes: ['package_id','code_package','name_package','size_limit'] \n    where: _search,\n    // offset: results * (page - 1),\n    // limit: parseInt(results),\n    order: [[\"pattern_menu_id\", \"ASC\"]]\n  });\n\n  return res.status(200).json({\n    // info: {\n    //   page: page,\n    //   results: results\n    // },\n    results: _menu.rows,\n    totalCount: _menu.count\n  });\n}).post(async (req, res) => {// const { body } = req;\n  // const { slug } = req.query;\n  // const {\n  //   organization_id,\n  //   menu_title,\n  //   menu_detail,\n  //   menu_seq,\n  //   have_sub,\n  //   is_show,\n  //   is_primary_menu,\n  //   is_pattern_menu,\n  //   pattern_menu,\n  // } = body;\n  // //SampleText.replace(\"Developer\", \"App Builder\");\n  // const dataMenu = {\n  //   organization_id: organization_id,\n  //   menu_title: menu_title,\n  //   menu_detail: menu_detail,\n  //   menu_seq: menu_seq,\n  //   have_sub: have_sub,\n  //   is_show: is_show,\n  //   is_primary_menu: is_primary_menu,\n  //   is_pattern_menu: is_pattern_menu,\n  //   pattern_menu: pattern_menu,\n  // };\n  // if (\n  //   organization_id == undefined ||\n  //   menu_title == undefined || menu_detail == undefined ||\n  //   menu_seq == undefined || have_sub == undefined ||\n  //   is_show == undefined || is_primary_menu == undefined ||\n  //   is_pattern_menu == undefined || pattern_menu == undefined\n  // ) {\n  //   return res.status(200).json({\n  //     status: 201,\n  //     message: 'data incorrect',\n  //     dataMenu: dataMenu\n  //   });\n  // }\n  // var ip = await getIPAddress()\n  // var currentDate = moment().format()\n  // dataIntro.ip = ip\n  // dataIntro.is_deleted = 0\n  // dataIntro.date_created = currentDate.replace(\"+07:00\", \"+00:00\")\n  // dataIntro.date_updated = currentDate.replace(\"+07:00\", \"+00:00\")\n  // // console.log(dataIntro)\n  // const newMenu = await models.Menu.create(dataMenu);\n  // if (newMenu == null) {\n  //   return res.status(500).json({\n  //     status: 500,\n  //     message: 'Internal error',\n  //   });\n  // }\n  // return res.status(200).json({\n  //   status: 200,\n  //   message: 'บันทึกข้อมูลสำเร็จ',\n  // });\n});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/menu/pattern-menu.js"],"names":["nextConnect","models","require","middleware","moment","absoluteUrl","checkIsLogin","getIPAddress","convertDatetoAddDB","Sequelize","Op","handler","use","get","req","res","method","body","organization_id","query","_search","is_show","is_deleted","_menu","Pattern_menu","findAndCountAll","where","order","status","json","results","rows","totalCount","count","post"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,kBAAlD,QAA4E,2BAA5E;;AACA,MAAMC,SAAS,GAAGP,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMQ,EAAE,GAAGD,SAAS,CAACC,EAArB;AAEA,MAAMC,OAAO,GAAGX,WAAW,GACzB;AADyB,CAExBY,GAFa,CAETT,UAFS,EAGd;AAHc,CAIbU,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA;AAFI,MAGFH,GAHJ;AAIA,QAAM;AAAEI,IAAAA,eAAe,GAAG;AAApB,MAA0BJ,GAAG,CAACK,KAApC;AACA,MAAIC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAE,CADG;AAEZC,IAAAA,UAAU,EAAE;AAFA,GAAd,CANuB,CAWvB;;AACA,QAAMC,KAAK,GAAG,MAAMtB,MAAM,CAACuB,YAAP,CAAoBC,eAApB,CAAoC;AACtD;AACAC,IAAAA,KAAK,EAAEN,OAF+C;AAGtD;AACA;AACAO,IAAAA,KAAK,EAAE,CACL,CAAC,iBAAD,EAAoB,KAApB,CADK;AAL+C,GAApC,CAApB;;AASA,SAAOZ,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1B;AACA;AACA;AACA;AACAC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,IALW;AAM1BC,IAAAA,UAAU,EAAET,KAAK,CAACU;AANQ,GAArB,CAAP;AAQD,CAjCa,EAkCbC,IAlCa,CAkCR,OAAOpB,GAAP,EAAYC,GAAZ,KAAoB,CACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA/Fa,CAAhB;AAiGA,eAAeJ,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\n\r\nconst models = require('../../../db/models/index');\r\nimport middleware from '../../../middleware/auth';\r\nimport moment from 'moment';\r\nimport { absoluteUrl, checkIsLogin, getIPAddress, convertDatetoAddDB } from '../../../middleware/utils';\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { organization_id = 0 } = req.query;\r\n    let _search = {\r\n      is_show: 1,\r\n      is_deleted: 0\r\n    };\r\n\r\n    // console.log(_search)\r\n    const _menu = await models.Pattern_menu.findAndCountAll({\r\n      // attributes: ['package_id','code_package','name_package','size_limit'] \r\n      where: _search,\r\n      // offset: results * (page - 1),\r\n      // limit: parseInt(results),\r\n      order: [\r\n        [\"pattern_menu_id\", \"ASC\"]\r\n      ]\r\n    });\r\n    return res.status(200).json({\r\n      // info: {\r\n      //   page: page,\r\n      //   results: results\r\n      // },\r\n      results: _menu.rows,\r\n      totalCount: _menu.count\r\n    });\r\n  })\r\n  .post(async (req, res) => {\r\n    // const { body } = req;\r\n    // const { slug } = req.query;\r\n    // const {\r\n    //   organization_id,\r\n    //   menu_title,\r\n    //   menu_detail,\r\n    //   menu_seq,\r\n    //   have_sub,\r\n    //   is_show,\r\n    //   is_primary_menu,\r\n    //   is_pattern_menu,\r\n    //   pattern_menu,\r\n    // } = body;\r\n    // //SampleText.replace(\"Developer\", \"App Builder\");\r\n    // const dataMenu = {\r\n    //   organization_id: organization_id,\r\n    //   menu_title: menu_title,\r\n    //   menu_detail: menu_detail,\r\n    //   menu_seq: menu_seq,\r\n    //   have_sub: have_sub,\r\n    //   is_show: is_show,\r\n    //   is_primary_menu: is_primary_menu,\r\n    //   is_pattern_menu: is_pattern_menu,\r\n    //   pattern_menu: pattern_menu,\r\n    // };\r\n\r\n    // if (\r\n    //   organization_id == undefined ||\r\n    //   menu_title == undefined || menu_detail == undefined ||\r\n    //   menu_seq == undefined || have_sub == undefined ||\r\n    //   is_show == undefined || is_primary_menu == undefined ||\r\n    //   is_pattern_menu == undefined || pattern_menu == undefined\r\n    // ) {\r\n    //   return res.status(200).json({\r\n    //     status: 201,\r\n    //     message: 'data incorrect',\r\n    //     dataMenu: dataMenu\r\n    //   });\r\n    // }\r\n    // var ip = await getIPAddress()\r\n    // var currentDate = moment().format()\r\n    // dataIntro.ip = ip\r\n    // dataIntro.is_deleted = 0\r\n    // dataIntro.date_created = currentDate.replace(\"+07:00\", \"+00:00\")\r\n    // dataIntro.date_updated = currentDate.replace(\"+07:00\", \"+00:00\")\r\n\r\n\r\n    // // console.log(dataIntro)\r\n    // const newMenu = await models.Menu.create(dataMenu);\r\n\r\n    // if (newMenu == null) {\r\n    //   return res.status(500).json({\r\n    //     status: 500,\r\n    //     message: 'Internal error',\r\n    //   });\r\n    // }\r\n    // return res.status(200).json({\r\n    //   status: 200,\r\n    //   message: 'บันทึกข้อมูลสำเร็จ',\r\n    // });\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}