{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\n\nconst models = require('../../../db/models/index');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {}).put(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const organization_id = slug;\n  const {\n    theme\n  } = body; //SampleText.replace(\"Developer\", \"App Builder\");\n\n  const dataTheme = {\n    theme: theme\n  };\n\n  if (theme == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      theme: theme\n    });\n  }\n\n  const themeDataResult = await models.Organization.update(dataTheme, {\n    where: {\n      organization_id: organization_id\n    }\n  });\n  console.log('themeDataResult');\n  console.log(themeDataResult);\n  console.log(dataTheme);\n  console.log(organization_id);\n  return res.status(200).json({\n    status: 200,\n    message: 'success' // theme: theme ? theme : []\n\n  }); // await User.update({ lastName: \"Doe\" }, {\n  //   where: {\n  //     lastName: null\n  //   }\n  // });\n});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/theme/[slug].js"],"names":["nextConnect","middleware","models","require","Sequelize","Op","handler","use","get","req","res","put","body","slug","query","organization_id","theme","dataTheme","undefined","status","json","message","themeDataResult","Organization","update","where","console","log"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;AAEA,MAAMC,OAAO,GAAGN,WAAW,GACzB;AADyB,CAExBO,GAFa,CAETN,UAFS,EAGd;AAHc,CAIbO,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB,CAExB,CANa,EAObC,GAPa,CAOT,OAAOF,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AAAEE,IAAAA;AAAF,MAAWH,GAAjB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWJ,GAAG,CAACK,KAArB;AACA,QAAMC,eAAe,GAAGF,IAAxB;AACA,QAAM;AACJG,IAAAA;AADI,MAEFJ,IAFJ,CAJuB,CAQvB;;AACA,QAAMK,SAAS,GAAG;AAChBD,IAAAA,KAAK,EAAEA;AADS,GAAlB;;AAIA,MACEA,KAAK,IAAIE,SADX,EAEE;AACA,WAAOR,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BE,MAAAA,OAAO,EAAE,gBAFiB;AAG1BL,MAAAA,KAAK,EAAEA;AAHmB,KAArB,CAAP;AAKD;;AAED,QAAMM,eAAe,GAAG,MAAMpB,MAAM,CAACqB,YAAP,CAAoBC,MAApB,CAA2BP,SAA3B,EAAsC;AAClEQ,IAAAA,KAAK,EAAE;AACLV,MAAAA,eAAe,EAAEA;AADZ;AAD2D,GAAtC,CAA9B;AAKAW,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYZ,eAAZ;AAEA,SAAOL,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,GADkB;AAE1BE,IAAAA,OAAO,EAAE,SAFiB,CAG1B;;AAH0B,GAArB,CAAP,CAjCuB,CAuCvB;AACA;AACA;AACA;AACA;AACD,CAnDa,CAAhB;AAqDA,eAAef,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nconst models = require('../../../db/models/index');\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n\r\n  })\r\n  .put(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    const organization_id = slug;\r\n    const {\r\n      theme,\r\n    } = body;\r\n\r\n    //SampleText.replace(\"Developer\", \"App Builder\");\r\n    const dataTheme = {\r\n      theme: theme,\r\n    };\r\n\r\n    if (\r\n      theme == undefined\r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        theme: theme,\r\n      });\r\n    }\r\n\r\n    const themeDataResult = await models.Organization.update(dataTheme, {\r\n      where: {\r\n        organization_id: organization_id,\r\n      },\r\n    });\r\n    console.log('themeDataResult');\r\n    console.log(themeDataResult);\r\n    console.log(dataTheme);\r\n    console.log(organization_id);\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: 'success',\r\n      // theme: theme ? theme : []\r\n    });\r\n\r\n    // await User.update({ lastName: \"Doe\" }, {\r\n    //   where: {\r\n    //     lastName: null\r\n    //   }\r\n    // });\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}