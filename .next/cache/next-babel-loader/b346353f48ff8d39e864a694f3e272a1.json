{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../db/models/index');\n\nimport middleware from '../../../middleware/auth';\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    query: {\n      nextPage\n    },\n    method,\n    body\n  } = req;\n\n  const _province = await models.Province.findAndCountAll({\n    include: [// {\n      //   model: models.posts,\n      //   as: 'posts',\n      // },\n      // {\n      //   model: models.jobs,\n      //   as: 'jobs',\n      // },\n    ],\n    order: [// Will escape title and validate DESC against a list of valid direction parameters\n    ['seq', 'ASC'], ['province_name', 'ASC']]\n  });\n\n  res.statusCode = 200;\n  res.json({\n    status: 'success',\n    data: _province.rows\n  });\n}) // Post method\n.post(async (req, res) => {\n  res.end('method - post');\n}) // Put method\n.put(async (req, res) => {\n  res.end('method - put');\n}) // Patch method\n.patch(async (req, res) => {\n  throw new Error('Throws me around! Error can be caught and handled.');\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/govermentlt/pages/api/province/index.js"],"names":["nextConnect","models","require","middleware","handler","use","get","req","res","query","nextPage","method","body","_province","Province","findAndCountAll","include","order","statusCode","json","status","data","rows","post","end","put","patch","Error"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,MAAMC,OAAO,GAAGJ,WAAW,GACzB;AADyB,CAExBK,GAFa,CAETF,UAFS,EAGd;AAHc,CAIbG,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADH;AAEJC,IAAAA,MAFI;AAGJC,IAAAA;AAHI,MAIFL,GAJJ;;AAMA,QAAMM,SAAS,GAAG,MAAMZ,MAAM,CAACa,QAAP,CAAgBC,eAAhB,CAAgC;AACtDC,IAAAA,OAAO,EAAE,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARO,KAD6C;AAWtDC,IAAAA,KAAK,EAAE,CACL;AACA,KAAC,KAAD,EAAQ,KAAR,CAFK,EAGL,CAAC,eAAD,EAAkB,KAAlB,CAHK;AAX+C,GAAhC,CAAxB;;AAkBAT,EAAAA,GAAG,CAACU,UAAJ,GAAiB,GAAjB;AACAV,EAAAA,GAAG,CAACW,IAAJ,CAAS;AACPC,IAAAA,MAAM,EAAE,SADD;AAEPC,IAAAA,IAAI,EAAER,SAAS,CAACS;AAFT,GAAT;AAID,CAlCa,EAmCd;AAnCc,CAoCbC,IApCa,CAoCR,OAAOhB,GAAP,EAAYC,GAAZ,KAAoB;AACxBA,EAAAA,GAAG,CAACgB,GAAJ,CAAQ,eAAR;AACD,CAtCa,EAuCd;AAvCc,CAwCbC,GAxCa,CAwCT,OAAOlB,GAAP,EAAYC,GAAZ,KAAoB;AACvBA,EAAAA,GAAG,CAACgB,GAAJ,CAAQ,cAAR;AACD,CA1Ca,EA2Cd;AA3Cc,CA4CbE,KA5Ca,CA4CP,OAAOnB,GAAP,EAAYC,GAAZ,KAAoB;AACzB,QAAM,IAAImB,KAAJ,CAAU,oDAAV,CAAN;AACD,CA9Ca,CAAhB;AAgDA,eAAevB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nconst models = require('../../../db/models/index');\r\nimport middleware from '../../../middleware/auth';\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      query: { nextPage },\r\n      method,\r\n      body,\r\n    } = req;\r\n\r\n    const _province = await models.Province.findAndCountAll({\r\n      include: [\r\n        // {\r\n        //   model: models.posts,\r\n        //   as: 'posts',\r\n        // },\r\n        // {\r\n        //   model: models.jobs,\r\n        //   as: 'jobs',\r\n        // },\r\n      ],\r\n      order: [\r\n        // Will escape title and validate DESC against a list of valid direction parameters\r\n        ['seq', 'ASC'],\r\n        ['province_name', 'ASC'],\r\n      ]\r\n    });\r\n\r\n    res.statusCode = 200;\r\n    res.json({\r\n      status: 'success',\r\n      data: _province.rows,\r\n    });\r\n  })\r\n  // Post method\r\n  .post(async (req, res) => {\r\n    res.end('method - post');\r\n  })\r\n  // Put method\r\n  .put(async (req, res) => {\r\n    res.end('method - put');\r\n  })\r\n  // Patch method\r\n  .patch(async (req, res) => {\r\n    throw new Error('Throws me around! Error can be caught and handled.');\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}