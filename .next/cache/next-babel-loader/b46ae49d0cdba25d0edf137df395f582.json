{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\n\nconst models = require('../../../db/models/index');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    organization_id,\n    results,\n    page,\n    search,\n    sortField = \"infor_id\",\n    sortOrder = \"DESC\",\n    filters = []\n  } = req.query;\n  let _search = {};\n  _search = {\n    is_deleted: {\n      [Op.ne]: 1\n    },\n    organization_id: organization_id\n  }; // console.log(_search)\n\n  const _information = await models.information.findAndCountAll({\n    attributes: ['infor_id', 'organization_id', 'infor_date', 'infor_title', 'infor_detail', 'infor_image', 'infor_keyword', 'infor_view', 'date_created', 'date_update', 'status_active', 'is_deleted', 'ip'],\n    where: _search\n  });\n\n  return res.status(200).json({\n    info: {\n      page: page,\n      results: results\n    },\n    results: _information.rows,\n    totalCount: _information.count\n  });\n}).delete(async (req, res) => {});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/govermentlt/pages/api/information/report.js"],"names":["nextConnect","middleware","models","require","Sequelize","Op","handler","use","get","req","res","method","body","organization_id","results","page","search","sortField","sortOrder","filters","query","_search","is_deleted","ne","_information","information","findAndCountAll","attributes","where","status","json","info","rows","totalCount","count","delete"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;AAEA,MAAMC,OAAO,GAAGN,WAAW,GACzB;AADyB,CAExBO,GAFa,CAETN,UAFS,EAGd;AAHc,CAIbO,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA;AAFI,MAGFH,GAHJ;AAIA,QAAM;AAAEI,IAAAA,eAAF;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,MAAlC;AAA0CC,IAAAA,SAAS,GAAG,UAAtD;AAAkEC,IAAAA,SAAS,GAAG,MAA9E;AAAsFC,IAAAA,OAAO,GAAG;AAAhG,MAAuGV,GAAG,CAACW,KAAjH;AACA,MAAIC,OAAO,GAAG,EAAd;AAGAA,EAAAA,OAAO,GAAG;AACRC,IAAAA,UAAU,EAAE;AACV,OAACjB,EAAE,CAACkB,EAAJ,GAAS;AADC,KADJ;AAIRV,IAAAA,eAAe,EAAEA;AAJT,GAAV,CATuB,CAkBvB;;AACA,QAAMW,YAAY,GAAG,MAAMtB,MAAM,CAACuB,WAAP,CAAmBC,eAAnB,CAAmC;AAC5DC,IAAAA,UAAU,EAAE,CACV,UADU,EACE,iBADF,EACqB,YADrB,EACmC,aADnC,EAEV,cAFU,EAEM,aAFN,EAEqB,eAFrB,EAEsC,YAFtC,EAGV,cAHU,EAGM,aAHN,EAGqB,eAHrB,EAGsC,YAHtC,EAGoD,IAHpD,CADgD;AAM5DC,IAAAA,KAAK,EAAEP;AANqD,GAAnC,CAA3B;;AAQA,SAAOX,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,IAAI,EAAE;AACJhB,MAAAA,IAAI,EAAEA,IADF;AAEJD,MAAAA,OAAO,EAAEA;AAFL,KADoB;AAK1BA,IAAAA,OAAO,EAAEU,YAAY,CAACQ,IALI;AAM1BC,IAAAA,UAAU,EAAET,YAAY,CAACU;AANC,GAArB,CAAP;AASD,CAxCa,EAyCbC,MAzCa,CAyCN,OAAO1B,GAAP,EAAYC,GAAZ,KAAoB,CAE3B,CA3Ca,CAAhB;AA6CA,eAAeJ,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nconst models = require('../../../db/models/index');\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { organization_id, results, page, search, sortField = \"infor_id\", sortOrder = \"DESC\", filters = [] } = req.query;\r\n    let _search = {};\r\n\r\n\r\n    _search = {\r\n      is_deleted: {\r\n        [Op.ne]: 1,\r\n      },\r\n      organization_id: organization_id\r\n\r\n    }\r\n\r\n\r\n    // console.log(_search)\r\n    const _information = await models.information.findAndCountAll({\r\n      attributes: [\r\n        'infor_id', 'organization_id', 'infor_date', 'infor_title',\r\n        'infor_detail', 'infor_image', 'infor_keyword', 'infor_view',\r\n        'date_created', 'date_update', 'status_active', 'is_deleted', 'ip'\r\n      ],\r\n      where: _search\r\n    });\r\n    return res.status(200).json({\r\n      info: {\r\n        page: page,\r\n        results: results\r\n      },\r\n      results: _information.rows,\r\n      totalCount: _information.count\r\n    });\r\n\r\n  })\r\n  .delete(async (req, res) => {\r\n\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}