{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\n\nconst models = require('../../../db/models/index');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {}).put(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query; // const organization_id = slug;\n\n  const {\n    organization_id,\n    is_use_intro,\n    is_poll_confirm\n  } = body;\n  const dataOrganization = {\n    is_use_intro: is_use_intro,\n    is_poll_confirm: is_poll_confirm\n  };\n\n  if (organization_id == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      organization_id: organization_id,\n      dataOrganization: dataOrganization\n    });\n  }\n\n  const organization = await models.Organization.update(dataOrganization, {\n    where: {\n      organization_id: organization_id\n    }\n  });\n  return res.status(200).json({\n    status: 200,\n    message: \"success\",\n    organization: organization ? organization : []\n  }); // await User.update({ lastName: \"Doe\" }, {\n  //   where: {\n  //     lastName: null\n  //   }\n  // });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/govermentlt/pages/api/general/index.js"],"names":["nextConnect","middleware","models","require","Sequelize","Op","handler","use","get","req","res","put","body","slug","query","organization_id","is_use_intro","is_poll_confirm","dataOrganization","undefined","status","json","message","organization","Organization","update","where"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;AAEA,MAAMC,OAAO,GAAGN,WAAW,GACzB;AADyB,CAExBO,GAFa,CAETN,UAFS,EAGd;AAHc,CAIbO,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB,CAExB,CANa,EAObC,GAPa,CAOT,OAAOF,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AAAEE,IAAAA;AAAF,MAAWH,GAAjB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWJ,GAAG,CAACK,KAArB,CAFuB,CAGvB;;AACA,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA;AAHI,MAIFL,IAJJ;AAMA,QAAMM,gBAAgB,GAAG;AACvBF,IAAAA,YAAY,EAAEA,YADS;AAEvBC,IAAAA,eAAe,EAAEA;AAFM,GAAzB;;AAKA,MACEF,eAAe,IAAII,SADrB,EAEE;AACA,WAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BE,MAAAA,OAAO,EAAE,gBAFiB;AAG1BP,MAAAA,eAAe,EAAEA,eAHS;AAI1BG,MAAAA,gBAAgB,EAAEA;AAJQ,KAArB,CAAP;AAMD;;AAGD,QAAMK,YAAY,GAAG,MAAMrB,MAAM,CAACsB,YAAP,CAAoBC,MAApB,CACzBP,gBADyB,EACP;AAClBQ,IAAAA,KAAK,EAAE;AACLX,MAAAA,eAAe,EAAEA;AADZ;AADW,GADO,CAA3B;AAQA,SAAOL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,GADkB;AAE1BE,IAAAA,OAAO,EAAE,SAFiB;AAG1BC,IAAAA,YAAY,EAAEA,YAAY,GAAGA,YAAH,GAAkB;AAHlB,GAArB,CAAP,CAnCuB,CAyCvB;AACA;AACA;AACA;AACA;AAED,CAtDa,CAAhB;AAwDA,eAAejB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nconst models = require('../../../db/models/index');\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n\r\n  })\r\n  .put(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    // const organization_id = slug;\r\n    const {\r\n      organization_id,\r\n      is_use_intro,\r\n      is_poll_confirm\r\n    } = body;\r\n\r\n    const dataOrganization = {\r\n      is_use_intro: is_use_intro,\r\n      is_poll_confirm: is_poll_confirm\r\n    };\r\n\r\n    if (\r\n      organization_id == undefined\r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        organization_id: organization_id,\r\n        dataOrganization: dataOrganization\r\n      });\r\n    }\r\n\r\n\r\n    const organization = await models.Organization.update(\r\n      dataOrganization, {\r\n      where: {\r\n        organization_id: organization_id\r\n      }\r\n    }\r\n    );\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: \"success\",\r\n      organization: organization ? organization : []\r\n    });\r\n\r\n    // await User.update({ lastName: \"Doe\" }, {\r\n    //   where: {\r\n    //     lastName: null\r\n    //   }\r\n    // });\r\n\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}