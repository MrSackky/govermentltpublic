{"ast":null,"code":"import nextConnect from 'next-connect';\n\nconst models = require('../../../../../db/models/index');\n\nimport middleware from '../../../../../middleware/auth';\nimport moment from 'moment';\nimport { absoluteUrl, checkIsLogin, getIPAddress, convertDatetoAddDB } from '../../../../../middleware/utils';\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    results,\n    page,\n    search,\n    sortField = \"intro_id\",\n    sortOrder = \"DESC\",\n    filters = [],\n    isAdmin = 0,\n    organization_id = 0\n  } = req.query;\n  let _search = {};\n\n  if (isAdmin == 1) {\n    if (search != \"\") {\n      if (filters == 'undefined' || filters == \"null\") {\n        // console.log(\"if1\")\n        _search = {\n          is_deleted: {\n            [Op.ne]: 1\n          },\n          intro_title: {\n            [Op.like]: '%' + search + '%'\n          },\n          is_admin: isAdmin\n        };\n      } else {\n        console.log(\"if2\");\n        console.log(filters);\n        _search = {\n          is_deleted: {\n            [Op.ne]: 1\n          },\n          intro_title: {\n            [Op.like]: '%' + search + '%'\n          },\n          is_admin: isAdmin\n        };\n      }\n    } else {\n      if (filters == 'undefined' || filters == 'null') {\n        // console.log(\"if3\")\n        // console.log(filters)\n        _search = {\n          is_deleted: {\n            [Op.ne]: 1\n          },\n          is_admin: isAdmin\n        };\n      } else {\n        // console.log(\"if4\")\n        // console.log(filters)\n        _search = {\n          is_deleted: {\n            [Op.ne]: 1\n          },\n          is_admin: isAdmin\n        };\n      }\n    }\n  } else {\n    // user\n    if (search != \"\") {\n      if (filters == 'undefined' || filters == \"null\") {\n        // console.log(\"if1\")\n        _search = {\n          is_deleted: {\n            [Op.ne]: 1\n          },\n          intro_title: {\n            [Op.like]: '%' + search + '%'\n          },\n          organization_id: organization_id\n        };\n      } else {\n        console.log(\"if2\");\n        console.log(filters);\n        _search = {\n          is_deleted: {\n            [Op.ne]: 1\n          },\n          intro_title: {\n            [Op.like]: '%' + search + '%'\n          },\n          organization_id: organization_id\n        };\n      }\n    } else {\n      if (filters == 'undefined' || filters == 'null') {\n        // console.log(\"if3\")\n        // console.log(filters)\n        _search = {\n          is_deleted: {\n            [Op.ne]: 1\n          },\n          organization_id: organization_id\n        };\n      } else {\n        // console.log(\"if4\")\n        // console.log(filters)\n        _search = {\n          is_deleted: {\n            [Op.ne]: 1\n          },\n          organization_id: organization_id\n        };\n      }\n    }\n  } // console.log(_search)\n\n\n  const _intro = await models.intro.findAndCountAll({\n    // attributes: ['package_id','code_package','name_package','size_limit']\n    where: _search,\n    offset: results * (page - 1),\n    limit: parseInt(results),\n    order: [[sortField != \"undefined\" && sortOrder != \"undefined\" ? sortField : \"intro_id\", sortOrder != \"undefined\" ? sortOrder == \"ascend\" ? \"ASC\" : \"DESC\" : \"DESC\"]]\n  });\n\n  return res.status(200).json({\n    info: {\n      page: page,\n      results: results\n    },\n    results: _intro.rows,\n    totalCount: _intro.count\n  });\n}).post(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query;\n  const {\n    organization_id,\n    intro_title,\n    intro_url,\n    intro_btn,\n    intro_date_s,\n    intro_date_e,\n    intro_image,\n    is_has_bless,\n    is_admin,\n    is_use\n  } = body; //SampleText.replace(\"Developer\", \"App Builder\");\n\n  const dataIntro = {\n    organization_id: organization_id,\n    intro_title: intro_title,\n    intro_url: intro_url,\n    intro_btn: intro_btn,\n    intro_date_s: intro_date_s.replace(\"+07:00\", \"+00:00\"),\n    intro_date_e: intro_date_e.replace(\"+07:00\", \"+00:00\"),\n    intro_image: intro_image,\n    is_has_bless: is_has_bless,\n    is_admin: is_admin,\n    is_use: is_use\n  };\n\n  if (organization_id == undefined || intro_title == undefined || intro_url == undefined || intro_btn == undefined || intro_date_s == undefined || intro_date_e == undefined || intro_image == undefined || is_has_bless == undefined || is_admin == undefined || is_use == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      dataIntro: dataIntro\n    });\n  }\n\n  var ip = await getIPAddress();\n  console.log(\"ip\");\n  console.log(ip);\n  var currentDate = moment().format();\n  dataIntro.ip = ip;\n  dataIntro.is_deleted = 0;\n  dataIntro.date_created = currentDate.replace(\"+07:00\", \"+00:00\");\n  dataIntro.date_updated = currentDate.replace(\"+07:00\", \"+00:00\"); // console.log(dataIntro)\n\n  const newIntro = await models.intro.create(dataIntro);\n\n  if (newIntro == null) {\n    return res.status(500).json({\n      status: 500,\n      message: 'Internal error'\n    });\n  }\n\n  return res.status(200).json({\n    status: 200,\n    message: 'บันทึกข้อมูลสำเร็จ'\n  });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/government/pages/api/admin/management/landing-page/index.js"],"names":["nextConnect","models","require","middleware","moment","absoluteUrl","checkIsLogin","getIPAddress","convertDatetoAddDB","Sequelize","Op","handler","use","get","req","res","method","body","results","page","search","sortField","sortOrder","filters","isAdmin","organization_id","query","_search","is_deleted","ne","intro_title","like","is_admin","console","log","_intro","intro","findAndCountAll","where","offset","limit","parseInt","order","status","json","info","rows","totalCount","count","post","slug","intro_url","intro_btn","intro_date_s","intro_date_e","intro_image","is_has_bless","is_use","dataIntro","replace","undefined","message","ip","currentDate","format","date_created","date_updated","newIntro","create"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,gCAAD,CAAtB;;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,EAAkDC,kBAAlD,QAA4E,iCAA5E;;AACA,MAAMC,SAAS,GAAGP,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMQ,EAAE,GAAGD,SAAS,CAACC,EAArB;AAEA,MAAMC,OAAO,GAAGX,WAAW,GACzB;AADyB,CAExBY,GAFa,CAETT,UAFS,EAGd;AAHc,CAIbU,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA;AAFI,MAGFH,GAHJ;AAIA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,MAAjB;AAAyBC,IAAAA,SAAS,GAAG,UAArC;AAAiDC,IAAAA,SAAS,GAAG,MAA7D;AAAqEC,IAAAA,OAAO,GAAG,EAA/E;AAAmFC,IAAAA,OAAO,GAAG,CAA7F;AAAgGC,IAAAA,eAAe,GAAG;AAAlH,MAAwHX,GAAG,CAACY,KAAlI;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAIH,OAAO,IAAI,CAAf,EAAkB;AAChB,QAAIJ,MAAM,IAAI,EAAd,EAAkB;AAChB,UAAIG,OAAO,IAAI,WAAX,IAA0BA,OAAO,IAAI,MAAzC,EAAiD;AAC/C;AACAI,QAAAA,OAAO,GAAG;AACRC,UAAAA,UAAU,EAAE;AACV,aAAClB,EAAE,CAACmB,EAAJ,GAAS;AADC,WADJ;AAIRC,UAAAA,WAAW,EAAE;AACX,aAACpB,EAAE,CAACqB,IAAJ,GAAW,MAAMX,MAAN,GAAe;AADf,WAJL;AAORY,UAAAA,QAAQ,EAAER;AAPF,SAAV;AAWD,OAbD,MAaO;AACLS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAI,QAAAA,OAAO,GAAG;AACRC,UAAAA,UAAU,EAAE;AACV,aAAClB,EAAE,CAACmB,EAAJ,GAAS;AADC,WADJ;AAIRC,UAAAA,WAAW,EAAE;AACX,aAACpB,EAAE,CAACqB,IAAJ,GAAW,MAAMX,MAAN,GAAe;AADf,WAJL;AAORY,UAAAA,QAAQ,EAAER;AAPF,SAAV;AAWD;AAGF,KA/BD,MA+BO;AACL,UAAID,OAAO,IAAI,WAAX,IAA0BA,OAAO,IAAI,MAAzC,EAAiD;AAC/C;AACA;AAEAI,QAAAA,OAAO,GAAG;AAERC,UAAAA,UAAU,EAAE;AACV,aAAClB,EAAE,CAACmB,EAAJ,GAAS;AADC,WAFJ;AAKRG,UAAAA,QAAQ,EAAER;AALF,SAAV;AAQD,OAZD,MAYO;AACL;AACA;AACAG,QAAAA,OAAO,GAAG;AAERC,UAAAA,UAAU,EAAE;AACV,aAAClB,EAAE,CAACmB,EAAJ,GAAS;AADC,WAFJ;AAKRG,UAAAA,QAAQ,EAAER;AALF,SAAV;AAQD;AAEF;AACF,GA3DD,MA2DK;AACH;AACA,QAAIJ,MAAM,IAAI,EAAd,EAAkB;AAChB,UAAIG,OAAO,IAAI,WAAX,IAA0BA,OAAO,IAAI,MAAzC,EAAiD;AAC/C;AACAI,QAAAA,OAAO,GAAG;AACRC,UAAAA,UAAU,EAAE;AACV,aAAClB,EAAE,CAACmB,EAAJ,GAAS;AADC,WADJ;AAIRC,UAAAA,WAAW,EAAE;AACX,aAACpB,EAAE,CAACqB,IAAJ,GAAW,MAAMX,MAAN,GAAe;AADf,WAJL;AAORK,UAAAA,eAAe,EAAGA;AAPV,SAAV;AAWD,OAbD,MAaO;AACLQ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAI,QAAAA,OAAO,GAAG;AACRC,UAAAA,UAAU,EAAE;AACV,aAAClB,EAAE,CAACmB,EAAJ,GAAS;AADC,WADJ;AAIRC,UAAAA,WAAW,EAAE;AACX,aAACpB,EAAE,CAACqB,IAAJ,GAAW,MAAMX,MAAN,GAAe;AADf,WAJL;AAORK,UAAAA,eAAe,EAAGA;AAPV,SAAV;AAWD;AAGF,KA/BD,MA+BO;AACL,UAAIF,OAAO,IAAI,WAAX,IAA0BA,OAAO,IAAI,MAAzC,EAAiD;AAC/C;AACA;AAEAI,QAAAA,OAAO,GAAG;AAERC,UAAAA,UAAU,EAAE;AACV,aAAClB,EAAE,CAACmB,EAAJ,GAAS;AADC,WAFJ;AAKRJ,UAAAA,eAAe,EAAGA;AALV,SAAV;AAQD,OAZD,MAYO;AACL;AACA;AACAE,QAAAA,OAAO,GAAG;AAERC,UAAAA,UAAU,EAAE;AACV,aAAClB,EAAE,CAACmB,EAAJ,GAAS;AADC,WAFJ;AAKRJ,UAAAA,eAAe,EAAGA;AALV,SAAV;AAQD;AAEF;AACF,GA/HsB,CAmIvB;;;AACA,QAAMU,MAAM,GAAG,MAAMlC,MAAM,CAACmC,KAAP,CAAaC,eAAb,CAA6B;AAChD;AACAC,IAAAA,KAAK,EAAEX,OAFyC;AAGhDY,IAAAA,MAAM,EAAErB,OAAO,IAAIC,IAAI,GAAG,CAAX,CAHiC;AAIhDqB,IAAAA,KAAK,EAAEC,QAAQ,CAACvB,OAAD,CAJiC;AAKhDwB,IAAAA,KAAK,EAAE,CACL,CAACrB,SAAS,IAAI,WAAb,IAA4BC,SAAS,IAAI,WAAzC,GAAuDD,SAAvD,GAAmE,UAApE,EAAgFC,SAAS,IAAI,WAAb,GAA2BA,SAAS,IAAI,QAAb,GAAwB,KAAxB,GAAgC,MAA3D,GAAoE,MAApJ,CADK;AALyC,GAA7B,CAArB;;AASA,SAAOP,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,IAAI,EAAE;AACJ1B,MAAAA,IAAI,EAAEA,IADF;AAEJD,MAAAA,OAAO,EAAEA;AAFL,KADoB;AAK1BA,IAAAA,OAAO,EAAEiB,MAAM,CAACW,IALU;AAM1BC,IAAAA,UAAU,EAAEZ,MAAM,CAACa;AANO,GAArB,CAAP;AAQD,CAzJa,EA0JbC,IA1Ja,CA0JR,OAAOnC,GAAP,EAAYC,GAAZ,KAAoB;AACxB,QAAM;AAAEE,IAAAA;AAAF,MAAWH,GAAjB;AACA,QAAM;AAAEoC,IAAAA;AAAF,MAAWpC,GAAG,CAACY,KAArB;AACA,QAAM;AACJD,IAAAA,eADI;AAEJK,IAAAA,WAFI;AAGJqB,IAAAA,SAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA,YARI;AASJxB,IAAAA,QATI;AAUJyB,IAAAA;AAVI,MAWFxC,IAXJ,CAHwB,CAexB;;AACA,QAAMyC,SAAS,GAAG;AAChBjC,IAAAA,eAAe,EAAEA,eADD;AAEhBK,IAAAA,WAAW,EAAEA,WAFG;AAGhBqB,IAAAA,SAAS,EAAEA,SAHK;AAIhBC,IAAAA,SAAS,EAAEA,SAJK;AAKhBC,IAAAA,YAAY,EAAEA,YAAY,CAACM,OAAb,CAAqB,QAArB,EAA+B,QAA/B,CALE;AAMhBL,IAAAA,YAAY,EAAEA,YAAY,CAACK,OAAb,CAAqB,QAArB,EAA+B,QAA/B,CANE;AAOhBJ,IAAAA,WAAW,EAAEA,WAPG;AAQhBC,IAAAA,YAAY,EAAEA,YARE;AAShBxB,IAAAA,QAAQ,EAAEA,QATM;AAUhByB,IAAAA,MAAM,EAAEA;AAVQ,GAAlB;;AAaA,MACEhC,eAAe,IAAImC,SAAnB,IACA9B,WAAW,IAAI8B,SADf,IAC4BT,SAAS,IAAIS,SADzC,IAEAR,SAAS,IAAIQ,SAFb,IAE0BP,YAAY,IAAIO,SAF1C,IAGAN,YAAY,IAAIM,SAHhB,IAG6BL,WAAW,IAAIK,SAH5C,IAIAJ,YAAY,IAAII,SAJhB,IAI6B5B,QAAQ,IAAI4B,SAJzC,IAKAH,MAAM,IAAIG,SANZ,EAOE;AACA,WAAO7C,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BkB,MAAAA,OAAO,EAAE,gBAFiB;AAG1BH,MAAAA,SAAS,EAAEA;AAHe,KAArB,CAAP;AAKD;;AACD,MAAII,EAAE,GAAG,MAAMvD,YAAY,EAA3B;AACA0B,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY4B,EAAZ;AACA,MAAIC,WAAW,GAAG3D,MAAM,GAAG4D,MAAT,EAAlB;AACAN,EAAAA,SAAS,CAACI,EAAV,GAAeA,EAAf;AACAJ,EAAAA,SAAS,CAAC9B,UAAV,GAAuB,CAAvB;AACA8B,EAAAA,SAAS,CAACO,YAAV,GAAyBF,WAAW,CAACJ,OAAZ,CAAoB,QAApB,EAA8B,QAA9B,CAAzB;AACAD,EAAAA,SAAS,CAACQ,YAAV,GAAyBH,WAAW,CAACJ,OAAZ,CAAoB,QAApB,EAA8B,QAA9B,CAAzB,CAlDwB,CAqDxB;;AACA,QAAMQ,QAAQ,GAAG,MAAMlE,MAAM,CAACmC,KAAP,CAAagC,MAAb,CAAoBV,SAApB,CAAvB;;AAEA,MAAIS,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAOpD,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,GADkB;AAE1BkB,MAAAA,OAAO,EAAE;AAFiB,KAArB,CAAP;AAID;;AACD,SAAO9C,GAAG,CAAC4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,IAAAA,MAAM,EAAE,GADkB;AAE1BkB,IAAAA,OAAO,EAAE;AAFiB,GAArB,CAAP;AAID,CA5Na,CAAhB;AA8NA,eAAelD,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\n\r\nconst models = require('../../../../../db/models/index');\r\nimport middleware from '../../../../../middleware/auth';\r\nimport moment from 'moment';\r\nimport { absoluteUrl, checkIsLogin, getIPAddress, convertDatetoAddDB } from '../../../../../middleware/utils';\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { results, page, search, sortField = \"intro_id\", sortOrder = \"DESC\", filters = [], isAdmin = 0, organization_id = 0 } = req.query;\r\n    let _search = {};\r\n\r\n    if (isAdmin == 1) {\r\n      if (search != \"\") {\r\n        if (filters == 'undefined' || filters == \"null\") {\r\n          // console.log(\"if1\")\r\n          _search = {\r\n            is_deleted: {\r\n              [Op.ne]: 1,\r\n            },\r\n            intro_title: {\r\n              [Op.like]: '%' + search + '%'\r\n            },\r\n            is_admin: isAdmin\r\n\r\n\r\n          }\r\n        } else {\r\n          console.log(\"if2\")\r\n          console.log(filters)\r\n          _search = {\r\n            is_deleted: {\r\n              [Op.ne]: 1,\r\n            },\r\n            intro_title: {\r\n              [Op.like]: '%' + search + '%'\r\n            },\r\n            is_admin: isAdmin\r\n\r\n\r\n          }\r\n        }\r\n\r\n\r\n      } else {\r\n        if (filters == 'undefined' || filters == 'null') {\r\n          // console.log(\"if3\")\r\n          // console.log(filters)\r\n\r\n          _search = {\r\n\r\n            is_deleted: {\r\n              [Op.ne]: 1,\r\n            },\r\n            is_admin: isAdmin\r\n\r\n          }\r\n        } else {\r\n          // console.log(\"if4\")\r\n          // console.log(filters)\r\n          _search = {\r\n\r\n            is_deleted: {\r\n              [Op.ne]: 1,\r\n            },\r\n            is_admin: isAdmin\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n    }else{\r\n      // user\r\n      if (search != \"\") {\r\n        if (filters == 'undefined' || filters == \"null\") {\r\n          // console.log(\"if1\")\r\n          _search = {\r\n            is_deleted: {\r\n              [Op.ne]: 1,\r\n            },\r\n            intro_title: {\r\n              [Op.like]: '%' + search + '%'\r\n            },\r\n            organization_id : organization_id\r\n\r\n\r\n          }\r\n        } else {\r\n          console.log(\"if2\")\r\n          console.log(filters)\r\n          _search = {\r\n            is_deleted: {\r\n              [Op.ne]: 1,\r\n            },\r\n            intro_title: {\r\n              [Op.like]: '%' + search + '%'\r\n            },\r\n            organization_id : organization_id\r\n\r\n\r\n          }\r\n        }\r\n\r\n\r\n      } else {\r\n        if (filters == 'undefined' || filters == 'null') {\r\n          // console.log(\"if3\")\r\n          // console.log(filters)\r\n\r\n          _search = {\r\n\r\n            is_deleted: {\r\n              [Op.ne]: 1,\r\n            },\r\n            organization_id : organization_id\r\n\r\n          }\r\n        } else {\r\n          // console.log(\"if4\")\r\n          // console.log(filters)\r\n          _search = {\r\n\r\n            is_deleted: {\r\n              [Op.ne]: 1,\r\n            },\r\n            organization_id : organization_id\r\n\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // console.log(_search)\r\n    const _intro = await models.intro.findAndCountAll({\r\n      // attributes: ['package_id','code_package','name_package','size_limit']\r\n      where: _search,\r\n      offset: results * (page - 1),\r\n      limit: parseInt(results),\r\n      order: [\r\n        [sortField != \"undefined\" && sortOrder != \"undefined\" ? sortField : \"intro_id\", sortOrder != \"undefined\" ? sortOrder == \"ascend\" ? \"ASC\" : \"DESC\" : \"DESC\"]\r\n      ]\r\n    });\r\n    return res.status(200).json({\r\n      info: {\r\n        page: page,\r\n        results: results\r\n      },\r\n      results: _intro.rows,\r\n      totalCount: _intro.count\r\n    });\r\n  })\r\n  .post(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    const {\r\n      organization_id,\r\n      intro_title,\r\n      intro_url,\r\n      intro_btn,\r\n      intro_date_s,\r\n      intro_date_e,\r\n      intro_image,\r\n      is_has_bless,\r\n      is_admin,\r\n      is_use\r\n    } = body;\r\n    //SampleText.replace(\"Developer\", \"App Builder\");\r\n    const dataIntro = {\r\n      organization_id: organization_id,\r\n      intro_title: intro_title,\r\n      intro_url: intro_url,\r\n      intro_btn: intro_btn,\r\n      intro_date_s: intro_date_s.replace(\"+07:00\", \"+00:00\"),\r\n      intro_date_e: intro_date_e.replace(\"+07:00\", \"+00:00\"),\r\n      intro_image: intro_image,\r\n      is_has_bless: is_has_bless,\r\n      is_admin: is_admin,\r\n      is_use: is_use,\r\n    };\r\n\r\n    if (\r\n      organization_id == undefined ||\r\n      intro_title == undefined || intro_url == undefined ||\r\n      intro_btn == undefined || intro_date_s == undefined ||\r\n      intro_date_e == undefined || intro_image == undefined ||\r\n      is_has_bless == undefined || is_admin == undefined ||\r\n      is_use == undefined\r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        dataIntro: dataIntro\r\n      });\r\n    }\r\n    var ip = await getIPAddress()\r\n    console.log(\"ip\")\r\n    console.log(ip)\r\n    var currentDate = moment().format()\r\n    dataIntro.ip = ip\r\n    dataIntro.is_deleted = 0\r\n    dataIntro.date_created = currentDate.replace(\"+07:00\", \"+00:00\")\r\n    dataIntro.date_updated = currentDate.replace(\"+07:00\", \"+00:00\")\r\n\r\n\r\n    // console.log(dataIntro)\r\n    const newIntro = await models.intro.create(dataIntro);\r\n\r\n    if (newIntro == null) {\r\n      return res.status(500).json({\r\n        status: 500,\r\n        message: 'Internal error',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: 'บันทึกข้อมูลสำเร็จ',\r\n    });\r\n  });\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}