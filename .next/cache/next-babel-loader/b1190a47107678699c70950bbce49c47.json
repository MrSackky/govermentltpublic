{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\n\nconst models = require('../../../db/models/index');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    results,\n    page,\n    search,\n    sortField = \"organization_id\",\n    sortOrder = \"DESC\",\n    filters = []\n  } = req.query;\n  let _search = {};\n\n  if (search != \"\") {\n    if (filters == 'undefined' || filters == \"null\") {\n      // console.log(\"if1\")\n      _search = {\n        is_use: {\n          [Op.ne]: 3\n        },\n        [Op.or]: [{\n          organization_name_eng: {\n            [Op.like]: '%' + search + '%'\n          }\n        }, {\n          organization_name: {\n            [Op.like]: '%' + search + '%'\n          }\n        }]\n      };\n    } else {\n      console.log(\"if2\");\n      console.log(filters);\n      _search = {\n        is_use: {\n          [Op.ne]: 3\n        },\n        package: {\n          [Op.in]: [filters]\n        },\n        [Op.or]: [{\n          organization_name_eng: {\n            [Op.like]: '%' + search + '%'\n          }\n        }, {\n          organization_name: {\n            [Op.like]: '%' + search + '%'\n          }\n        }]\n      };\n    }\n  } else {\n    if (filters == 'undefined' || filters == 'null') {\n      // console.log(\"if3\")\n      // console.log(filters)\n      _search = {\n        is_use: {\n          [Op.ne]: 3\n        }\n      };\n    } else {\n      // console.log(\"if4\")\n      // console.log(filters)\n      _search = {\n        is_use: {\n          [Op.ne]: 3\n        },\n        package: {\n          [Op.in]: [filters]\n        }\n      };\n    }\n  } // console.log(_search)\n\n\n  const _organization = await models.Organization.findAndCountAll({\n    // attributes: ['package_id','code_package','name_package','size_limit']\n    attributes: ['organization_id', 'organization_name', 'organization_name_eng', 'organization_logo', 'organization_email', 'organization_address', 'organization_sub_district_id', 'organization_phone', 'organization_fax', 'theme', 'thumbnail', 'thumbnail_link', 'thumbnail_url', 'show_index', 'google_verify', 'social_fb', 'social_fb_pageid', 'rss', 'google_tag_manager1', 'google_tag_manager2', 'date_created', 'date_expired', 'size_used', 'package', 'is_use', 'is_use_intro'],\n    where: _search,\n    offset: results * (page - 1),\n    limit: parseInt(results),\n    include: [{\n      model: models.Packages,\n      as: 'packages'\n    }],\n    order: [[sortField != \"undefined\" && sortOrder != \"undefined\" ? sortField : \"organization_id\", sortOrder != \"undefined\" ? sortOrder == \"ascend\" ? \"ASC\" : \"DESC\" : \"DESC\"]]\n  });\n\n  return res.status(200).json({\n    info: {\n      page: page,\n      results: results\n    },\n    results: _organization.rows,\n    totalCount: _organization.count\n  });\n}).put(async (req, res) => {\n  const {\n    body\n  } = req;\n  const {\n    slug\n  } = req.query; // const organization_id = slug;\n\n  const {\n    organization_id,\n    organization_name,\n    organization_name_eng,\n    organization_logo,\n    organization_address,\n    organization_email,\n    organization_email_alert,\n    organization_phone,\n    organization_fax,\n    social_fb_pageid,\n    rss,\n    person01_name,\n    person01_position,\n    person01_image,\n    person01_phone,\n    person02_name,\n    person02_position,\n    person02_image,\n    person02_phone,\n    person03_name,\n    person03_position,\n    person03_image,\n    person03_phone,\n    organization_sub_district_id\n  } = body;\n  const dataOrganization = {\n    organization_name: organization_name,\n    organization_name_eng: organization_name_eng,\n    organization_logo: organization_logo,\n    organization_address: organization_address,\n    organization_email: organization_email,\n    organization_email_alert: organization_email_alert,\n    organization_phone: organization_phone,\n    organization_fax: organization_fax,\n    social_fb_pageid: social_fb_pageid,\n    rss: rss,\n    person01_name: person01_name,\n    person01_position: person01_position,\n    person01_image: person01_image,\n    person01_phone: person01_phone,\n    person02_name: person02_name,\n    person02_position: person02_position,\n    person02_image: person02_image,\n    person02_phone: person02_phone,\n    person03_name: person03_name,\n    person03_position: person03_position,\n    person03_image: person03_image,\n    person03_phone: person03_phone,\n    organization_sub_district_id: organization_sub_district_id // thumbnail_url: thumbnail_url,\n    // date_expired: date_expired,\n    // package_id: package_id,\n    // thumbnail_link: thumbnail_link,\n    // is_use: is_use,\n\n  };\n\n  if (organization_id == undefined) {\n    return res.status(200).json({\n      status: 201,\n      message: 'data incorrect',\n      organization_id: organization_id,\n      dataOrganization: dataOrganization\n    });\n  }\n\n  const organization = await models.Organization.update(dataOrganization, {\n    where: {\n      organization_id: organization_id\n    }\n  });\n  return res.status(200).json({\n    status: 200,\n    message: \"success\",\n    organization: organization ? organization : []\n  }); // await User.update({ lastName: \"Doe\" }, {\n  //   where: {\n  //     lastName: null\n  //   }\n  // });\n});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/profile/index.js"],"names":["nextConnect","middleware","models","require","Sequelize","Op","handler","use","get","req","res","method","body","results","page","search","sortField","sortOrder","filters","query","_search","is_use","ne","or","organization_name_eng","like","organization_name","console","log","package","in","_organization","Organization","findAndCountAll","attributes","where","offset","limit","parseInt","include","model","Packages","as","order","status","json","info","rows","totalCount","count","put","slug","organization_id","organization_logo","organization_address","organization_email","organization_email_alert","organization_phone","organization_fax","social_fb_pageid","rss","person01_name","person01_position","person01_image","person01_phone","person02_name","person02_position","person02_image","person02_phone","person03_name","person03_position","person03_image","person03_phone","organization_sub_district_id","dataOrganization","undefined","message","organization","update"],"mappings":"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","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nconst models = require('../../../db/models/index');\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\n\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { results, page, search, sortField = \"organization_id\", sortOrder = \"DESC\", filters = [] } = req.query;\r\n    let _search = {};\r\n\r\n\r\n    if (search != \"\") {\r\n      if (filters == 'undefined' || filters == \"null\") {\r\n        // console.log(\"if1\")\r\n        _search = {\r\n          is_use: {\r\n            [Op.ne]: 3,\r\n          },\r\n          [Op.or]: [\r\n            {\r\n              organization_name_eng: {\r\n                [Op.like]: '%' + search + '%'\r\n              }\r\n            }, {\r\n              organization_name: {\r\n                [Op.like]: '%' + search + '%'\r\n              },\r\n            }\r\n          ],\r\n\r\n\r\n        }\r\n      } else {\r\n        console.log(\"if2\")\r\n        console.log(filters)\r\n        _search = {\r\n          is_use: {\r\n            [Op.ne]: 3,\r\n          },\r\n          package: {\r\n            [Op.in]: [filters],\r\n          },\r\n          [Op.or]: [\r\n            {\r\n              organization_name_eng: {\r\n                [Op.like]: '%' + search + '%'\r\n              }\r\n            }, {\r\n              organization_name: {\r\n                [Op.like]: '%' + search + '%'\r\n              },\r\n            }\r\n          ],\r\n\r\n\r\n        }\r\n      }\r\n\r\n\r\n    } else {\r\n      if (filters == 'undefined' || filters == 'null') {\r\n        // console.log(\"if3\")\r\n        // console.log(filters)\r\n\r\n        _search = {\r\n\r\n          is_use: {\r\n            [Op.ne]: 3,\r\n          },\r\n\r\n        }\r\n      } else {\r\n        // console.log(\"if4\")\r\n        // console.log(filters)\r\n        _search = {\r\n\r\n          is_use: {\r\n            [Op.ne]: 3,\r\n          },\r\n          package: {\r\n            [Op.in]: [filters],\r\n          },\r\n\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n\r\n    // console.log(_search)\r\n    const _organization = await models.Organization.findAndCountAll({\r\n      // attributes: ['package_id','code_package','name_package','size_limit']\r\n      attributes: [\r\n        'organization_id', 'organization_name', 'organization_name_eng', 'organization_logo',\r\n        'organization_email', 'organization_address', 'organization_sub_district_id', 'organization_phone',\r\n        'organization_fax', 'theme', 'thumbnail', 'thumbnail_link', 'thumbnail_url', 'show_index',\r\n        'google_verify', 'social_fb', 'social_fb_pageid', 'rss', 'google_tag_manager1', 'google_tag_manager2',\r\n        'date_created', 'date_expired', 'size_used', 'package', 'is_use', 'is_use_intro'\r\n      ],\r\n      where: _search,\r\n      offset: results * (page - 1),\r\n      limit: parseInt(results),\r\n      include: [\r\n        {\r\n          model: models.Packages,\r\n          as: 'packages',\r\n        },\r\n      ],\r\n      order: [\r\n        [sortField != \"undefined\" && sortOrder != \"undefined\" ? sortField : \"organization_id\", sortOrder != \"undefined\" ? sortOrder == \"ascend\" ? \"ASC\" : \"DESC\" : \"DESC\"]\r\n      ]\r\n    });\r\n    return res.status(200).json({\r\n      info: {\r\n        page: page,\r\n        results: results\r\n      },\r\n      results: _organization.rows,\r\n      totalCount: _organization.count\r\n    });\r\n  })\r\n  .put(async (req, res) => {\r\n    const { body } = req;\r\n    const { slug } = req.query;\r\n    // const organization_id = slug;\r\n    const {\r\n      organization_id,\r\n      organization_name,\r\n      organization_name_eng,\r\n      organization_logo,\r\n      organization_address,\r\n      organization_email,\r\n      organization_email_alert,\r\n      organization_phone,\r\n      organization_fax,\r\n      social_fb_pageid,\r\n      rss,\r\n      person01_name,\r\n      person01_position,\r\n      person01_image,\r\n      person01_phone,\r\n      person02_name,\r\n      person02_position,\r\n      person02_image,\r\n      person02_phone,\r\n      person03_name,\r\n      person03_position,\r\n      person03_image,\r\n      person03_phone,\r\n      organization_sub_district_id,\r\n    } = body;\r\n\r\n    const dataOrganization = {\r\n      organization_name: organization_name,\r\n      organization_name_eng: organization_name_eng,\r\n      organization_logo: organization_logo,\r\n      organization_address: organization_address,\r\n      organization_email: organization_email,\r\n      organization_email_alert: organization_email_alert,\r\n      organization_phone: organization_phone,\r\n      organization_fax: organization_fax,\r\n      social_fb_pageid: social_fb_pageid,\r\n      rss: rss,\r\n      person01_name: person01_name,\r\n      person01_position: person01_position,\r\n      person01_image: person01_image,\r\n      person01_phone: person01_phone,\r\n      person02_name: person02_name,\r\n      person02_position: person02_position,\r\n      person02_image: person02_image,\r\n      person02_phone: person02_phone,\r\n      person03_name: person03_name,\r\n      person03_position: person03_position,\r\n      person03_image: person03_image,\r\n      person03_phone: person03_phone,\r\n      organization_sub_district_id: organization_sub_district_id,\r\n      // thumbnail_url: thumbnail_url,\r\n      // date_expired: date_expired,\r\n      // package_id: package_id,\r\n      // thumbnail_link: thumbnail_link,\r\n      // is_use: is_use,\r\n    };\r\n\r\n    if (\r\n      organization_id == undefined\r\n    ) {\r\n      return res.status(200).json({\r\n        status: 201,\r\n        message: 'data incorrect',\r\n        organization_id: organization_id,\r\n        dataOrganization: dataOrganization\r\n      });\r\n    }\r\n\r\n\r\n    const organization = await models.Organization.update(\r\n      dataOrganization, {\r\n      where: {\r\n        organization_id: organization_id\r\n      }\r\n    }\r\n    );\r\n\r\n    return res.status(200).json({\r\n      status: 200,\r\n      message: \"success\",\r\n      organization: organization ? organization : []\r\n    });\r\n\r\n    // await User.update({ lastName: \"Doe\" }, {\r\n    //   where: {\r\n    //     lastName: null\r\n    //   }\r\n    // });\r\n\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}