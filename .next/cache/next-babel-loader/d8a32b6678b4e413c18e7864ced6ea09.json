{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../../middleware/auth';\nimport { getCurrentDate } from '../../../middleware/utils';\n\nconst models = require('../../../db/models/index');\n\nconst Sequelize = require('sequelize');\n\nconst Op = Sequelize.Op;\nconst handler = nextConnect() // Middleware\n.use(middleware) // Get method\n.get(async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  const {\n    organization_id,\n    results,\n    page,\n    _date_created = getCurrentDate('-'),\n    sortField = \"tender_id\",\n    sortOrder = \"DESC\",\n    filters = []\n  } = req.query;\n  let _search = {}; // console.log('date_created')\n  // console.log(_date_created)\n  // var result = new Date(date);\n\n  const TODAY_START = new Date();\n  TODAY_START.setDate(1);\n  TODAY_START.setHours(0 + 7);\n  const NOW = new Date(); // console.log(NOW.getMonth)\n\n  NOW.setHours(NOW.getHours() + 7); // console.log(TODAY_START)\n\n  var _dateStr = '2021-10-26 00:00:00'; // var _dateStr = '' + _date_created + \".000Z\";\n\n  _search = {\n    is_deleted: {\n      [Op.ne]: 1\n    },\n    date_created: {\n      [Op.gt]: TODAY_START,\n      [Op.lt]: NOW\n    },\n    organization_id: organization_id\n  }; // console.log(_search)\n\n  const _tender = await models.tender.findAndCountAll({\n    attributes: ['tender_id', 'organization_id', 'tender_date', 'type_tender_id', 'tender_title', 'tender_detail', 'tender_keyword', 'expire_date', 'date_created', 'date_update', 'status_active', 'is_deleted', 'ip'],\n    where: _search\n  });\n\n  return res.status(200).json({\n    info: {\n      page: page,\n      results: results\n    },\n    results: _tender.rows,\n    totalCount: _tender.count\n  });\n}).delete(async (req, res) => {});\nexport default handler;","map":{"version":3,"sources":["D:/govermentlt/pages/api/purchase-news/report-monthly.js"],"names":["nextConnect","middleware","getCurrentDate","models","require","Sequelize","Op","handler","use","get","req","res","method","body","organization_id","results","page","_date_created","sortField","sortOrder","filters","query","_search","TODAY_START","Date","setDate","setHours","NOW","getHours","_dateStr","is_deleted","ne","date_created","gt","lt","_tender","tender","findAndCountAll","attributes","where","status","json","info","rows","totalCount","count","delete"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,EAAE,GAAGD,SAAS,CAACC,EAArB;AACA,MAAMC,OAAO,GAAGP,WAAW,GACzB;AADyB,CAExBQ,GAFa,CAETP,UAFS,EAGd;AAHc,CAIbQ,GAJa,CAIT,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA;AAFI,MAGFH,GAHJ;AAIA,QAAM;AAAEI,IAAAA,eAAF;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,IAA5B;AAAkCC,IAAAA,aAAa,GAAGf,cAAc,CAAC,GAAD,CAAhE;AAAuEgB,IAAAA,SAAS,GAAG,WAAnF;AAAgGC,IAAAA,SAAS,GAAG,MAA5G;AAAoHC,IAAAA,OAAO,GAAG;AAA9H,MAAqIV,GAAG,CAACW,KAA/I;AACA,MAAIC,OAAO,GAAG,EAAd,CANuB,CAQvB;AACA;AACA;;AAEA,QAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACAD,EAAAA,WAAW,CAACE,OAAZ,CAAoB,CAApB;AACAF,EAAAA,WAAW,CAACG,QAAZ,CAAqB,IAAI,CAAzB;AACA,QAAMC,GAAG,GAAG,IAAIH,IAAJ,EAAZ,CAfuB,CAgBvB;;AACAG,EAAAA,GAAG,CAACD,QAAJ,CAAaC,GAAG,CAACC,QAAJ,KAAiB,CAA9B,EAjBuB,CAkBvB;;AAEA,MAAIC,QAAQ,GAAG,qBAAf,CApBuB,CAqBvB;;AACAP,EAAAA,OAAO,GAAG;AACRQ,IAAAA,UAAU,EAAE;AACV,OAACxB,EAAE,CAACyB,EAAJ,GAAS;AADC,KADJ;AAIRC,IAAAA,YAAY,EAAE;AACZ,OAAC1B,EAAE,CAAC2B,EAAJ,GAASV,WADG;AAEZ,OAACjB,EAAE,CAAC4B,EAAJ,GAASP;AAFG,KAJN;AAQRb,IAAAA,eAAe,EAAEA;AART,GAAV,CAtBuB,CAmCvB;;AACA,QAAMqB,OAAO,GAAG,MAAMhC,MAAM,CAACiC,MAAP,CAAcC,eAAd,CAA8B;AAClDC,IAAAA,UAAU,EAAE,CACV,WADU,EACG,iBADH,EACsB,aADtB,EACqC,gBADrC,EAEV,cAFU,EAEM,eAFN,EAEuB,gBAFvB,EAEyC,aAFzC,EAGV,cAHU,EAGM,aAHN,EAGqB,eAHrB,EAGsC,YAHtC,EAGoD,IAHpD,CADsC;AAMlDC,IAAAA,KAAK,EAAEjB;AAN2C,GAA9B,CAAtB;;AAQA,SAAOX,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,IAAAA,IAAI,EAAE;AACJ1B,MAAAA,IAAI,EAAEA,IADF;AAEJD,MAAAA,OAAO,EAAEA;AAFL,KADoB;AAK1BA,IAAAA,OAAO,EAAEoB,OAAO,CAACQ,IALS;AAM1BC,IAAAA,UAAU,EAAET,OAAO,CAACU;AANM,GAArB,CAAP;AASD,CAzDa,EA0DbC,MA1Da,CA0DN,OAAOpC,GAAP,EAAYC,GAAZ,KAAoB,CAE3B,CA5Da,CAAhB;AA8DA,eAAeJ,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../../middleware/auth';\r\nimport { getCurrentDate } from '../../../middleware/utils';\r\nconst models = require('../../../db/models/index');\r\nconst Sequelize = require('sequelize');\r\nconst Op = Sequelize.Op;\r\nconst handler = nextConnect()\r\n  // Middleware\r\n  .use(middleware)\r\n  // Get method\r\n  .get(async (req, res) => {\r\n    const {\r\n      method,\r\n      body,\r\n    } = req;\r\n    const { organization_id, results, page, _date_created = getCurrentDate('-'), sortField = \"tender_id\", sortOrder = \"DESC\", filters = [] } = req.query;\r\n    let _search = {};\r\n\r\n    // console.log('date_created')\r\n    // console.log(_date_created)\r\n    // var result = new Date(date);\r\n\r\n    const TODAY_START = new Date();\r\n    TODAY_START.setDate(1);\r\n    TODAY_START.setHours(0 + 7);\r\n    const NOW = new Date();\r\n    // console.log(NOW.getMonth)\r\n    NOW.setHours(NOW.getHours() + 7);\r\n    // console.log(TODAY_START)\r\n\r\n    var _dateStr = '2021-10-26 00:00:00';\r\n    // var _dateStr = '' + _date_created + \".000Z\";\r\n    _search = {\r\n      is_deleted: {\r\n        [Op.ne]: 1,\r\n      },\r\n      date_created: {\r\n        [Op.gt]: TODAY_START,\r\n        [Op.lt]: NOW\r\n      },\r\n      organization_id: organization_id\r\n\r\n    }\r\n\r\n\r\n    // console.log(_search)\r\n    const _tender = await models.tender.findAndCountAll({\r\n      attributes: [\r\n        'tender_id', 'organization_id', 'tender_date', 'type_tender_id',\r\n        'tender_title', 'tender_detail', 'tender_keyword', 'expire_date',\r\n        'date_created', 'date_update', 'status_active', 'is_deleted', 'ip'\r\n      ],\r\n      where: _search\r\n    });\r\n    return res.status(200).json({\r\n      info: {\r\n        page: page,\r\n        results: results\r\n      },\r\n      results: _tender.rows,\r\n      totalCount: _tender.count\r\n    });\r\n\r\n  })\r\n  .delete(async (req, res) => {\r\n\r\n  })\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}