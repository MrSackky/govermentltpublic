{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\govermentlt\\\\components\\\\managemnet\\\\poll-menu\\\\edit-menu.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Form, Input, Modal, notification, Select, Typography } from 'antd';\nimport dynamic from 'next/dynamic';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { apiInstance } from '../../../middleware/utils';\nvar Option = Select.Option;\nvar TextArea = Input.TextArea; // const config = require('./../../config');\n\nvar config = require('../../../pages/admin/config');\n\nvar JoditEditor = dynamic(_c = function _c() {\n  return import('jodit-react');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('jodit-react')];\n    },\n    modules: ['jodit-react']\n  }\n});\n_c2 = JoditEditor;\nvar Text = Typography.Text,\n    Title = Typography.Title;\nexport default function modal(_ref) {\n  _s();\n\n  var _visible = _ref._visible,\n      hideEditModal = _ref.hideEditModal,\n      fetch = _ref.fetch,\n      user = _ref.user,\n      dataEdit = _ref.dataEdit;\n  var divRef = useRef(null);\n\n  var _notification$useNoti = notification.useNotification(),\n      _notification$useNoti2 = _slicedToArray(_notification$useNoti, 2),\n      api = _notification$useNoti2[0],\n      contextHolder = _notification$useNoti2[1];\n\n  var _useState = useState([{\n    name: ['intro_title'],\n    value: ''\n  }]),\n      fields = _useState[0],\n      setFields = _useState[1];\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  useEffect(function () {\n    fetchEditData();\n  }, [dataEdit]);\n\n  var fetchEditData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (dataEdit) {\n                setFields([{\n                  name: ['poll_questions_title'],\n                  value: !dataEdit ? '' : dataEdit.poll_questions_title\n                }]);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchEditData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitHandler = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n      var data, registerData;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = {\n                poll_questions_title: value.poll_questions_title\n              };\n              console.log(data);\n              _context2.next = 4;\n              return apiInstance().put('/pollmenu/' + (dataEdit ? dataEdit.poll_questions_id : 0), data);\n\n            case 4:\n              registerData = _context2.sent;\n\n              if (registerData.data.status == 200) {\n                openNotificationSuccess();\n              } else {\n                openNotificationFail(registerData.data.message);\n              }\n\n              console.log('ON OK');\n              fetch();\n              hideEditModal();\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSubmitHandler(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var openNotificationSuccess = function openNotificationSuccess() {\n    api.success({\n      message: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E21\\u0E39\\u0E25\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\",\n      description: 'บันทึกมูลสำเร็จ',\n      placement: 'topRight'\n    });\n  };\n\n  var openNotificationFail = function openNotificationFail(messgae) {\n    api.error({\n      message: \"\\u0E1E\\u0E1A\\u0E1B\\u0E31\\u0E0D\\u0E2B\\u0E32\\u0E23\\u0E30\\u0E2B\\u0E27\\u0E48\\u0E32\\u0E07\\u0E01\\u0E32\\u0E23\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\",\n      description: messgae,\n      placement: 'topRight'\n    });\n  };\n\n  var onReset = function onReset() {\n    setFields([{\n      name: ['poll_questions_title'],\n      value: !dataEdit ? '' : dataEdit.poll_questions_title\n    }]);\n  };\n\n  return __jsx(React.Fragment, null, contextHolder, __jsx(Modal, {\n    title: 'แก้ไขคำถาม',\n    className: \"mt-4\",\n    centered: true,\n    visible: _visible // onOk={() => onOK()}\n    ,\n    onCancel: function onCancel() {\n      hideEditModal(); // form.resetFields();\n    },\n    width: 1000,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    name: \"basic\",\n    layout: \"vertical\",\n    onFinish: onSubmitHandler,\n    requiredMark: true,\n    form: form,\n    fields: fields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    name: \"poll_questions_title\",\n    label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E40\\u0E21\\u0E19\\u0E39\",\n    className: \"block text-gray-700 text-sm font-bold mb-2 w-2/3\",\n    style: {\n      \"float\": 'left'\n    },\n    rules: [{\n      required: true,\n      message: 'กรุณากรอกชื่อเมนู'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    id: \"#\",\n    type: \"text\",\n    placeholder: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E40\\u0E21\\u0E19\\u0E39\",\n    className: \"resize-none border rounded-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    className: \"flex mt-6 mb-0 w1/3\",\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"lg:inline-flex w-full mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center lg:text-right w-full lg:w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    htmlType: \"button\",\n    onClick: onReset,\n    style: {\n      backgroundColor: '#C2CFE0',\n      borderColor: '#C2CFE0',\n      height: 40,\n      width: 110,\n      marginBottom: '0px !important',\n      marginRight: '2px',\n      color: 'white !important'\n    } // htmlType=\"submit\"\n    ,\n    className: \"text-center bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full lg:w-1/4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    className: \"text-custom-black \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, \"\\u0E23\\u0E35\\u0E40\\u0E0B\\u0E47\\u0E17\")), __jsx(Button // type=\"primary\"\n  , {\n    style: {\n      backgroundColor: '#059669',\n      borderColor: '#059669',\n      height: 40,\n      width: 110,\n      marginBottom: '0px !important',\n      color: 'white !important'\n    },\n    htmlType: \"submit\",\n    className: \"text-center bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full lg:w-1/4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, __jsx(Text, {\n    className: \"text-custom-white \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\")))))), __jsx(\"div\", {\n    style: {\n      \"float\": 'left',\n      clear: 'both'\n    },\n    ref: divRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(modal, \"ilzZkcdcPBHiVjmztgweV0JvP98=\", false, function () {\n  return [notification.useNotification, Form.useForm];\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"JoditEditor$dynamic\");\n$RefreshReg$(_c2, \"JoditEditor\");","map":{"version":3,"sources":["D:/govermentlt/components/managemnet/poll-menu/edit-menu.jsx"],"names":["Button","Form","Input","Modal","notification","Select","Typography","dynamic","React","useEffect","useRef","useState","apiInstance","Option","TextArea","config","require","JoditEditor","ssr","Text","Title","modal","_visible","hideEditModal","fetch","user","dataEdit","divRef","useNotification","api","contextHolder","name","value","fields","setFields","useForm","form","fetchEditData","poll_questions_title","onSubmitHandler","data","console","log","put","poll_questions_id","registerData","status","openNotificationSuccess","openNotificationFail","message","success","description","placement","messgae","error","onReset","required","marginBottom","backgroundColor","borderColor","height","width","marginRight","color","clear"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  notification,\r\n  Select,\r\n  Typography\r\n} from 'antd';\r\nimport dynamic from 'next/dynamic';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { apiInstance } from '../../../middleware/utils';\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n// const config = require('./../../config');\r\nconst config = require('../../../pages/admin/config');\r\nconst JoditEditor = dynamic(() => import('jodit-react'), { ssr: false });\r\nconst { Text, Title } = Typography;\r\nexport default function modal({\r\n  _visible,\r\n  hideEditModal,\r\n  fetch,\r\n  user,\r\n  dataEdit,\r\n}) {\r\n  let divRef = useRef(null);\r\n  const [api, contextHolder] = notification.useNotification();\r\n\r\n  const [fields, setFields] = useState([\r\n    {\r\n      name: ['intro_title'],\r\n      value: '',\r\n    },\r\n  ]);\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    fetchEditData();\r\n  }, [dataEdit]);\r\n\r\n  const fetchEditData = async () => {\r\n    if (dataEdit) {\r\n\r\n\r\n      setFields([\r\n        {\r\n          name: ['poll_questions_title'],\r\n          value: !dataEdit ? '' : dataEdit.poll_questions_title,\r\n        },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const onSubmitHandler = async value => {\r\n    const data = {\r\n      poll_questions_title: value.poll_questions_title,\r\n    };\r\n    console.log(data);\r\n    const registerData = await apiInstance().put(\r\n      '/pollmenu/' + (dataEdit ? dataEdit.poll_questions_id : 0),\r\n      data,\r\n    );\r\n    if (registerData.data.status == 200) {\r\n      openNotificationSuccess();\r\n    } else {\r\n      openNotificationFail(registerData.data.message);\r\n    }\r\n\r\n    console.log('ON OK');\r\n    fetch();\r\n    hideEditModal();\r\n  };\r\n\r\n  const openNotificationSuccess = () => {\r\n    api.success({\r\n      message: `บันทึกมูลสำเร็จ`,\r\n      description: 'บันทึกมูลสำเร็จ',\r\n      placement: 'topRight',\r\n    });\r\n  };\r\n\r\n  const openNotificationFail = messgae => {\r\n    api.error({\r\n      message: `พบปัญหาระหว่างการบันทึกข้อมูล`,\r\n      description: messgae,\r\n      placement: 'topRight',\r\n    });\r\n  };\r\n\r\n  const onReset = () => {\r\n    setFields([\r\n      {\r\n        name: ['poll_questions_title'],\r\n        value: !dataEdit ? '' : dataEdit.poll_questions_title,\r\n      },\r\n    ]);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title={'แก้ไขคำถาม'}\r\n        className=\"mt-4\"\r\n        centered\r\n        visible={_visible}\r\n        // onOk={() => onOK()}\r\n        onCancel={() => {\r\n          hideEditModal();\r\n          // form.resetFields();\r\n        }}\r\n        width={1000}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          name=\"basic\"\r\n          layout=\"vertical\"\r\n          onFinish={onSubmitHandler}\r\n          requiredMark={true}\r\n          form={form}\r\n          fields={fields}\r\n        >\r\n          <Form.Item\r\n            name=\"poll_questions_title\"\r\n            label=\"ชื่อเมนู\"\r\n            className=\"block text-gray-700 text-sm font-bold mb-2 w-2/3\"\r\n            style={{ float: 'left' }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'กรุณากรอกชื่อเมนู',\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              id=\"#\"\r\n              type=\"text\"\r\n              placeholder=\"ชื่อเมนู\"\r\n              className=\"resize-none border rounded-md\"\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            className=\"flex mt-6 mb-0 w1/3\"\r\n            style={{ marginBottom: 0 }}\r\n          >\r\n            <div className=\"lg:inline-flex w-full mt-6\">\r\n              <div className=\"text-center lg:text-right w-full lg:w-full\">\r\n                <Button\r\n                  htmlType=\"button\"\r\n                  onClick={onReset}\r\n                  style={{\r\n                    backgroundColor: '#C2CFE0',\r\n                    borderColor: '#C2CFE0',\r\n                    height: 40,\r\n                    width: 110,\r\n                    marginBottom: '0px !important',\r\n                    marginRight: '2px',\r\n                    color: 'white !important',\r\n                  }}\r\n                  // htmlType=\"submit\"\r\n                  className=\"text-center bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full lg:w-1/4\"\r\n                >\r\n                  <Text className=\"text-custom-black \">รีเซ็ท</Text>\r\n                </Button>\r\n                <Button\r\n                  // type=\"primary\"\r\n                  style={{\r\n                    backgroundColor: '#059669',\r\n                    borderColor: '#059669',\r\n                    height: 40,\r\n                    width: 110,\r\n                    marginBottom: '0px !important',\r\n                    color: 'white !important',\r\n                  }}\r\n                  htmlType=\"submit\"\r\n                  className=\"text-center bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline w-full lg:w-1/4\"\r\n                >\r\n                  <Text className=\"text-custom-white \">บันทึก</Text>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n        <div style={{ float: 'left', clear: 'both' }} ref={divRef}></div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}