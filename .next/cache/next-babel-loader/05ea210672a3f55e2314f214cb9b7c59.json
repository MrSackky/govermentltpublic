{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\govermentlt\\\\pages\\\\admin\\\\management-contact\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Input, notification, Table, Typography } from 'antd';\nimport Router from 'next/router'; // import UserNav from '../components/navigation/User';\n\nimport { useEffect, useState } from 'react';\n/* components */\n\nimport Layout from '../../../components/layout/LayoutAdmin';\n/* utils */\n\nimport { apiInstance, convertDateDBtoDatePickerNoTime, convertDatetoThaiDate } from '../../../middleware/utils';\nvar Text = Typography.Text,\n    Title = Typography.Title;\nvar TextArea = Input.TextArea,\n    Search = Input.Search;\nexport var __N_SSP = true;\nexport default function Home(props) {\n  _s();\n\n  var _this = this;\n\n  var _notification$useNoti = notification.useNotification(),\n      _notification$useNoti2 = _slicedToArray(_notification$useNoti, 2),\n      api = _notification$useNoti2[0],\n      contextHolder = _notification$useNoti2[1];\n\n  var user = props.user,\n      origin = props.origin;\n\n  var _useState = useState(null),\n      login = _useState[0],\n      setLogin = _useState[1];\n\n  var _useState2 = useState(true),\n      shouldRun = _useState2[0],\n      setShouldRun = _useState2[1];\n\n  var _useState3 = useState([]),\n      data = _useState3[0],\n      setData = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(''),\n      search = _useState5[0],\n      setSearch = _useState5[1];\n\n  var _useState6 = useState(false),\n      visibleModalDelete = _useState6[0],\n      setVisibleModalDelete = _useState6[1];\n\n  var _useState7 = useState(null),\n      dataDelete = _useState7[0],\n      setDataDelete = _useState7[1];\n\n  var _useState8 = useState(null),\n      filters = _useState8[0],\n      setFilters = _useState8[1];\n\n  var _useState9 = useState({\n    current: 1,\n    pageSize: 10\n  }),\n      pagination = _useState9[0],\n      setPagination = _useState9[1];\n\n  var columns = [{\n    title: 'วันที่',\n    dataIndex: '',\n    sorter: true,\n    key: 'date_created',\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, \" \", convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_created)), \" \"));\n    }\n  }, {\n    title: 'ผู้ติดต่อ',\n    dataIndex: 'contact_name_posted',\n    sorter: true\n  }, {\n    title: 'หัวข้อการติดต่อ',\n    dataIndex: 'contact_post',\n    sorter: true\n  }, {\n    title: 'สถานะดำเนินการ',\n    dataIndex: '',\n    sorter: true,\n    key: 'is_done',\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, data.is_done == '1' ? \"ดำเนินการแล้ว\" : \"ยังไม่ได้ดำเนินการ\"));\n    }\n  }, {\n    title: '',\n    dataIndex: '',\n    key: 'x',\n    render: function render(data) {\n      return __jsx(React.Fragment, null, __jsx(Button, {\n        size: 'default',\n        onClick: function onClick() {\n          return gotoPage(data.contact_id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, ' ', \"\\u0E23\\u0E32\\u0E22\\u0E25\\u0E30\\u0E40\\u0E2D\\u0E35\\u0E22\\u0E14\", ' '));\n    }\n  }];\n\n  var gotoPage = function gotoPage(id) {\n    console.log(id);\n    Router.push('/admin/management-contact/' + id);\n  };\n\n  useEffect(function () {\n    var _filters = [];\n    pagination.filters = _filters;\n    fetch({\n      pagination: pagination\n    });\n  }, []);\n\n  var handleTableChange = function handleTableChange(pagination, filters, sorter) {\n    console.log(sorter);\n    setPagination({\n      pageSize: pagination.pageSize,\n      current: pagination.current\n    });\n    setFilters(filters[\"package\"]);\n    fetch({\n      sortField: sorter.columnKey,\n      sortOrder: sorter.order,\n      pagination: pagination,\n      filters: filters[\"package\"]\n    });\n  };\n\n  var onSearch = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_search) {\n      var addactivitiesData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              setSearch(_search);\n              setPagination({\n                pageSize: pagination.pageSize,\n                current: 1\n              });\n              _context.next = 5;\n              return apiInstance().get('contact?organization_id=' + (user ? user.organization_id : 0) + '&results=' + pagination.pageSize + '&page=1&search=' + _search + '&filters=' + filters);\n\n            case 5:\n              addactivitiesData = _context.sent;\n              setData(addactivitiesData.data.results);\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSearch(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fetch = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var params,\n          addactivitiesData,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              params = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              setLoading(true);\n              _context2.next = 4;\n              return apiInstance().get('contact?organization_id=' + (user ? user.organization_id : 0) + '&results=' + params.pagination.pageSize + '&page=' + params.pagination.current + '&search=' + search + '&sortField=' + params.sortField + '&sortOrder=' + params.sortOrder + '&filters=' + params.filters);\n\n            case 4:\n              addactivitiesData = _context2.sent;\n              setData(addactivitiesData.data.results);\n              setPagination(_objectSpread(_objectSpread({}, params.pagination), {}, {\n                total: addactivitiesData.data.totalCount // 200 is mock data, you should read it from server\n                // total: data.totalCount,\n\n              }));\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function fetch() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var showModal = function showModal(data) {\n    console.log('data deleted');\n    console.log(data);\n    setDataDelete(data);\n    setVisibleModalDelete(true);\n  };\n\n  var hideModal = function hideModal() {\n    setVisibleModalDelete(false);\n  };\n\n  var onDeleteOrganization = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var registerData;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return apiInstance()[\"delete\"]('contact/' + dataDelete.contact_id, {});\n\n            case 2:\n              registerData = _context3.sent;\n\n              if (registerData.data.status == 200) {\n                openNotificationSuccess(); // fetchOrganizationData();\n\n                setVisibleModalDelete(false);\n                fetch({\n                  pagination: pagination\n                });\n              } else {\n                openNotificationFail(registerData.data.message);\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onDeleteOrganization() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var openNotificationSuccess = function openNotificationSuccess() {\n    api.success({\n      message: \"\\u0E25\\u0E1A\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\",\n      description: 'ลบข้อมูลสำเร็จ',\n      placement: 'topRight'\n    });\n  };\n\n  var openNotificationFail = function openNotificationFail(messgae) {\n    api.error({\n      message: \"\\u0E1E\\u0E1A\\u0E1B\\u0E31\\u0E0D\\u0E2B\\u0E32\\u0E23\\u0E30\\u0E2B\\u0E27\\u0E48\\u0E32\\u0E07\\u0E01\\u0E32\\u0E23\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\",\n      description: messgae,\n      placement: 'topRight'\n    });\n  };\n\n  return __jsx(Layout, {\n    key: \"home-contact\",\n    titlePage: \"จัดการข้อมูลติดต่อเรา\",\n    title: \"Government - Admin management\",\n    url: origin,\n    origin: origin,\n    isMain: true,\n    indexMenu: \"4\",\n    user: login,\n    props: props,\n    _routes: [{\n      path: '/admin/dashborad',\n      breadcrumbName: 'หน้าหลัก'\n    }, {\n      path: '/admin/management-contact',\n      breadcrumbName: 'จัดการข้อมูลติดต่อเรา'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, contextHolder, __jsx(Table, {\n    columns: columns,\n    rowKey: function rowKey(record) {\n      return record.contact_id;\n    },\n    dataSource: data,\n    pagination: pagination,\n    loading: loading,\n    onChange: handleTableChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  })));\n}\n/* getServerSideProps */\n\n_s(Home, \"Nu6gKH9ZE+xqm6dWlHhjKsu4m9M=\", false, function () {\n  return [notification.useNotification];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/govermentlt/pages/admin/management-contact/index.js"],"names":["Button","Input","notification","Table","Typography","Router","useEffect","useState","Layout","apiInstance","convertDateDBtoDatePickerNoTime","convertDatetoThaiDate","Text","Title","TextArea","Search","Home","props","useNotification","api","contextHolder","user","origin","login","setLogin","shouldRun","setShouldRun","data","setData","loading","setLoading","search","setSearch","visibleModalDelete","setVisibleModalDelete","dataDelete","setDataDelete","filters","setFilters","current","pageSize","pagination","setPagination","columns","title","dataIndex","sorter","key","render","date_created","is_done","gotoPage","contact_id","id","console","log","push","_filters","fetch","handleTableChange","sortField","columnKey","sortOrder","order","onSearch","_search","get","organization_id","addactivitiesData","results","params","total","totalCount","showModal","hideModal","onDeleteOrganization","registerData","status","openNotificationSuccess","openNotificationFail","message","success","description","placement","messgae","error","path","breadcrumbName","record"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Input, notification, Table, Typography\r\n} from 'antd';\r\nimport Router from 'next/router';\r\n// import UserNav from '../components/navigation/User';\r\nimport { useEffect, useState } from 'react';\r\n/* components */\r\nimport Layout from '../../../components/layout/LayoutAdmin';\r\n/* utils */\r\nimport {\r\n  absoluteUrl, apiInstance,\r\n  convertDateDBtoDatePickerNoTime,\r\n  convertDatetoThaiDate\r\n} from '../../../middleware/utils';\r\n\r\nconst { Text, Title } = Typography;\r\n\r\nconst { TextArea, Search } = Input;\r\n\r\nexport default function Home(props) {\r\n  const [api, contextHolder] = notification.useNotification();\r\n  const { user, origin } = props;\r\n  const [login, setLogin] = useState(null);\r\n  const [shouldRun, setShouldRun] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n  const [visibleModalDelete, setVisibleModalDelete] = useState(false);\r\n  const [dataDelete, setDataDelete] = useState(null);\r\n  const [filters, setFilters] = useState(null);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  });\r\n  const columns = [\r\n    {\r\n      title: 'วันที่',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'date_created',\r\n      render: (data) => <>\r\n        <span > {convertDatetoThaiDate(convertDateDBtoDatePickerNoTime(data.date_created))} </span>\r\n      </>,\r\n    },\r\n    {\r\n      title: 'ผู้ติดต่อ',\r\n      dataIndex: 'contact_name_posted',\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'หัวข้อการติดต่อ',\r\n      dataIndex: 'contact_post',\r\n      sorter: true,\r\n    },\r\n    {\r\n      title: 'สถานะดำเนินการ',\r\n      dataIndex: '',\r\n      sorter: true,\r\n      key: 'is_done',\r\n      render: data => <>\r\n        <span>\r\n          {data.is_done == '1' ? \"ดำเนินการแล้ว\" : \"ยังไม่ได้ดำเนินการ\"}\r\n        </span>\r\n      </>,\r\n    },\r\n{\r\n  title: '',\r\n    dataIndex: '',\r\n      key: 'x',\r\n        render: (data) => <>\r\n          <Button\r\n            size={'default'}\r\n            onClick={() => gotoPage(data.contact_id)}\r\n          >\r\n            {' '}\r\n            รายละเอียด{' '}\r\n          </Button>\r\n        </>,\r\n    },\r\n  ];\r\nconst gotoPage = id => {\r\n  console.log(id);\r\n  Router.push('/admin/management-contact/' + id);\r\n};\r\n\r\nuseEffect(() => {\r\n  var _filters = [];\r\n  pagination.filters = _filters;\r\n  fetch({ pagination });\r\n}, []);\r\n\r\nconst handleTableChange = (pagination, filters, sorter) => {\r\n  console.log(sorter);\r\n  setPagination({\r\n    pageSize: pagination.pageSize,\r\n    current: pagination.current,\r\n  });\r\n  setFilters(filters.package);\r\n  fetch({\r\n    sortField: sorter.columnKey,\r\n    sortOrder: sorter.order,\r\n    pagination,\r\n    filters: filters.package,\r\n  });\r\n};\r\nconst onSearch = async _search => {\r\n  setLoading(true);\r\n  setSearch(_search);\r\n  setPagination({\r\n    pageSize: pagination.pageSize,\r\n    current: 1,\r\n  });\r\n  const addactivitiesData = await apiInstance().get(\r\n    'contact?organization_id=' +\r\n    (user ? user.organization_id : 0) +\r\n    '&results=' +\r\n    pagination.pageSize +\r\n    '&page=1&search=' +\r\n    _search +\r\n    '&filters=' +\r\n    filters,\r\n  );\r\n\r\n  setData(addactivitiesData.data.results);\r\n  setLoading(false);\r\n};\r\nconst fetch = async (params = {}) => {\r\n  setLoading(true);\r\n  const addactivitiesData = await apiInstance().get(\r\n    'contact?organization_id=' +\r\n    (user ? user.organization_id : 0) +\r\n    '&results=' +\r\n    params.pagination.pageSize +\r\n    '&page=' +\r\n    params.pagination.current +\r\n    '&search=' +\r\n    search +\r\n    '&sortField=' +\r\n    params.sortField +\r\n    '&sortOrder=' +\r\n    params.sortOrder +\r\n    '&filters=' +\r\n    params.filters,\r\n  );\r\n\r\n  setData(addactivitiesData.data.results);\r\n  setPagination({\r\n    ...params.pagination,\r\n    total: addactivitiesData.data.totalCount,\r\n    // 200 is mock data, you should read it from server\r\n    // total: data.totalCount,\r\n  });\r\n  setLoading(false);\r\n};\r\n\r\nconst showModal = data => {\r\n  console.log('data deleted');\r\n  console.log(data);\r\n  setDataDelete(data);\r\n  setVisibleModalDelete(true);\r\n};\r\n\r\nconst hideModal = () => {\r\n  setVisibleModalDelete(false);\r\n};\r\n\r\nconst onDeleteOrganization = async () => {\r\n  const registerData = await apiInstance().delete(\r\n    'contact/' + dataDelete.contact_id,\r\n    {},\r\n  );\r\n  if (registerData.data.status == 200) {\r\n    openNotificationSuccess();\r\n    // fetchOrganizationData();\r\n    setVisibleModalDelete(false);\r\n    fetch({ pagination });\r\n  } else {\r\n    openNotificationFail(registerData.data.message);\r\n  }\r\n};\r\n\r\nconst openNotificationSuccess = () => {\r\n  api.success({\r\n    message: `ลบข้อมูลสำเร็จ`,\r\n    description: 'ลบข้อมูลสำเร็จ',\r\n    placement: 'topRight',\r\n  });\r\n};\r\n\r\nconst openNotificationFail = messgae => {\r\n  api.error({\r\n    message: `พบปัญหาระหว่างการบันทึกข้อมูล`,\r\n    description: messgae,\r\n    placement: 'topRight',\r\n  });\r\n};\r\nreturn (\r\n  <Layout key={\"home-contact\"} titlePage={\"จัดการข้อมูลติดต่อเรา\"} title=\"Government - Admin management\" url={origin} origin={origin} isMain={true}\r\n    indexMenu={\"4\"}\r\n    user={login} props={props} _routes={[\r\n      {\r\n        path: '/admin/dashborad',\r\n        breadcrumbName: 'หน้าหลัก',\r\n      }, {\r\n        path: '/admin/management-contact',\r\n        breadcrumbName: 'จัดการข้อมูลติดต่อเรา',\r\n      }]}>\r\n    <div>\r\n      {contextHolder}\r\n      <Table\r\n        columns={columns}\r\n        rowKey={record => record.contact_id}\r\n        dataSource={data}\r\n        pagination={pagination}\r\n        loading={loading}\r\n        onChange={handleTableChange}\r\n      />\r\n    </div>\r\n  </Layout>\r\n);\r\n}\r\n/* getServerSideProps */\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const { origin } = absoluteUrl(req);\r\n\r\n  return {\r\n    props: {\r\n      origin,\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}