{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport jwt from 'jsonwebtoken';\nimport moment from 'moment';\nimport Router from 'next/router';\nvar SECRET_KEY = process.env.JWT_KEY;\n/*\r\n * @params {jwtToken} extracted from cookies\r\n * @return {object} object of extracted token\r\n */\n\nexport function verifyToken(jwtToken) {\n  try {\n    return jwt.verify(jwtToken, SECRET_KEY);\n  } catch (e) {\n    console.log('e:', e);\n    return null;\n  }\n}\n/*\r\n * @params {request} extracted from request response\r\n * @return {object} object of parse jwt cookie decode object\r\n */\n\nexport function getAppCookies(req) {\n  var parsedItems = {};\n\n  if (req.headers.cookie) {\n    var cookiesItems = req.headers.cookie.split('; ');\n    cookiesItems.forEach(function (cookies) {\n      var parsedItem = cookies.split('=');\n      parsedItems[parsedItem[0]] = decodeURI(parsedItem[1]);\n    });\n  }\n\n  return parsedItems;\n}\n/*\r\n * @params {request} extracted from request response, {setLocalhost} your localhost address\r\n * @return {object} objects of protocol, host and origin\r\n */\n\nexport function absoluteUrl(req, setLocalhost) {\n  var protocol = 'https:';\n  var host = req ? req.headers['x-forwarded-host'] || req.headers['host'] : window.location.host;\n\n  if (host.indexOf('localhost') > -1) {\n    if (setLocalhost) host = setLocalhost;\n    protocol = 'http:';\n  }\n\n  return {\n    protocol: protocol,\n    host: host,\n    origin: protocol + '//' + host,\n    url: req\n  };\n}\nexport function addDays(date, days) {\n  var result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n} //YYYY-MM-DD\n\nexport function formatDateWithoutTime(date) {\n  var dateString = date.getUTCFullYear() + \"-\" + (\"0\" + (date.getUTCMonth() + 1)).slice(-2) + \"-\" + (\"0\" + date.getUTCDate()).slice(-2) + \" \";\n  return dateString;\n} // const api = process.env.PUBLIC_URL\n\nexport var apiInstance = function apiInstance() {\n  // const authorization = store.getState().userState.token ? store.getState().userState.token : null\n  // const headers = {\n  // \t'x-api-token': authorization ? authorization : '',\n  // }\n  return axios.create({\n    baseURL: '/api' // headers,\n\n  });\n};\nexport var checkIsLogin = function checkIsLogin() {\n  // console.log(\"checkIsLogin\")\n  var token = Cookies.get('token'); // => 'value'\n\n  if (!token) {\n    Router.push('/login');\n    return;\n  } // console.log(parseJwt(token))\n\n\n  return parseJwt(token);\n};\nexport function parseJwt(token) {\n  var isExpired = false; // const token = localStorage.getItem('id_token');\n\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  var _jsonPayload = JSON.parse(jsonPayload);\n\n  var dateNow = new Date(); // console.log(parseInt(_jsonPayload.exp))\n  // console.log(parseInt((dateNow.getTime()).toString().substring(0,10)))\n\n  if (parseInt(_jsonPayload.exp) < parseInt(dateNow.getTime().toString().substring(0, 10))) {\n    console.log(\"true\");\n    isExpired = true;\n  }\n\n  if (isExpired) {\n    Router.push('/login');\n    return \"\";\n  }\n\n  return _jsonPayload;\n}\n;\nexport function convertDateDBtoDatePickerNoTime(date) {\n  try {\n    var dateSplit = date.toString().split(\"T\");\n    return dateSplit[0];\n  } catch (error) {\n    return \"\";\n  }\n}\nexport function convertDateDBtoDatePickerWithTime(date) {\n  try {\n    //:07.000Z\n    //SampleText.replace(\"Developer\", \"App Builder\");\n    var dateSplit = date.toString().split(\"T\");\n    return dateSplit[0] + \" \" + dateSplit[1].replace(\".000Z\", \"\");\n  } catch (error) {\n    return \"\";\n  }\n}\nexport function convertDatetoThaiDate(date) {\n  var _date = convertDateDBtoDatePickerNoTime(date);\n\n  var dateSplit = _date.toString().split(\"-\"); // 2021-09-16\n\n\n  return dateSplit[2] + \" \" + convertMonthtoThaiMonth(dateSplit[1]) + \" \" + convertYeartoThaiYear(dateSplit[0]);\n}\nexport function convertYeartoThaiYear(year) {\n  return parseInt(year) + 543;\n}\nexport function convertMonthtoThaiMonth(month) {\n  switch (month) {\n    case \"01\":\n      return \"มกราคม\";\n\n    case \"02\":\n      return \"กุมภาพันธ์\";\n\n    case \"03\":\n      return \"มีนาคม\";\n\n    case \"04\":\n      return \"เมษายน\";\n\n    case \"05\":\n      return \"พฤษภาคม\";\n\n    case \"06\":\n      return \"มิถุนายน\";\n\n    case \"07\":\n      return \"กรกฎาคม\";\n\n    case \"08\":\n      return \"สิงหาคม\";\n\n    case \"09\":\n      return \"กันยายน\";\n\n    case \"10\":\n      return \"ตุลาคม\";\n\n    case \"11\":\n      return \"พฤศจิกายน\";\n\n    case \"12\":\n      return \"ธันวาคม\";\n\n    default:\n      return \"NAN\";\n  }\n}\nexport function convertDatetoAddDB(date) {\n  var dateSplit = date.split(\" \");\n  return dateSplit[0] + \"T\" + dateSplit[1] + \"+00:00\";\n}\nexport function getIPAddress() {\n  return _getIPAddress.apply(this, arguments);\n}\n\nfunction _getIPAddress() {\n  _getIPAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get('https://geolocation-db.com/json/');\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", \"country_code:\" + res.data.country_code + \",country_name:\" + res.data.country_name + \",city:\" + res.data.city + \",postal:\" + res.data.postal + \",latitude:\" + res.data.latitude + \",longitude:\" + res.data.longitude + \",IPv4:\" + res.data.IPv4 + \",state:\" + res.data.state);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getIPAddress.apply(this, arguments);\n}\n\nexport function bytesToSize(bytes) {\n  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  if (bytes == 0) return '0 Byte';\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n}\nexport function bytesToMB(bytes) {\n  return Number.parseFloat(bytes / (1024 * 1024)).toFixed(2);\n}\nexport function getDatediff(_x) {\n  return _getDatediff.apply(this, arguments);\n}\n\nfunction _getDatediff() {\n  _getDatediff = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(startDate) {\n    var timeEnd, newStartDate, newEndDate, one_day, result;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            timeEnd = moment();\n            newStartDate = new Date(startDate);\n            newEndDate = new Date(timeEnd);\n            one_day = 1000 * 60 * 60 * 24;\n            result = Math.ceil((newStartDate.getTime() - newEndDate.getTime()) / one_day);\n            console.log('date Converter result', result);\n            return _context2.abrupt(\"return\", result - 1);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getDatediff.apply(this, arguments);\n}\n\nexport function getCurrentDate() {\n  var separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var newDate = new Date();\n  var date = newDate.getDate();\n  var month = newDate.getMonth() + 1;\n  var year = newDate.getFullYear();\n  return \"\".concat(year).concat(separator).concat(month < 10 ? \"0\".concat(month) : \"\".concat(month)).concat(separator).concat(date);\n}","map":{"version":3,"sources":["C:/Users/Sackky/Desktop/government/middleware/utils.js"],"names":["axios","Cookies","jwt","moment","Router","SECRET_KEY","process","env","JWT_KEY","verifyToken","jwtToken","verify","e","console","log","getAppCookies","req","parsedItems","headers","cookie","cookiesItems","split","forEach","cookies","parsedItem","decodeURI","absoluteUrl","setLocalhost","protocol","host","window","location","indexOf","origin","url","addDays","date","days","result","Date","setDate","getDate","formatDateWithoutTime","dateString","getUTCFullYear","getUTCMonth","slice","getUTCDate","apiInstance","create","baseURL","checkIsLogin","token","get","push","parseJwt","isExpired","base64Url","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","join","_jsonPayload","JSON","parse","dateNow","parseInt","exp","getTime","substring","convertDateDBtoDatePickerNoTime","dateSplit","error","convertDateDBtoDatePickerWithTime","convertDatetoThaiDate","_date","convertMonthtoThaiMonth","convertYeartoThaiYear","year","month","convertDatetoAddDB","getIPAddress","res","data","country_code","country_name","city","postal","latitude","longitude","IPv4","state","bytesToSize","bytes","sizes","i","Math","floor","round","pow","bytesToMB","Number","parseFloat","toFixed","getDatediff","startDate","timeEnd","newStartDate","newEndDate","one_day","ceil","getCurrentDate","separator","newDate","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport jwt from 'jsonwebtoken';\r\nimport moment from 'moment';\r\nimport Router from 'next/router';\r\n\r\nconst SECRET_KEY = process.env.JWT_KEY;\r\n\r\n/*\r\n * @params {jwtToken} extracted from cookies\r\n * @return {object} object of extracted token\r\n */\r\nexport function verifyToken(jwtToken) {\r\n  try {\r\n    return jwt.verify(jwtToken, SECRET_KEY);\r\n  } catch (e) {\r\n    console.log('e:', e);\r\n    return null;\r\n  }\r\n}\r\n\r\n/*\r\n * @params {request} extracted from request response\r\n * @return {object} object of parse jwt cookie decode object\r\n */\r\nexport function getAppCookies(req) {\r\n  const parsedItems = {};\r\n  if (req.headers.cookie) {\r\n    const cookiesItems = req.headers.cookie.split('; ');\r\n    cookiesItems.forEach(cookies => {\r\n      const parsedItem = cookies.split('=');\r\n      parsedItems[parsedItem[0]] = decodeURI(parsedItem[1]);\r\n    });\r\n  }\r\n  return parsedItems;\r\n}\r\n\r\n/*\r\n * @params {request} extracted from request response, {setLocalhost} your localhost address\r\n * @return {object} objects of protocol, host and origin\r\n */\r\nexport function absoluteUrl(req, setLocalhost) {\r\n  var protocol = 'https:';\r\n  var host = req\r\n    ? req.headers['x-forwarded-host'] || req.headers['host']\r\n    : window.location.host;\r\n  if (host.indexOf('localhost') > -1) {\r\n    if (setLocalhost) host = setLocalhost;\r\n    protocol = 'http:';\r\n  }\r\n  return {\r\n    protocol: protocol,\r\n    host: host,\r\n    origin: protocol + '//' + host,\r\n    url: req,\r\n  };\r\n}\r\n\r\nexport function addDays(date, days) {\r\n  var result = new Date(date);\r\n  result.setDate(result.getDate() + days);\r\n  return result;\r\n}\r\n\r\n//YYYY-MM-DD\r\nexport function formatDateWithoutTime(date) {\r\n  var dateString =\r\n    date.getUTCFullYear() + \"-\" +\r\n    (\"0\" + (date.getUTCMonth() + 1)).slice(-2) + \"-\" +\r\n    (\"0\" + date.getUTCDate()).slice(-2) + \" \"\r\n  return dateString;\r\n}\r\n// const api = process.env.PUBLIC_URL\r\n\r\nexport const apiInstance = () => {\r\n  // const authorization = store.getState().userState.token ? store.getState().userState.token : null\r\n\r\n  // const headers = {\r\n  // \t'x-api-token': authorization ? authorization : '',\r\n  // }\r\n\r\n  return axios.create({\r\n    baseURL: '/api',\r\n    // headers,\r\n  })\r\n}\r\n\r\nexport const checkIsLogin = () => {\r\n  // console.log(\"checkIsLogin\")\r\n  var token = Cookies.get('token') // => 'value'\r\n\r\n  if (!token) {\r\n    Router.push('/login');\r\n    return;\r\n  }\r\n  // console.log(parseJwt(token))\r\n  return parseJwt(token)\r\n\r\n}\r\n\r\nexport function parseJwt(token) {\r\n\r\n  var isExpired = false;\r\n  // const token = localStorage.getItem('id_token');\r\n\r\n\r\n\r\n  var base64Url = token.split('.')[1];\r\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\r\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n  }).join(''));\r\n  var _jsonPayload = JSON.parse(jsonPayload)\r\n  var dateNow = new Date();\r\n  // console.log(parseInt(_jsonPayload.exp))\r\n  // console.log(parseInt((dateNow.getTime()).toString().substring(0,10)))\r\n  if (parseInt(_jsonPayload.exp) < parseInt((dateNow.getTime()).toString().substring(0, 10))) {\r\n    console.log(\"true\")\r\n\r\n    isExpired = true;\r\n  }\r\n\r\n  if (isExpired) {\r\n    Router.push('/login');\r\n    return \"\";\r\n  }\r\n  return _jsonPayload;\r\n};\r\n\r\n\r\nexport function convertDateDBtoDatePickerNoTime(date) {\r\n  try {\r\n    var dateSplit = date.toString().split(\"T\");\r\n    return dateSplit[0];\r\n  } catch (error) {\r\n    return \"\";\r\n  }\r\n\r\n}\r\n\r\nexport function convertDateDBtoDatePickerWithTime(date) {\r\n  try {\r\n    //:07.000Z\r\n    //SampleText.replace(\"Developer\", \"App Builder\");\r\n    var dateSplit = date.toString().split(\"T\");\r\n    return dateSplit[0] + \" \" + dateSplit[1].replace(\".000Z\", \"\");\r\n  } catch (error) {\r\n    return \"\";\r\n  }\r\n\r\n}\r\n\r\nexport function convertDatetoThaiDate(date) {\r\n  var _date = convertDateDBtoDatePickerNoTime(date)\r\n  var dateSplit = _date.toString().split(\"-\");\r\n  // 2021-09-16\r\n  return dateSplit[2] + \" \" + convertMonthtoThaiMonth(dateSplit[1]) + \" \" + convertYeartoThaiYear(dateSplit[0])\r\n}\r\n\r\nexport function convertYeartoThaiYear(year) {\r\n  return parseInt(year) + 543\r\n}\r\n\r\nexport function convertMonthtoThaiMonth(month) {\r\n  switch (month) {\r\n    case \"01\":\r\n      return \"มกราคม\"\r\n    case \"02\":\r\n      return \"กุมภาพันธ์\"\r\n    case \"03\":\r\n      return \"มีนาคม\"\r\n    case \"04\":\r\n      return \"เมษายน\"\r\n    case \"05\":\r\n      return \"พฤษภาคม\"\r\n    case \"06\":\r\n      return \"มิถุนายน\"\r\n    case \"07\":\r\n      return \"กรกฎาคม\"\r\n    case \"08\":\r\n      return \"สิงหาคม\"\r\n    case \"09\":\r\n      return \"กันยายน\"\r\n    case \"10\":\r\n      return \"ตุลาคม\"\r\n    case \"11\":\r\n      return \"พฤศจิกายน\"\r\n    case \"12\":\r\n      return \"ธันวาคม\"\r\n    default:\r\n      return \"NAN\"\r\n  }\r\n}\r\n\r\nexport function convertDatetoAddDB(date) {\r\n  var dateSplit = date.split(\" \");\r\n  return dateSplit[0] + \"T\" + dateSplit[1] + \"+00:00\";\r\n}\r\n\r\nexport async function getIPAddress() {\r\n  const res = await axios.get('https://geolocation-db.com/json/')\r\n  // console.log(res.data);\r\n  // return res.data\r\n  return \"country_code:\" + res.data.country_code + \",country_name:\" + res.data.country_name + \",city:\" + res.data.city + \",postal:\" + res.data.postal\r\n    + \",latitude:\" + res.data.latitude + \",longitude:\" + res.data.longitude + \",IPv4:\" + res.data.IPv4 + \",state:\" + res.data.state\r\n  // setIP(res.data.IPv4)\r\n  // return\r\n}\r\nexport function bytesToSize(bytes) {\r\n  var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  if (bytes == 0) return '0 Byte';\r\n  var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n}\r\n\r\n\r\nexport function bytesToMB(bytes) {\r\n  return Number.parseFloat(bytes / (1024 * 1024)).toFixed(2);\r\n}\r\n\r\n\r\nexport async function getDatediff(startDate) {\r\n\r\n  const timeEnd = moment();\r\n  const newStartDate = new Date(startDate);\r\n  const newEndDate = new Date(timeEnd);\r\n  const one_day = 1000 * 60 * 60 * 24;\r\n  let result\r\n  result = Math.ceil((newStartDate.getTime() - newEndDate.getTime()) / (one_day))\r\n  console.log('date Converter result', result)\r\n\r\n\r\n  return result - 1;\r\n}\r\n\r\n\r\nexport function getCurrentDate(separator = '') {\r\n\r\n  let newDate = new Date()\r\n  let date = newDate.getDate();\r\n  let month = newDate.getMonth() + 1;\r\n  let year = newDate.getFullYear();\r\n\r\n  return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`\r\n}\r\n"]},"metadata":{},"sourceType":"module"}